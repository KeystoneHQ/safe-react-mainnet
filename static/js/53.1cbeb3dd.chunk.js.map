{"version":3,"sources":["routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","logic/tokens/store/actions/fetchTokens.ts","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts","routes/safe/components/CurrencyDropdown/index.tsx","logic/safe/hooks/useFetchTokens.tsx","logic/currencyValues/store/actions/fetchSelectedCurrency.ts","routes/safe/components/Balances/index.tsx"],"names":["setImageToPlaceholder","event","img","currentTarget","test","src","TokenPlaceholder","getERC20TokenContract","memoize","tokenAddress","getWeb3","eth","Contract","ERC20Contract","abi","getERC721TokenContract","ERC721Contract","fetchTokens","dispatch","getState","a","currentSavedTokens","tokensSelector","fetchErc20AndErc721AssetsList","resp","tokenList","data","results","logError","Errors","_600","message","erc20Tokens","filter","token","type","toLowerCase","size","length","tokens","List","map","makeToken","addTokens","ListItemIcon","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","theme","minWidth","color","palette","action","active","flexShrink","display","marginTop","name","buttonWidth","useDropdownStyles","makeStyles","listItem","maxWidth","boxSizing","listItemSearch","padding","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","height","width","etherFlag","iconLeft","marginRight","iconRight","marginLeft","button","backgroundColor","border","borderRadius","cursor","fontSize","fontWeight","lineHeight","outline","textAlign","opacity","buttonInner","position","borderLeft","borderRight","borderTop","content","right","top","openMenuButton","borderBottom","dropdownItemsScrollWrapper","maxHeight","overflow","search","searchIcon","justifyContent","left","margin","pointerEvents","transform","fill","inputRoot","inputInput","nativeCoin","getNetworkInfo","CurrencyDropdown","useDispatch","useState","anchorEl","setAnchorEl","selectedCurrency","useSelector","currentCurrencySelector","searchParams","setSearchParams","currenciesList","availableCurrenciesSelector","tokenImage","logoUri","currenciesListFiltered","currency","includes","handleClose","DropdownListTheme","onClick","classNames","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","onClose","open","Boolean","transformOrigin","TransitionProps","mountOnEnter","unmountOnExit","MenuItem","key","InputBase","input","inputProps","onChange","target","value","placeholder","currencyName","newCurrencySelectedName","setSelectedCurrency","sameString","symbol","Img","alt","toLocaleLowerCase","onError","ListItemText","primary","CheckIcon","useFetchTokens","safeAddress","location","useLocation","currentCurrency","useMemo","COINS_LOCATION_REGEX","pathname","batch","loadSelectedCurrency","storedSelectedCurrency","console","error","Promise","resolve","fetchSafeTokens","COLLECTIBLES_LOCATION_REGEX","fetchCollectibles","Collectibles","lazy","Coins","MANAGE_TOKENS_BUTTON_TEST_ID","BALANCE_ROW_TEST_ID","INITIAL_STATE","erc721Enabled","showToken","sendFunds","isOpen","selectedToken","showReceive","Balances","state","setState","matchSafeWithAction","useRouteMatch","path","SAFELIST_ADDRESS","currentSafeWithNames","address","featuresEnabled","safeName","useEffect","FEATURES","ERC721","prevState","balancesSection","onHide","showSendFunds","url","generatePath","SAFE_ROUTES","ASSETS_BALANCES","ASSETS_COLLECTIBLES","Col","start","sm","xs","iconType","text","exact","render","end","to","wrapInSuspense","showReceiveFunds","SendModal","activeScreenType","Modal","description","paperClassName","title","ReceiveModal"],"mappings":"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","file":"static/js/53.1cbeb3dd.chunk.js","sourcesContent":["import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (event: SyntheticEvent<HTMLImageElement, Event>): void => {\n  const img = event.currentTarget\n  if (!/token_placeholder/.test(img.src)) {\n    img.src = TokenPlaceholder\n  }\n}\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","import ERC20Contract from '@openzeppelin/contracts/build/contracts/ERC20.json'\nimport ERC721Contract from '@openzeppelin/contracts/build/contracts/ERC721.json'\nimport { List } from 'immutable'\nimport memoize from 'lodash.memoize'\nimport { AnyAction } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AbiItem } from 'web3-utils'\n\nimport { ERC20 } from 'src/types/contracts/ERC20.d'\nimport { ERC721 } from 'src/types/contracts/ERC721.d'\nimport { addTokens } from 'src/logic/tokens/store/actions/addTokens'\nimport { fetchErc20AndErc721AssetsList } from 'src/logic/tokens/api'\nimport { makeToken } from 'src/logic/tokens/store/model/token'\nimport { tokensSelector } from 'src/logic/tokens/store/selectors'\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { AppReduxState } from 'src/store'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { TokenResult } from '../../api/fetchErc20AndErc721AssetsList'\n\nconst createERC20TokenContract = (tokenAddress: string): ERC20 => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract(ERC20Contract.abi as AbiItem[], tokenAddress) as unknown as ERC20\n}\n\nconst createERC721TokenContract = (tokenAddress: string): ERC721 => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract(ERC721Contract.abi as AbiItem[], tokenAddress) as unknown as ERC721\n}\n\nexport const getERC20TokenContract = memoize(createERC20TokenContract)\n\nexport const getERC721TokenContract = memoize(createERC721TokenContract)\n\nexport const containsMethodByHash = async (contractAddress: string, methodHash: string): Promise<boolean> => {\n  const web3 = getWeb3()\n  const byteCode = await web3.eth.getCode(contractAddress)\n\n  return byteCode.indexOf(methodHash.replace('0x', '')) !== -1\n}\n\nexport const fetchTokens =\n  () =>\n  async (\n    dispatch: ThunkDispatch<AppReduxState, undefined, AnyAction>,\n    getState: () => AppReduxState,\n  ): Promise<void> => {\n    const currentSavedTokens = tokensSelector(getState())\n\n    let tokenList: TokenResult[]\n    try {\n      const resp = await fetchErc20AndErc721AssetsList()\n      tokenList = resp.data.results\n    } catch (e) {\n      logError(Errors._600, e.message)\n      return\n    }\n\n    const erc20Tokens = tokenList.filter((token) => token.type.toLowerCase() === 'erc20')\n\n    if (currentSavedTokens?.size === erc20Tokens.length) {\n      return\n    }\n\n    const tokens = List(erc20Tokens.map((token) => makeToken(token)))\n\n    dispatch(addTokens(tokens))\n  }\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","export default __webpack_public_path__ + \"static/media/check.7da64643.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst buttonWidth = '140px'\nexport const useDropdownStyles = makeStyles({\n  listItem: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    boxSizing: 'border-box',\n  },\n  listItemSearch: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    padding: '0',\n    boxSizing: 'border-box',\n  },\n  localFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    height: '20px !important',\n    width: '26px !important',\n  },\n  etherFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    width: '26px',\n    height: '26px',\n  },\n  iconLeft: {\n    marginRight: '10px',\n  },\n  iconRight: {\n    marginLeft: '18px',\n  },\n  button: {\n    backgroundColor: '#e8e7e6',\n    border: 'none',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    color: '#5d6d74',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    height: '24px',\n    lineHeight: '1.33',\n    marginRight: '20px',\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    outline: 'none',\n    padding: '0',\n    textAlign: 'left',\n    '&:active': {\n      opacity: '0.8',\n    },\n  },\n  buttonInner: {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '100%',\n    lineHeight: '24px',\n    padding: '0 22px 0 8px',\n    position: 'relative',\n    width: '100%',\n    '&::after': {\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: '5px solid #5d6d74',\n      content: '\"\"',\n      height: '0',\n      position: 'absolute',\n      right: '8px',\n      top: '9px',\n      width: '0',\n    },\n  },\n  openMenuButton: {\n    '&::after': {\n      borderBottom: '5px solid #5d6d74',\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: 'none',\n    },\n  },\n  dropdownItemsScrollWrapper: {\n    maxHeight: '280px',\n    overflow: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: '0',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    marginRight: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    left: '12px',\n    margin: '0',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '18px',\n    '& path': {\n      fill: '#b2b5b2',\n    },\n  },\n  inputRoot: {\n    color: '#5d6d74',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    lineHeight: '1.43',\n    width: '100%',\n  },\n  inputInput: {\n    boxSizing: 'border-box',\n    height: '44px',\n    padding: '12px 12px 12px 40px',\n    width: '100%',\n  },\n})\n","import InputBase from '@material-ui/core/InputBase'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport classNames from 'classnames'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CheckIcon from './img/check.svg'\n\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\nimport { availableCurrenciesSelector, currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\nimport { DropdownListTheme } from 'src/theme/mui'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport Img from 'src/components/layout/Img/index'\nimport { getNetworkInfo } from 'src/config'\nimport { sameString } from 'src/utils/strings'\n\nconst { nativeCoin } = getNetworkInfo()\n\nexport const CurrencyDropdown = (): React.ReactElement | null => {\n  const dispatch = useDispatch()\n  const [anchorEl, setAnchorEl] = useState(null)\n  const selectedCurrency = useSelector(currentCurrencySelector)\n  const [searchParams, setSearchParams] = useState('')\n  const currenciesList = useSelector(availableCurrenciesSelector)\n  const tokenImage = nativeCoin.logoUri\n  const classes = useDropdownStyles({})\n  const currenciesListFiltered = currenciesList.filter((currency) =>\n    currency.toLowerCase().includes(searchParams.toLowerCase()),\n  )\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n    import('currency-flags/dist/currency-flags.min.css' as string)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onCurrentCurrencyChangedHandler = (newCurrencySelectedName: string) => {\n    dispatch(setSelectedCurrency({ selectedCurrency: newCurrencySelectedName }))\n    handleClose()\n  }\n\n  if (!selectedCurrency) {\n    return null\n  }\n\n  return (\n    <MuiThemeProvider theme={DropdownListTheme}>\n      <>\n        <button className={classes.button} onClick={handleClick} type=\"button\">\n          <span className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}>\n            {selectedCurrency}\n          </span>\n        </button>\n        <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            horizontal: 'center',\n            vertical: 'bottom',\n          }}\n          elevation={0}\n          getContentAnchorEl={null}\n          id=\"customizedMenu\"\n          keepMounted\n          onClose={handleClose}\n          open={Boolean(anchorEl)}\n          transformOrigin={{\n            horizontal: 'center',\n            vertical: 'top',\n          }}\n          TransitionProps={{ mountOnEnter: true, unmountOnExit: true }}\n        >\n          <MenuItem className={classes.listItemSearch} key=\"0\">\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(event) => setSearchParams(event.target.value)}\n                placeholder=\"Search…\"\n                value={searchParams}\n              />\n            </div>\n          </MenuItem>\n          <div className={classes.dropdownItemsScrollWrapper}>\n            {currenciesListFiltered.map((currencyName) => (\n              <MenuItem\n                className={classes.listItem}\n                key={currencyName}\n                onClick={() => onCurrentCurrencyChangedHandler(currencyName)}\n                value={currencyName}\n              >\n                <ListItemIcon className={classes.iconLeft}>\n                  {sameString(currencyName, nativeCoin.symbol) ? (\n                    <Img\n                      alt={nativeCoin.symbol.toLocaleLowerCase()}\n                      onError={setImageToPlaceholder}\n                      src={tokenImage}\n                      className={classNames(classes.etherFlag)}\n                    />\n                  ) : (\n                    <div\n                      className={classNames(\n                        classes.localFlag,\n                        'currency-flag',\n                        'currency-flag-lg',\n                        `currency-flag-${currencyName.toLowerCase()}`,\n                      )}\n                    />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={currencyName} />\n                {currencyName === selectedCurrency ? (\n                  <ListItemIcon className={classes.iconRight}>\n                    <img alt=\"checked\" src={CheckIcon} />\n                  </ListItemIcon>\n                ) : null}\n              </MenuItem>\n            ))}\n          </div>\n        </Menu>\n      </>\n    </MuiThemeProvider>\n  )\n}\n","import { useMemo } from 'react'\nimport { batch, useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\n\nimport { fetchCollectibles } from 'src/logic/collectibles/store/actions/fetchCollectibles'\nimport { fetchSelectedCurrency } from 'src/logic/currencyValues/store/actions/fetchSelectedCurrency'\nimport { fetchSafeTokens } from 'src/logic/tokens/store/actions/fetchSafeTokens'\nimport { fetchTokens } from 'src/logic/tokens/store/actions/fetchTokens'\nimport { COINS_LOCATION_REGEX, COLLECTIBLES_LOCATION_REGEX } from 'src/routes/safe/components/Balances'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\n\nexport const useFetchTokens = (safeAddress: string): void => {\n  const dispatch = useDispatch<Dispatch>()\n  const location = useLocation()\n  const currentCurrency = useSelector(currentCurrencySelector)\n\n  useMemo(() => {\n    if (COINS_LOCATION_REGEX.test(location.pathname)) {\n      batch(() => {\n        // fetch tokens there to get symbols for tokens in TXs list\n        dispatch(fetchTokens())\n        dispatch(fetchSelectedCurrency())\n        dispatch(fetchSafeTokens(safeAddress, currentCurrency))\n      })\n    }\n\n    if (COLLECTIBLES_LOCATION_REGEX.test(location.pathname)) {\n      dispatch(fetchCollectibles(safeAddress))\n    }\n  }, [dispatch, location.pathname, safeAddress, currentCurrency])\n}\n","import { Action } from 'redux-actions'\nimport { ThunkDispatch } from 'redux-thunk'\n\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\n\nimport { loadSelectedCurrency } from 'src/logic/safe/utils/currencyValuesStorage'\nimport { AppReduxState } from 'src/store'\nimport { SelectedCurrencyPayload } from 'src/logic/currencyValues/store/reducer/currencyValues'\n\nexport const fetchSelectedCurrency =\n  () =>\n  async (dispatch: ThunkDispatch<AppReduxState, undefined, Action<SelectedCurrencyPayload>>): Promise<void> => {\n    try {\n      const storedSelectedCurrency = await loadSelectedCurrency()\n      dispatch(setSelectedCurrency({ selectedCurrency: storedSelectedCurrency || 'USD' }))\n    } catch (err) {\n      console.error('Error fetching currency values', err)\n    }\n    return Promise.resolve()\n  }\n","import { Breadcrumb, BreadcrumbElement, Menu } from '@gnosis.pm/safe-react-components'\nimport React, { ReactElement, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { generatePath, Redirect, Route, Switch, useRouteMatch } from 'react-router-dom'\n\nimport Col from 'src/components/layout/Col'\nimport Modal from 'src/components/Modal'\nimport ReceiveModal from 'src/components/App/ReceiveModal'\n\nimport { SAFE_ROUTES, SAFELIST_ADDRESS } from 'src/routes/routes'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\nimport { CurrencyDropdown } from 'src/routes/safe/components/CurrencyDropdown'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\n\nimport { wrapInSuspense } from 'src/utils/wrapInSuspense'\nimport { useFetchTokens } from 'src/logic/safe/hooks/useFetchTokens'\nimport { FEATURES } from 'src/config/networks/network.d'\n\nconst Collectibles = React.lazy(() => import('src/routes/safe/components/Balances/Collectibles'))\nconst Coins = React.lazy(() => import('src/routes/safe/components/Balances/Coins'))\n\nexport const MANAGE_TOKENS_BUTTON_TEST_ID = 'manage-tokens-btn'\nexport const BALANCE_ROW_TEST_ID = 'balance-row'\n\nconst INITIAL_STATE = {\n  erc721Enabled: false,\n  showToken: false,\n  sendFunds: {\n    isOpen: false,\n    selectedToken: '',\n  },\n  showReceive: false,\n}\n\nexport const COINS_LOCATION_REGEX = /\\/balances\\/?$/\nexport const COLLECTIBLES_LOCATION_REGEX = /\\/balances\\/collectibles$/\n\nconst Balances = (): ReactElement => {\n  const [state, setState] = useState(INITIAL_STATE)\n  const matchSafeWithAction = useRouteMatch({\n    path: `${SAFELIST_ADDRESS}/:safeAddress/:safeAction/:safeSubaction?`,\n  }) as {\n    url: string\n    params: Record<string, string>\n  }\n\n  const { address: safeAddress, featuresEnabled, name: safeName } = useSelector(currentSafeWithNames)\n\n  useFetchTokens(safeAddress)\n\n  useEffect(() => {\n    const erc721Enabled = Boolean(featuresEnabled?.includes(FEATURES.ERC721))\n\n    setState((prevState) => ({\n      ...prevState,\n      erc721Enabled,\n    }))\n  }, [featuresEnabled])\n\n  const onShow = (action) => {\n    setState((prevState) => ({ ...prevState, [`show${action}`]: true }))\n  }\n\n  const onHide = (action) => {\n    setState((prevState) => ({ ...prevState, [`show${action}`]: false }))\n  }\n\n  const showSendFunds = (tokenAddress: string): void => {\n    setState((prevState) => ({\n      ...prevState,\n      sendFunds: {\n        isOpen: true,\n        selectedToken: tokenAddress,\n      },\n    }))\n  }\n\n  const hideSendFunds = () => {\n    setState((prevState) => ({\n      ...prevState,\n      sendFunds: {\n        isOpen: false,\n        selectedToken: '',\n      },\n    }))\n  }\n\n  const { erc721Enabled, sendFunds, showReceive } = state\n\n  let balancesSection\n  switch (matchSafeWithAction.url) {\n    case generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n      safeAddress,\n    }):\n      balancesSection = 'Coins'\n      break\n    case generatePath(SAFE_ROUTES.ASSETS_COLLECTIBLES, {\n      safeAddress,\n    }):\n      balancesSection = 'Collectibles'\n      break\n    default:\n      balancesSection = ''\n  }\n\n  return (\n    <>\n      <Menu>\n        <Col start=\"sm\" sm={6} xs={12}>\n          <Breadcrumb>\n            <BreadcrumbElement iconType=\"assets\" text=\"ASSETS\" color=\"primary\" />\n            <BreadcrumbElement text={balancesSection} color=\"placeHolder\" />\n          </Breadcrumb>\n        </Col>\n        <Switch>\n          <Route\n            path={generatePath(SAFE_ROUTES.ASSETS_COLLECTIBLES, {\n              safeAddress,\n            })}\n            exact\n            render={() => {\n              return !erc721Enabled ? (\n                <Redirect\n                  to={generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n                    safeAddress,\n                  })}\n                />\n              ) : (\n                <Col end=\"sm\" sm={6} xs={12}></Col>\n              )\n            }}\n          />\n          <Route\n            path={generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n              safeAddress,\n            })}\n            exact\n            render={() => (\n              <Col end=\"sm\" sm={6} xs={12}>\n                <CurrencyDropdown />\n              </Col>\n            )}\n          />\n        </Switch>\n      </Menu>\n      <Switch>\n        <Route\n          path={generatePath(SAFE_ROUTES.ASSETS_COLLECTIBLES, {\n            safeAddress,\n          })}\n          exact\n          render={() => {\n            if (erc721Enabled) {\n              return wrapInSuspense(<Collectibles />)\n            }\n            return null\n          }}\n        />\n        <Route\n          path={generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n            safeAddress,\n          })}\n          render={() => {\n            return wrapInSuspense(<Coins showReceiveFunds={() => onShow('Receive')} showSendFunds={showSendFunds} />)\n          }}\n        />\n      </Switch>\n      <SendModal\n        activeScreenType=\"sendFunds\"\n        isOpen={sendFunds.isOpen}\n        onClose={hideSendFunds}\n        selectedToken={sendFunds.selectedToken}\n      />\n      <Modal\n        description=\"Receive Tokens Form\"\n        handleClose={() => onHide('Receive')}\n        open={showReceive}\n        paperClassName=\"receive-modal\"\n        title=\"Receive Tokens\"\n      >\n        <ReceiveModal safeAddress={safeAddress} safeName={safeName} onClose={() => onHide('Receive')} />\n      </Modal>\n    </>\n  )\n}\n\nexport default Balances\n"],"sourceRoot":""}