{"version":3,"sources":["routes/safe/components/Settings/RemoveSafeModal/style.ts","routes/safe/components/Settings/RemoveSafeModal/index.tsx"],"names":["useStyles","makeStyles","createStyles","heading","boxSizing","justifyContent","minHeight","padding","sm","lg","container","manage","fontSize","close","height","width","owner","md","alignItems","description","RemoveSafeModal","isOpen","onClose","classes","useSelector","currentSafeWithNames","safeAddress","address","safeName","name","defaultSafe","defaultSafeSelector","dispatch","useDispatch","onRemoveSafeHandler","a","removeSafe","sameAddress","setDefaultSafe","history","push","pathname","WELCOME_ADDRESS","Modal","handleClose","open","paperClassName","title","Row","align","className","grow","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","Block","Col","xs","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","size","Footer","Buttons","cancelButtonProps","confirmButtonProps","color","text"],"mappings":"0OAIaA,EAAYC,YACvBC,YAAa,CACXC,QAAS,CACPC,UAAW,aACXC,eAAgB,gBAChBC,UAAW,OACXC,QAAQ,GAAD,OAAKC,KAAL,YAAWC,OAEpBC,UAAW,CACTJ,UAAW,QACXC,QAAQ,GAAD,OAAKC,OAEdG,OAAQ,CACNC,SAAUH,MAEZI,MAAO,CACLC,OAAQ,OACRC,MAAO,QAETC,MAAO,CACLT,QAASU,KACTC,WAAY,UAEdC,YAAa,CACXZ,QAASU,S,gHCqEAG,UArES,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,QAC3BC,EAAUvB,IADyE,EAExCwB,YAAYC,KAA5CC,EAFwE,EAEjFC,QAA4BC,EAFqD,EAE3DC,KACxBC,EAAcN,YAAYO,KAC1BC,EAAWC,cAEXC,EAAmB,uCAAG,sBAAAC,EAAA,sDAC1BH,EAASI,YAAWV,IAEhBW,YAAYX,EAAaI,IAC3BE,EAASM,YAAe,KAG1BhB,IACAiB,IAAQC,KAAK,CACXC,SAAS,GAAD,OAAKC,OATW,2CAAH,qDAazB,OACE,kBAACC,EAAA,EAAD,CACExB,YAAY,2BACZyB,YAAatB,EACbuB,KAAMxB,EACNyB,eAAe,QACfC,MAAM,eAEN,kBAACC,EAAA,EAAD,CAAKC,MAAM,SAASC,UAAW3B,EAAQpB,QAASgD,MAAI,GAClD,kBAACC,EAAA,EAAD,CAAWF,UAAW3B,EAAQZ,OAAQ0C,UAAQ,EAACC,OAAO,UAAtD,eAGA,kBAACC,EAAA,EAAD,CAAYC,eAAa,EAACC,QAASnC,GACjC,kBAAC,IAAD,CAAO4B,UAAW3B,EAAQV,UAG9B,kBAAC6C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOT,UAAW3B,EAAQb,WACxB,kBAACsC,EAAA,EAAD,CAAKE,UAAW3B,EAAQP,OACtB,kBAAC4C,EAAA,EAAD,CAAKX,MAAM,SAASY,GAAI,IACtB,kBAAC,cAAD,CACEC,KAAMpC,EACNG,KAAMD,EACNmC,YAAU,EACVC,aAAW,EACXC,YAAaC,YAAgBxC,OAInC,kBAACsB,EAAA,EAAD,CAAKE,UAAW3B,EAAQJ,aACtB,kBAACiC,EAAA,EAAD,CAAWC,UAAQ,EAACc,KAAK,MAAzB,wDACuD,0DADvD,4DAMJ,kBAAC,IAAaC,OAAd,KACE,kBAAC,IAAaA,OAAOC,QAArB,CACEC,kBAAmB,CAAEb,QAASnC,GAC9BiD,mBAAoB,CAClBd,QAASvB,EACTsC,MAAO,QACPC,KAAM","file":"static/js/97.c1d9d626.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      boxSizing: 'border-box',\n      justifyContent: 'space-between',\n      minHeight: '74px',\n      padding: `${sm} ${lg}`,\n    },\n    container: {\n      minHeight: '369px',\n      padding: `${sm}`,\n    },\n    manage: {\n      fontSize: lg,\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n    owner: {\n      padding: md,\n      alignItems: 'center',\n    },\n    description: {\n      padding: md,\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useStyles } from './style'\n\nimport { history } from 'src/store'\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentSafeWithNames, defaultSafe as defaultSafeSelector } from 'src/logic/safe/store/selectors'\nimport { WELCOME_ADDRESS } from 'src/routes/routes'\nimport removeSafe from 'src/logic/safe/store/actions/removeSafe'\nimport setDefaultSafe from 'src/logic/safe/store/actions/setDefaultSafe'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\nimport { getExplorerInfo } from 'src/config'\nimport Col from 'src/components/layout/Col'\n\ntype RemoveSafeModalProps = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst RemoveSafeModal = ({ isOpen, onClose }: RemoveSafeModalProps): React.ReactElement => {\n  const classes = useStyles()\n  const { address: safeAddress, name: safeName } = useSelector(currentSafeWithNames)\n  const defaultSafe = useSelector(defaultSafeSelector)\n  const dispatch = useDispatch()\n\n  const onRemoveSafeHandler = async () => {\n    dispatch(removeSafe(safeAddress))\n\n    if (sameAddress(safeAddress, defaultSafe)) {\n      dispatch(setDefaultSafe(''))\n    }\n\n    onClose()\n    history.push({\n      pathname: `${WELCOME_ADDRESS}`,\n    })\n  }\n\n  return (\n    <Modal\n      description=\"Remove the selected Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"modal\"\n      title=\"Remove Safe\"\n    >\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove Safe\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <Row className={classes.owner}>\n          <Col align=\"center\" xs={12}>\n            <EthHashInfo\n              hash={safeAddress}\n              name={safeName}\n              showAvatar\n              showCopyBtn\n              explorerUrl={getExplorerInfo(safeAddress)}\n            />\n          </Col>\n        </Row>\n        <Row className={classes.description}>\n          <Paragraph noMargin size=\"lg\">\n            Removing a Safe only removes it from your interface. <b>It does not delete the Safe</b>. You can always add\n            it back using the Safe&apos;s address.\n          </Paragraph>\n        </Row>\n      </Block>\n      <GenericModal.Footer>\n        <GenericModal.Footer.Buttons\n          cancelButtonProps={{ onClick: onClose }}\n          confirmButtonProps={{\n            onClick: onRemoveSafeHandler,\n            color: 'error',\n            text: 'Remove',\n          }}\n        />\n      </GenericModal.Footer>\n    </Modal>\n  )\n}\n\nexport default RemoveSafeModal\n"],"sourceRoot":""}