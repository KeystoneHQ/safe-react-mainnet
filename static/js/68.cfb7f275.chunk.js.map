{"version":3,"sources":["components/Divider/index.tsx","utils/url.ts","routes/safe/components/Apps/components/ConfirmTxModal/SafeAppLoadError.tsx","components/ModalTitle/index.tsx","components/DecodeTxs/index.tsx","utils/decodeTx.ts","routes/safe/components/Apps/components/ConfirmTxModal/ReviewConfirm.tsx","routes/safe/components/Apps/components/ConfirmTxModal/DecodedTxDetail.tsx","routes/safe/components/Apps/components/AppCard/index.tsx","routes/safe/components/Apps/components/ConfirmTxModal/index.tsx","routes/safe/components/Apps/hooks/useIframeMessageHandler.ts","routes/safe/components/Apps/hooks/useLegalConsent.ts","routes/safe/components/Apps/components/LegalDisclaimer.tsx","routes/safe/components/Apps/communicator.ts","routes/safe/components/Apps/components/AppFrame.tsx","routes/safe/components/Apps/components/AppCard/skeleton.tsx","logic/configService/index.ts","routes/safe/components/Apps/assets/addApp.svg","routes/safe/components/Apps/components/AddAppForm/AppAgreement.tsx","logic/hooks/useDebounce.tsx","routes/safe/components/Apps/components/AddAppForm/AppUrl.tsx","routes/safe/components/Apps/components/AddAppForm/FormButtons.tsx","routes/safe/components/Apps/components/AddAppForm/index.tsx","routes/safe/components/Apps/components/AppsList.tsx","routes/safe/components/Apps/hooks/useAppList.ts","routes/safe/components/Apps/index.tsx"],"names":["Wrapper","styled","div","StyledDivider","DividerSRC","Divider","withArrow","type","size","isValidURL","url","protocolsAllowed","urlInfo","URL","includes","protocol","error","IconText","FooterWrapper","SafeAppLoadError","onTxReject","onClose","color","cancelText","handleCancel","handleOk","okDisabled","okText","StyledParagraph","Paragraph","lg","IconImg","img","TitleWrapper","StyledRow","Row","md","StyledClose","Close","GoBackWrapper","ModalTitle","goBack","iconUrl","title","align","grow","IconButton","onClick","alt","src","noMargin","weight","disableRipple","FlexWrapper","margin","BasicTxInfoWrapper","TxList","theme","colors","separator","TxListItem","ElementWrapper","BasicTxInfo","txRecipient","txData","txValue","nativeCoin","getNetworkInfo","strong","symbol","hash","showAvatar","textSize","showCopyBtn","explorerUrl","getExplorerInfo","web3","utils","hexToBytes","length","textToCopy","getParameterElement","parameter","index","valueElement","value","startsWith","endsWith","JSON","stringify","e","key","name","SingleTx","decodedData","onTxItemClick","iconSize","iconType","text","method","MultiSendTx","txs","get","map","tx","dataDecoded","DecodeTxs","fetchTxDecoder","a","getTxServiceUrl","axios","post","data","res","Container","TransactionFeesWrapper","background","sm","DecodeTxsWrapper","StyledBlock","Block","ReviewConfirm","app","safeAddress","ethBalance","safeName","params","hidden","onUserConfirm","areTxsMalformed","showDecodedTxData","isMultiSend","useState","setDecodedData","dispatch","useDispatch","useMemo","getMultisendContractAddress","to","encodeMultiSendCall","web3ReadOnly","toBN","toString","operation","DELEGATE_CALL","CALL","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","useEstimateTransactionGas","txAmount","safeTxGas","gasLimit","gasPriceFormatted","gasEstimation","isOffChainSignature","isCreation","isExecution","gasCostFormatted","txEstimationExecutionStatus","useEstimationStatus","buttonStatus","setButtonStatus","useEffect","decodeTxData","handleTxRejection","handleUserConfirmation","safeTxHash","EditableTxParameters","ethGasLimit","ethGasPrice","Math","max","closeEditModalCallback","txParameters","oldGasPrice","Number","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","Hairline","fromTokenUnit","decimals","TxParametersDetail","onEdit","isTransactionCreation","isTransactionExecution","EstimationStatus","LOADING","Modal","Footer","withoutBorder","Buttons","cancelButtonProps","confirmButtonProps","ButtonStatus","createTransaction","valueInWei","origin","id","navigateToTransactionsTab","txNonce","safeNonce","undefined","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","READY","confirmTransactions","disabled","status","TriggerType","DecodedTxDetail","body","hideDecodedTxData","decodedTxData","parameters","p","ConfirmTxModal","props","decodedTxDetails","setDecodedTxDetails","some","t","test","mustBeEthereumAddress","isTxValid","description","open","isOpen","NETWORK_NAME","getNetworkName","APPS_LEGAL_CONSENT_RECEIVED","LegalDisclaimer","onCancel","onConfirm","href","rel","target","AppCommunicator","iframeRef","handlers","Map","on","handler","set","isValidMessage","msg","sentFromIframe","source","parent","window","knownMethod","Object","values","METHODS","canHandleMessage","Boolean","send","requestId","sdkVersion","getSDKVersion","MessageFormatter","makeErrorResponse","makeResponse","current","contentWindow","postMessage","handleIncomingMessage","validMessage","hasHandler","response","message","trackError","Errors","_901","contexts","safeApp","request","clear","removeEventListener","this","addEventListener","OwnerDisclaimer","AppWrapper","StyledCard","Card","StyledIframe","iframe","isLoading","NETWORK_ID","getNetworkId","INITIAL_CONFIRM_TX_MODAL_STATE","safeAppWeb3Provider","Web3","providers","HttpProvider","getSafeAppsRpcServiceUrl","timeout","AppFrame","appUrl","granted","useSelector","grantedSelector","currentSafe","address","owners","threshold","state","addressBookEntryName","trackEvent","useAnalytics","history","useHistory","consentReceived","setConsentReceived","loadFromStorage","storedConsentReceived","checkLegalDisclaimer","onConsentReceipt","useCallback","saveToStorage","useLegalConsent","useRef","confirmTransactionModal","setConfirmTransactionModal","appIsLoading","setAppIsLoading","setSafeApp","timer","appTimeout","setAppTimeout","setTimeout","TIMEOUT","clearTimeout","openConfirmationModal","closeConfirmationModal","sendMessageToIframe","selectedApp","closeModal","useSnackbar","enqueueSnackbar","closeSnackbar","currentSafeWithNames","requestWithMessage","trunc","performance","now","version","handleIframeMessage","messageId","messagePayload","SDK_MESSAGES","SEND_TRANSACTIONS","SAFE_APP_SDK_INITIALIZED","safeInfoMessage","INTERFACE_MESSAGES","ON_SAFE_INFO","network","toLowerCase","envInfoMessage","ENV_INFO","txServiceUrl","console","onIframeMessage","useIframeMessageHandler","onIframeLoad","url1","url2","b","isSameURL","communicator","setCommunicator","communicatorInstance","initCommunicator","useAppCommunicator","fetchSafeTransaction","chainId","currency","fetchTokenCurrenciesBalances","selectedCurrency","balances","Promise","resolve","reject","jsonrpc","call","err","result","getAppInfoFromUrl","logError","_900","loadApp","category","SAFE_NAVIGATION_EVENT","action","label","Error","push","generatePath","SAFE_ROUTES","ASSETS_BALANCES","style","flexDirection","frameBorder","ref","onLoad","TRANSACTION_CONFIRMED","TRANSACTION_REJECTED","gradientSK","keyframes","AppIconSK","TitleSK","DescriptionSK","StyledAppCard","fade","shadow","secondary","primary","AppName","Title","AppDescription","Text","setAppImageFallback","currentTarget","onerror","appsIconSvg","Endpoints","AppCard","className","buttonText","onError","variant","fetchSafeAppsList","networkId","CONFIG_SERVICE_URL","then","StyledCheckbox","Checkbox","AppAgreement","visited","useFormState","subscription","validate","agreementAccepted","required","Field","component","useDebouncedCallback","callback","delay","options","debounce","validateUrl","appUrlResolver","createDecorator","field","updates","isValidEnsName","getIpfsLinkFromEns","ensContent","AppInfoUpdater","onAppInfo","onLoading","debouncedValue","previousValue","setCurrent","debouncedCallback","cancel","useDebounce","useField","input","React","updateAppInfo","appInfo","StyledAppUrlField","AppUrl","appList","composeValidators","uniqueApp","placeholder","TextField","autoComplete","FormButtons","valid","validating","isSubmitDisabled","fieldsVisited","isAppManifestValid","StyledTextFileAppName","AppInfo","StyledLink","Link","AppDocsInfo","WrapperLoader","StyledLoader","Loader","INITIAL_VALUES","DEFAULT_APP_INFO","getEmptySafeApp","AddApp","safeAddressFromUrl","appsPath","APPS","setAppInfo","fetchError","setFetchError","setIsLoading","handleSubmit","APPS_STORAGE_KEY","persistedAppList","newAppList","goToApp","encodeURI","_903","GnoForm","decorators","initialValues","onSubmit","testId","Body","as","Img","width","readOnly","meta","onChange","centerCSS","css","LoadingContainer","CardsWrapper","ContentWrapper","IconBtn","AppContainer","AppsList","setAppList","apiAppsList","setApiAppsList","customAppList","setCustomAppList","loadAppsList","_902","NOTIFICATIONS","SAFE_APPS_FETCH_ERROR_MSG","fetchAppCallback","prevStatus","cpPrevStatus","appIndex","findIndex","newStatus","SAFE_APP_FETCH_STATUS","ERROR","SUCCESS","fetchStatus","sort","localeCompare","storageAppList","custom","customApps","filter","persistedApp","apps","networks","trim","forEach","appFromUrl","formatedApp","catch","loadApps","removeApp","list","newList","newPersistedList","useAppList","isAddAppModalOpen","setIsAddAppModalOpen","appToRemove","setAppToRemove","closeAddAppModal","Col","start","xs","AddAppIcon","stopPropagation","handleClose","Header","AddAppForm","Apps","getAppUrl","useSafeAppUrl"],"mappings":"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","file":"static/js/68.cfb7f275.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Icon, Divider as DividerSRC } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 8px 0;\n\n  svg {\n    margin: 0 12px 0 4px;\n  }\n`\nconst StyledDivider = styled(DividerSRC)`\n  width: 100%;\n`\n\ntype Props = {\n  withArrow?: boolean\n}\n\nconst Divider = ({ withArrow }: Props): ReactElement => (\n  <Wrapper>\n    {withArrow && <Icon type=\"arrowDown\" size=\"md\" />}\n    <StyledDivider />\n  </Wrapper>\n)\n\nexport default Divider\n","export const isValidURL = (url: string, protocolsAllowed = ['https:', 'http:']): boolean => {\n  try {\n    const urlInfo = new URL(url)\n    return protocolsAllowed.includes(urlInfo.protocol)\n  } catch (error) {\n    return false\n  }\n}\n\nexport const isSameURL = (url1: string, url2: string): boolean => {\n  try {\n    const a = new URL(url1)\n    const b = new URL(url2)\n    return a.href === b.href\n  } catch (error) {\n    return false\n  }\n}\n","import React, { ReactElement } from 'react'\nimport { Icon, Text, Title, ModalFooterConfirmation } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\nimport { ConfirmTxModalProps } from '.'\n\nconst IconText = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-right: 4px;\n  }\n`\n\nconst FooterWrapper = styled.div`\n  margin-top: 15px;\n`\n\nexport const SafeAppLoadError = ({ onTxReject, onClose }: ConfirmTxModalProps): ReactElement => {\n  const handleTxRejection = () => {\n    onTxReject()\n    onClose()\n  }\n\n  return (\n    <>\n      <IconText>\n        <Icon color=\"error\" size=\"md\" type=\"info\" />\n        <Title size=\"xs\">Transaction error</Title>\n      </IconText>\n      <Text size=\"lg\">\n        This Safe App initiated a transaction which cannot be processed. Please get in touch with the developer of this\n        Safe App for more information.\n      </Text>\n\n      <FooterWrapper>\n        <ModalFooterConfirmation\n          cancelText=\"Cancel\"\n          handleCancel={() => handleTxRejection()}\n          handleOk={() => {}}\n          okDisabled={true}\n          okText=\"Submit\"\n        />\n      </FooterWrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport { Icon } from '@gnosis.pm/safe-react-components'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { md, lg } from 'src/theme/variables'\nimport Row from 'src/components/layout/Row'\n\nconst StyledParagraph = styled(Paragraph)`\n  && {\n    font-size: ${lg};\n    white-space: nowrap;\n    max-width: 370px;\n    overflow: hidden;\n  }\n`\nconst IconImg = styled.img`\n  width: 20px;\n  margin-right: 10px;\n`\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst StyledRow = styled(Row)`\n  padding: ${md} ${lg};\n  justify-content: space-between;\n  box-sizing: border-box;\n  max-height: 75px;\n`\n\nconst StyledClose = styled(Close)`\n  height: 35px;\n  width: 35px;\n`\n\nconst GoBackWrapper = styled.div`\n  margin-right: 15px;\n`\n\ntype Props = {\n  title: string\n  goBack?: () => void\n  iconUrl?: string\n  onClose?: () => void\n}\n\nconst ModalTitle = ({ goBack, iconUrl, title, onClose }: Props): React.ReactElement => {\n  return (\n    <StyledRow align=\"center\" grow>\n      <TitleWrapper>\n        {goBack && (\n          <GoBackWrapper>\n            <IconButton onClick={goBack}>\n              <Icon type=\"arrowLeft\" size=\"md\" />\n            </IconButton>\n          </GoBackWrapper>\n        )}\n        {iconUrl && <IconImg alt={title} src={iconUrl} />}\n        <StyledParagraph noMargin weight=\"bolder\" title={title}>\n          {title}\n        </StyledParagraph>\n      </TitleWrapper>\n      <IconButton disableRipple onClick={onClose}>\n        <StyledClose />\n      </IconButton>\n    </StyledRow>\n  )\n}\n\nexport default ModalTitle\n","import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Transaction } from '@gnosis.pm/safe-apps-sdk-v1'\nimport { Text, EthHashInfo, CopyToClipboardBtn, IconText, FixedIcon } from '@gnosis.pm/safe-react-components'\nimport get from 'lodash.get'\n\nimport { web3ReadOnly as web3 } from 'src/logic/wallets/getWeb3'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport { DecodedData, DecodedDataBasicParameter, DecodedDataParameterValue } from 'src/types/transactions/decode.d'\nimport { DecodedTxDetail } from 'src/routes/safe/components/Apps/components/ConfirmTxModal'\n\nconst FlexWrapper = styled.div<{ margin: number }>`\n  display: flex;\n  align-items: center;\n\n  > :nth-child(2) {\n    margin-left: ${({ margin }) => margin}px;\n  }\n`\n\nconst BasicTxInfoWrapper = styled.div`\n  margin-bottom: 15px;\n\n  > :nth-child(2) {\n    margin-bottom: 15px;\n  }\n`\n\nconst TxList = styled.div`\n  width: 100%;\n  max-height: 260px;\n  overflow-y: auto;\n  border-top: 2px solid ${({ theme }) => theme.colors.separator};\n`\n\nconst TxListItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  padding: 0 24px;\n  height: 50px;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.separator};\n\n  :hover {\n    cursor: pointer;\n  }\n`\nconst ElementWrapper = styled.div`\n  margin-bottom: 15px;\n`\n\nexport const BasicTxInfo = ({\n  txRecipient,\n  txData,\n  txValue,\n}: {\n  txRecipient: string\n  txData: string\n  txValue: string\n}): ReactElement => {\n  const { nativeCoin } = getNetworkInfo()\n\n  return (\n    <BasicTxInfoWrapper>\n      {/* TO */}\n      <>\n        <Text size=\"lg\" strong>\n          {`Send ${txValue} ${nativeCoin.symbol} to:`}\n        </Text>\n        <EthHashInfo\n          hash={txRecipient}\n          showAvatar\n          textSize=\"lg\"\n          showCopyBtn\n          explorerUrl={getExplorerInfo(txRecipient)}\n        />\n      </>\n      <>\n        {/* Data */}\n        <Text size=\"lg\" strong>\n          Data (hex encoded):\n        </Text>\n        <FlexWrapper margin={5}>\n          <Text size=\"lg\">{txData ? web3.utils.hexToBytes(txData).length : 0} bytes</Text>\n          <CopyToClipboardBtn textToCopy={txData} />\n        </FlexWrapper>\n      </>\n    </BasicTxInfoWrapper>\n  )\n}\n\nexport const getParameterElement = (parameter: DecodedDataBasicParameter, index: number): ReactElement => {\n  let valueElement\n\n  if (parameter.type === 'address') {\n    valueElement = (\n      <EthHashInfo\n        hash={parameter.value}\n        showAvatar\n        textSize=\"lg\"\n        showCopyBtn\n        explorerUrl={getExplorerInfo(parameter.value)}\n      />\n    )\n  }\n\n  if (parameter.type.startsWith('bytes')) {\n    valueElement = (\n      <FlexWrapper margin={5}>\n        <Text size=\"lg\">{web3.utils.hexToBytes(parameter.value).length} bytes</Text>\n        <CopyToClipboardBtn textToCopy={parameter.value} />\n      </FlexWrapper>\n    )\n  }\n\n  if (!valueElement) {\n    let value = parameter.value\n    if (parameter.type.endsWith('[]')) {\n      try {\n        value = JSON.stringify(parameter.value)\n      } catch (e) {}\n    }\n    valueElement = <Text size=\"lg\">{value}</Text>\n  }\n\n  return (\n    <ElementWrapper key={index}>\n      <Text size=\"lg\" strong>\n        {parameter.name} ({parameter.type})\n      </Text>\n      {valueElement}\n    </ElementWrapper>\n  )\n}\n\nconst SingleTx = ({\n  decodedData,\n  onTxItemClick,\n}: {\n  decodedData: DecodedData | null\n  onTxItemClick: (decodedTxDetails: DecodedData) => void\n}): ReactElement | null => {\n  if (!decodedData) {\n    return null\n  }\n\n  return (\n    <TxList>\n      <TxListItem onClick={() => onTxItemClick(decodedData)}>\n        <IconText iconSize=\"sm\" iconType=\"code\" text=\"Contract interaction\" textSize=\"xl\" />\n\n        <FlexWrapper margin={20}>\n          <Text size=\"xl\">{decodedData.method}</Text>\n          <FixedIcon type=\"chevronRight\" />\n        </FlexWrapper>\n      </TxListItem>\n    </TxList>\n  )\n}\n\nconst MultiSendTx = ({\n  decodedData,\n  onTxItemClick,\n}: {\n  decodedData: DecodedData | null\n  onTxItemClick: (decodedTxDetails: DecodedDataParameterValue) => void\n}): ReactElement | null => {\n  const txs: DecodedDataParameterValue[] | undefined = get(decodedData, 'parameters[0].valueDecoded')\n\n  if (!txs) {\n    return null\n  }\n\n  return (\n    <TxList>\n      {txs.map((tx, index) => (\n        <TxListItem key={index} onClick={() => onTxItemClick(tx)}>\n          <IconText iconSize=\"sm\" iconType=\"code\" text=\"Contract interaction\" textSize=\"xl\" />\n\n          <FlexWrapper margin={20}>\n            {tx.dataDecoded && <Text size=\"xl\">{tx.dataDecoded.method}</Text>}\n            <FixedIcon type=\"chevronRight\" />\n          </FlexWrapper>\n        </TxListItem>\n      ))}\n    </TxList>\n  )\n}\n\ntype Props = {\n  txs: Transaction[]\n  decodedData: DecodedData | null\n  onTxItemClick: (decodedTxDetails: DecodedTxDetail) => void\n}\n\nexport const DecodeTxs = ({ txs, decodedData, onTxItemClick }: Props): ReactElement => {\n  return txs.length > 1 ? (\n    <MultiSendTx decodedData={decodedData} onTxItemClick={onTxItemClick} />\n  ) : (\n    <SingleTx decodedData={decodedData} onTxItemClick={onTxItemClick} />\n  )\n}\n","import axios from 'axios'\n\nimport { getTxServiceUrl } from 'src/config'\nimport { DecodedData } from 'src/types/transactions/decode.d'\n\nexport const fetchTxDecoder = async (txData: string): Promise<DecodedData | null> => {\n  if (!txData?.length || txData === '0x') {\n    return null\n  }\n\n  const url = `${getTxServiceUrl()}/data-decoder/`\n  try {\n    const res = await axios.post<DecodedData>(url, { data: txData })\n    return res.data\n  } catch (error) {\n    return null\n  }\n}\n","import React, { ReactElement, useEffect, useMemo, useState } from 'react'\nimport { EthHashInfo, Text } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\n\nimport ModalTitle from 'src/components/ModalTitle'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { getMultisendContractAddress } from 'src/logic/contracts/safeContracts'\nimport { CALL, DELEGATE_CALL, TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { encodeMultiSendCall } from 'src/logic/safe/transactions/multisend'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport { web3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { lg, md, sm } from 'src/theme/variables'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { BasicTxInfo, DecodeTxs } from 'src/components/DecodeTxs'\nimport { fetchTxDecoder } from 'src/utils/decodeTx'\nimport { DecodedData } from 'src/types/transactions/decode.d'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport Block from 'src/components/layout/Block'\nimport Divider from 'src/components/Divider'\n\nimport { ConfirmTxModalProps, DecodedTxDetail } from '.'\nimport Hairline from 'src/components/layout/Hairline'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst Container = styled.div`\n  max-width: 480px;\n  padding: ${md} ${lg} 0;\n`\nconst TransactionFeesWrapper = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: ${sm} ${lg};\n`\n\nconst DecodeTxsWrapper = styled.div`\n  margin: 24px -24px;\n`\n\nconst StyledBlock = styled(Block)`\n  background-color: ${({ theme }) => theme.colors.separator};\n  width: fit-content;\n  padding: 5px 10px;\n  border-radius: 3px;\n  margin: 4px 0 0 40px;\n\n  display: flex;\n\n  > :nth-child(1) {\n    margin-right: 5px;\n  }\n`\n\ntype Props = ConfirmTxModalProps & {\n  areTxsMalformed: boolean\n  showDecodedTxData: (decodedTxDetails: DecodedTxDetail) => void\n  hidden: boolean // used to prevent re-rendering the modal each time a tx is inspected\n}\n\nconst parseTxValue = (value: string | number): string => {\n  return web3ReadOnly.utils.toBN(value).toString()\n}\n\nexport const ReviewConfirm = ({\n  app,\n  txs,\n  safeAddress,\n  ethBalance,\n  safeName,\n  params,\n  hidden,\n  onUserConfirm,\n  onClose,\n  onTxReject,\n  areTxsMalformed,\n  showDecodedTxData,\n}: Props): ReactElement => {\n  const isMultiSend = txs.length > 1\n  const [decodedData, setDecodedData] = useState<DecodedData | null>(null)\n  const dispatch = useDispatch()\n  const explorerUrl = getExplorerInfo(safeAddress)\n\n  const txRecipient: string | undefined = useMemo(\n    () => (isMultiSend ? getMultisendContractAddress() : txs[0]?.to),\n    [txs, isMultiSend],\n  )\n  const txData: string | undefined = useMemo(\n    () => (isMultiSend ? encodeMultiSendCall(txs) : txs[0]?.data),\n    [txs, isMultiSend],\n  )\n  const txValue: string | undefined = useMemo(\n    () => (isMultiSend ? '0' : txs[0]?.value && parseTxValue(txs[0]?.value)),\n    [txs, isMultiSend],\n  )\n  const operation = useMemo(() => (isMultiSend ? DELEGATE_CALL : CALL), [isMultiSend])\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasPriceFormatted,\n    gasEstimation,\n    isOffChainSignature,\n    isCreation,\n    isExecution,\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n  } = useEstimateTransactionGas({\n    txData: txData || '',\n    txRecipient,\n    operation,\n    txAmount: txValue,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus, setButtonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  // Decode tx data.\n  useEffect(() => {\n    const decodeTxData = async () => {\n      const res = await fetchTxDecoder(txData)\n      setDecodedData(res)\n    }\n\n    decodeTxData()\n  }, [txData])\n\n  const handleTxRejection = () => {\n    onTxReject()\n    onClose()\n  }\n\n  const handleUserConfirmation = (safeTxHash: string): void => {\n    onUserConfirm(safeTxHash)\n    onClose()\n  }\n\n  const confirmTransactions = (txParameters: TxParameters) => {\n    setButtonStatus(ButtonStatus.LOADING)\n\n    dispatch(\n      createTransaction(\n        {\n          safeAddress,\n          to: txRecipient,\n          valueInWei: txValue,\n          txData,\n          operation,\n          origin: app.id,\n          navigateToTransactionsTab: false,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n        },\n        handleUserConfirmation,\n        handleTxRejection,\n      ),\n    )\n\n    setButtonStatus(ButtonStatus.READY)\n  }\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = Number(gasPriceFormatted)\n    const newGasPrice = Number(txParameters.ethGasPrice)\n    const oldSafeTxGas = Number(gasEstimation)\n    const newSafeTxGas = Number(txParameters.safeTxGas)\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={Math.max(gasEstimation, params?.safeTxGas || 0).toString()}\n      closeEditModalCallback={closeEditModalCallback}\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n    >\n      {(txParameters, toggleEditMode) => (\n        <div hidden={hidden}>\n          <ModalTitle title={app.name} iconUrl={app.iconUrl} onClose={handleTxRejection} />\n\n          <Hairline />\n\n          <Container>\n            {/* Safe */}\n            <EthHashInfo name={safeName} hash={safeAddress} showAvatar showCopyBtn explorerUrl={explorerUrl} />\n            <StyledBlock>\n              <Text size=\"md\">Balance:</Text>\n              <Text size=\"md\" strong>{`${ethBalance} ${nativeCoin.symbol}`}</Text>\n            </StyledBlock>\n\n            <Divider withArrow />\n\n            {/* Txs decoded */}\n            <BasicTxInfo\n              txRecipient={txRecipient}\n              txData={txData}\n              txValue={fromTokenUnit(txValue, nativeCoin.decimals)}\n            />\n\n            <DecodeTxsWrapper>\n              <DecodeTxs txs={txs} decodedData={decodedData} onTxItemClick={showDecodedTxData} />\n            </DecodeTxsWrapper>\n            {!isMultiSend && <Divider />}\n            {/* Tx Parameters */}\n            <TxParametersDetail\n              txParameters={txParameters}\n              onEdit={toggleEditMode}\n              isTransactionCreation={isCreation}\n              isTransactionExecution={isExecution}\n              isOffChainSignature={isOffChainSignature}\n            />\n          </Container>\n\n          {/* Gas info */}\n          {txEstimationExecutionStatus === EstimationStatus.LOADING ? null : (\n            <TransactionFeesWrapper>\n              <TransactionFees\n                gasCostFormatted={gasCostFormatted}\n                isExecution={isExecution}\n                isCreation={isCreation}\n                isOffChainSignature={isOffChainSignature}\n                txEstimationExecutionStatus={txEstimationExecutionStatus}\n              />\n            </TransactionFeesWrapper>\n          )}\n\n          {/* Buttons */}\n          <Modal.Footer withoutBorder={txEstimationExecutionStatus !== EstimationStatus.LOADING}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: handleTxRejection }}\n              confirmButtonProps={{\n                onClick: () => confirmTransactions(txParameters),\n                disabled: areTxsMalformed,\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n              }}\n            />\n          </Modal.Footer>\n        </div>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { getNetworkInfo } from 'src/config'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { md, lg } from 'src/theme/variables'\nimport ModalTitle from 'src/components/ModalTitle'\nimport Hairline from 'src/components/layout/Hairline'\nimport { DecodedDataParameterValue, DecodedData } from 'src/types/transactions/decode.d'\nimport { BasicTxInfo, getParameterElement } from 'src/components/DecodeTxs'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst Container = styled.div`\n  max-width: 480px;\n  padding: ${md} ${lg};\n  word-break: break-word;\n`\n\nfunction isDataDecodedParameterValue(arg: any): arg is DecodedDataParameterValue {\n  return arg.operation !== undefined\n}\n\ntype Props = {\n  hideDecodedTxData: () => void\n  onClose: () => void\n  decodedTxData: DecodedDataParameterValue | DecodedData\n}\n\nexport const DecodedTxDetail = ({ hideDecodedTxData, onClose, decodedTxData: tx }: Props): ReactElement => {\n  let body\n  // If we are dealing with a multiSend\n  // decodedTxData is of type DataDecodedParameter\n  if (isDataDecodedParameterValue(tx)) {\n    const txValue = fromTokenUnit(tx.value, nativeCoin.decimals)\n\n    body = (\n      <>\n        <BasicTxInfo txRecipient={tx.to} txData={tx.data} txValue={txValue} />\n        {tx.dataDecoded?.parameters.map((p, index) => getParameterElement(p, index))}\n      </>\n    )\n  } else {\n    // If we are dealing with a single tx\n    // decodedTxData is of type DecodedData\n    body = <>{tx.parameters.map((p, index) => getParameterElement(p, index))}</>\n  }\n\n  return (\n    <>\n      <ModalTitle\n        title={(tx as DecodedDataParameterValue).dataDecoded?.method || (tx as DecodedData).method}\n        onClose={onClose}\n        goBack={hideDecodedTxData}\n      />\n\n      <Hairline />\n\n      <Container>{body}</Container>\n    </>\n  )\n}\n","import React, { SyntheticEvent } from 'react'\nimport styled from 'styled-components'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { Title, Text, Button, Card } from '@gnosis.pm/safe-react-components'\n\nimport appsIconSvg from 'src/assets/icons/apps.svg'\nimport { AppIconSK, DescriptionSK, TitleSK } from './skeleton'\n\nconst StyledAppCard = styled(Card)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-evenly;\n  box-shadow: 1px 2px 10px 0 ${({ theme }) => fade(theme.colors.shadow.color, 0.18)};\n  height: 232px !important;\n  box-sizing: border-box;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  :hover {\n    box-shadow: 1px 2px 16px 0 ${({ theme }) => fade(theme.colors.shadow.color, 0.35)};\n    transition: box-shadow 0.3s ease-in-out;\n    background-color: ${({ theme }) => theme.colors.background};\n    cursor: pointer;\n\n    h5 {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`\n\nconst IconImg = styled.img<{ size: 'md' | 'lg'; src: string | undefined }>`\n  width: ${({ size }) => (size === 'md' ? '60px' : '102px')};\n  height: ${({ size }) => (size === 'md' ? '60px' : '92px')};\n  margin-top: ${({ size }) => (size === 'md' ? '0' : '-16px')};\n  object-fit: contain;\n`\n\nconst AppName = styled(Title)`\n  text-align: center;\n  margin: 16px 0 9px 0;\n`\n\nconst AppDescription = styled(Text)`\n  text-align: center;\n  height: 72px;\n  line-height: 24px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nexport const setAppImageFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = appsIconSvg\n}\n\nexport enum TriggerType {\n  Button,\n  Content,\n}\n\ntype Props = {\n  onClick?: () => void\n  isLoading?: boolean\n  className?: string\n  name?: string\n  description?: string\n  iconUrl?: string\n  iconSize?: 'md' | 'lg'\n  buttonText?: string\n}\n\nconst AppCard = ({\n  isLoading = false,\n  className,\n  name,\n  description,\n  iconUrl,\n  iconSize = 'md',\n  buttonText,\n  onClick = () => undefined,\n}: Props): React.ReactElement => {\n  if (isLoading) {\n    return (\n      <StyledAppCard className={className}>\n        <AppIconSK />\n        <TitleSK />\n        <DescriptionSK />\n        <DescriptionSK />\n      </StyledAppCard>\n    )\n  }\n\n  return (\n    <StyledAppCard className={className} onClick={onClick}>\n      <IconImg alt={`${name || 'App'} Logo`} src={iconUrl} onError={setAppImageFallback} size={iconSize} />\n\n      {name && <AppName size=\"xs\">{name}</AppName>}\n\n      {description && <AppDescription size=\"lg\">{description} </AppDescription>}\n\n      {buttonText && (\n        <Button size=\"md\" color=\"primary\" variant=\"contained\" onClick={onClick}>\n          {buttonText}\n        </Button>\n      )}\n    </StyledAppCard>\n  )\n}\n\nexport default AppCard\n","import React, { ReactElement, useState } from 'react'\nimport { Transaction } from '@gnosis.pm/safe-apps-sdk-v1'\n\nimport Modal from 'src/components/Modal'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { TransactionParams } from 'src/routes/safe/components/Apps/components/AppFrame'\nimport { mustBeEthereumAddress } from 'src/components/forms/validator'\nimport { SafeAppLoadError } from './SafeAppLoadError'\nimport { ReviewConfirm } from './ReviewConfirm'\nimport { DecodedDataParameterValue, DecodedData } from 'src/types/transactions/decode'\nimport { DecodedTxDetail } from './DecodedTxDetail'\n\nexport type ConfirmTxModalProps = {\n  isOpen: boolean\n  app: SafeApp\n  txs: Transaction[]\n  params?: TransactionParams\n  safeAddress: string\n  safeName: string\n  ethBalance: string\n  onUserConfirm: (safeTxHash: string) => void\n  onTxReject: () => void\n  onClose: () => void\n}\n\nconst isTxValid = (t: Transaction): boolean => {\n  if (!['string', 'number'].includes(typeof t.value)) {\n    return false\n  }\n\n  if (typeof t.value === 'string' && !/^(0x)?[0-9a-f]+$/i.test(t.value)) {\n    return false\n  }\n\n  const isAddressValid = mustBeEthereumAddress(t.to) === undefined\n  return isAddressValid && !!t.data && typeof t.data === 'string'\n}\n\nexport type DecodedTxDetail = DecodedDataParameterValue | DecodedData | undefined\n\nexport const ConfirmTxModal = (props: ConfirmTxModalProps): ReactElement | null => {\n  const [decodedTxDetails, setDecodedTxDetails] = useState<DecodedTxDetail>()\n  const areTxsMalformed = props.txs.some((t) => !isTxValid(t))\n\n  const showDecodedTxData = setDecodedTxDetails\n  const hideDecodedTxData = () => setDecodedTxDetails(undefined)\n\n  const closeDecodedTxDetail = () => {\n    hideDecodedTxData()\n    props.onClose()\n  }\n\n  return (\n    <Modal description=\"Safe App transaction\" title=\"Safe App transaction\" open={props.isOpen}>\n      {areTxsMalformed && <SafeAppLoadError {...props} />}\n      {decodedTxDetails && (\n        <DecodedTxDetail\n          onClose={closeDecodedTxDetail}\n          hideDecodedTxData={hideDecodedTxData}\n          decodedTxData={decodedTxDetails}\n        />\n      )}\n\n      <ReviewConfirm\n        {...props}\n        areTxsMalformed={areTxsMalformed}\n        showDecodedTxData={showDecodedTxData}\n        hidden={areTxsMalformed || !!decodedTxDetails}\n      />\n    </Modal>\n  )\n}\n","import { useSnackbar } from 'notistack'\nimport {\n  InterfaceMessageIds,\n  InterfaceMessageToPayload,\n  SDKMessageIds,\n  SDKMessageToPayload,\n  SDK_MESSAGES,\n  INTERFACE_MESSAGES,\n  RequestId,\n  Transaction,\n  LowercaseNetworks,\n} from '@gnosis.pm/safe-apps-sdk-v1'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useCallback, MutableRefObject } from 'react'\n\nimport { getNetworkName, getTxServiceUrl } from 'src/config/'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TransactionParams } from '../components/AppFrame'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\n\ntype InterfaceMessageProps<T extends InterfaceMessageIds> = {\n  messageId: T\n  data: InterfaceMessageToPayload[T]\n}\n\ntype ReturnType = {\n  sendMessageToIframe: <T extends InterfaceMessageIds>(message: InterfaceMessageProps<T>, requestId?: RequestId) => void\n}\n\nconst NETWORK_NAME = getNetworkName()\n\nconst useIframeMessageHandler = (\n  selectedApp: SafeApp | undefined,\n  openConfirmationModal: (txs: Transaction[], params: TransactionParams | undefined, requestId: RequestId) => void,\n  closeModal: () => void,\n  iframeRef: MutableRefObject<HTMLIFrameElement | null>,\n): ReturnType => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n  const { address: safeAddress, ethBalance, name: safeName } = useSelector(currentSafeWithNames)\n  const dispatch = useDispatch()\n\n  const sendMessageToIframe = useCallback(\n    function <T extends InterfaceMessageIds>(message: InterfaceMessageProps<T>, requestId?: RequestId) {\n      const requestWithMessage = {\n        ...message,\n        requestId: requestId || Math.trunc(window.performance.now()),\n        version: '0.4.2',\n      }\n\n      if (iframeRef && selectedApp) {\n        iframeRef.current?.contentWindow?.postMessage(requestWithMessage, selectedApp.url)\n      }\n    },\n    [iframeRef, selectedApp],\n  )\n\n  useEffect(() => {\n    const handleIframeMessage = (\n      messageId: SDKMessageIds,\n      messagePayload: SDKMessageToPayload[typeof messageId],\n      requestId: RequestId,\n    ): void => {\n      if (!messageId) {\n        return\n      }\n\n      switch (messageId) {\n        // typescript doesn't narrow type in switch/case statements\n        // issue: https://github.com/microsoft/TypeScript/issues/20375\n        // possible solution: https://stackoverflow.com/a/43879897/7820085\n        case SDK_MESSAGES.SEND_TRANSACTIONS: {\n          if (messagePayload) {\n            openConfirmationModal(\n              messagePayload as SDKMessageToPayload[typeof SDK_MESSAGES.SEND_TRANSACTIONS],\n              undefined,\n              requestId,\n            )\n          }\n          break\n        }\n\n        case SDK_MESSAGES.SAFE_APP_SDK_INITIALIZED: {\n          const safeInfoMessage = {\n            messageId: INTERFACE_MESSAGES.ON_SAFE_INFO,\n            data: {\n              safeAddress: safeAddress as string,\n              network: NETWORK_NAME.toLowerCase() as LowercaseNetworks,\n              ethBalance: ethBalance as string,\n            },\n          }\n          const envInfoMessage = {\n            messageId: INTERFACE_MESSAGES.ENV_INFO,\n            data: {\n              txServiceUrl: getTxServiceUrl(),\n            },\n          }\n\n          sendMessageToIframe(safeInfoMessage)\n          sendMessageToIframe(envInfoMessage)\n          break\n        }\n        default: {\n          console.error(`ThirdPartyApp: A message was received with an unknown message id ${messageId}.`)\n          break\n        }\n      }\n    }\n    const onIframeMessage = async (\n      message: MessageEvent<{\n        requestId: RequestId\n        messageId: SDKMessageIds\n        data: SDKMessageToPayload[SDKMessageIds]\n      }>,\n    ) => {\n      if (message.origin === window.origin) {\n        return\n      }\n      if (!selectedApp?.url.includes(message.origin)) {\n        console.error(`ThirdPartyApp: A message was received from an unknown origin ${message.origin}`)\n        return\n      }\n      handleIframeMessage(message.data.messageId, message.data.data, message.data.requestId)\n    }\n\n    window.addEventListener('message', onIframeMessage)\n    return () => {\n      window.removeEventListener('message', onIframeMessage)\n    }\n  }, [\n    closeModal,\n    closeSnackbar,\n    dispatch,\n    enqueueSnackbar,\n    ethBalance,\n    openConfirmationModal,\n    safeAddress,\n    safeName,\n    selectedApp,\n    sendMessageToIframe,\n  ])\n\n  return {\n    sendMessageToIframe,\n  }\n}\n\nexport { useIframeMessageHandler }\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\n\nconst APPS_LEGAL_CONSENT_RECEIVED = 'APPS_LEGAL_CONSENT_RECEIVED'\n\nconst useLegalConsent = (): { consentReceived: boolean | undefined; onConsentReceipt: () => void } => {\n  const [consentReceived, setConsentReceived] = useState<boolean | undefined>()\n\n  useEffect(() => {\n    const checkLegalDisclaimer = async () => {\n      const storedConsentReceived = await loadFromStorage(APPS_LEGAL_CONSENT_RECEIVED)\n\n      if (storedConsentReceived) {\n        setConsentReceived(true)\n      } else {\n        setConsentReceived(false)\n      }\n    }\n\n    checkLegalDisclaimer()\n  }, [])\n\n  const onConsentReceipt = useCallback((): void => {\n    setConsentReceived(true)\n    saveToStorage(APPS_LEGAL_CONSENT_RECEIVED, true)\n  }, [])\n\n  return { consentReceived, onConsentReceipt }\n}\n\nexport { useLegalConsent }\n","import React from 'react'\nimport { FixedDialog, Text } from '@gnosis.pm/safe-react-components'\n\ninterface OwnProps {\n  onCancel: () => void\n  onConfirm: () => void\n}\n\nconst LegalDisclaimer = ({ onCancel, onConfirm }: OwnProps): JSX.Element => (\n  <FixedDialog\n    body={\n      <>\n        <Text size=\"md\">\n          You are now accessing third-party apps, which we do not own, control, maintain or audit. We are not liable for\n          any loss you may suffer in connection with interacting with the apps, which is at your own risk. You must read\n          our Terms, which contain more detailed provisions binding on you relating to the apps.\n        </Text>\n        <br />\n        <Text size=\"md\">\n          I have read and understood the{' '}\n          <a href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            Terms\n          </a>{' '}\n          and this Disclaimer, and agree to be bound by them.\n        </Text>\n      </>\n    }\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    title=\"Disclaimer\"\n  />\n)\n\nexport default LegalDisclaimer\n","import { MutableRefObject, useEffect, useState } from 'react'\nimport {\n  getSDKVersion,\n  SDKMessageEvent,\n  MethodToResponse,\n  Methods,\n  ErrorResponse,\n  MessageFormatter,\n  METHODS,\n  RequestId,\n} from '@gnosis.pm/safe-apps-sdk'\nimport { trackError, Errors } from 'src/logic/exceptions/CodedException'\nimport { SafeApp } from './types'\n\ntype MessageHandler = (\n  msg: SDKMessageEvent,\n) => void | MethodToResponse[Methods] | ErrorResponse | Promise<MethodToResponse[Methods] | ErrorResponse | void>\n\ntype LegacyMethods = 'getEnvInfo'\ntype SDKMethods = Methods | LegacyMethods\n\nclass AppCommunicator {\n  private iframeRef: MutableRefObject<HTMLIFrameElement | null>\n  private handlers = new Map<SDKMethods, MessageHandler>()\n  private app: SafeApp\n\n  constructor(iframeRef: MutableRefObject<HTMLIFrameElement | null>, app: SafeApp) {\n    this.iframeRef = iframeRef\n    this.app = app\n\n    window.addEventListener('message', this.handleIncomingMessage)\n  }\n\n  on = (method: SDKMethods, handler: MessageHandler): void => {\n    this.handlers.set(method, handler)\n  }\n\n  private isValidMessage = (msg: SDKMessageEvent): boolean => {\n    // @ts-expect-error .parent doesn't exist on some possible types\n    const sentFromIframe = msg.source.parent === window.parent\n    const knownMethod = Object.values(METHODS).includes(msg.data.method)\n\n    return sentFromIframe && knownMethod\n  }\n\n  private canHandleMessage = (msg: SDKMessageEvent): boolean => {\n    return Boolean(this.handlers.get(msg.data.method))\n  }\n\n  send = (data: unknown, requestId: RequestId, error = false): void => {\n    const sdkVersion = getSDKVersion()\n    const msg = error\n      ? MessageFormatter.makeErrorResponse(requestId, data as string, sdkVersion)\n      : MessageFormatter.makeResponse(requestId, data, sdkVersion)\n\n    this.iframeRef.current?.contentWindow?.postMessage(msg, '*')\n  }\n\n  handleIncomingMessage = async (msg: SDKMessageEvent): Promise<void> => {\n    const validMessage = this.isValidMessage(msg)\n    const hasHandler = this.canHandleMessage(msg)\n\n    if (validMessage && hasHandler) {\n      const handler = this.handlers.get(msg.data.method)\n      try {\n        // @ts-expect-error Handler existence is checked in this.canHandleMessage\n        const response = await handler(msg)\n\n        // If response is not returned, it means the response will be send somewhere else\n        if (typeof response !== 'undefined') {\n          this.send(response, msg.data.id)\n        }\n      } catch (err) {\n        this.send(err.message, msg.data.id, true)\n        trackError(Errors._901, err.message, {\n          contexts: {\n            safeApp: this.app,\n            request: msg.data,\n          },\n        })\n      }\n    }\n  }\n\n  clear = (): void => {\n    window.removeEventListener('message', this.handleIncomingMessage)\n  }\n}\n\nconst useAppCommunicator = (\n  iframeRef: MutableRefObject<HTMLIFrameElement | null>,\n  app?: SafeApp,\n): AppCommunicator | undefined => {\n  const [communicator, setCommunicator] = useState<AppCommunicator | undefined>(undefined)\n  useEffect(() => {\n    let communicatorInstance\n    const initCommunicator = (iframeRef: MutableRefObject<HTMLIFrameElement>, app: SafeApp) => {\n      communicatorInstance = new AppCommunicator(iframeRef, app)\n      setCommunicator(communicatorInstance)\n    }\n\n    if (app) {\n      initCommunicator(iframeRef as MutableRefObject<HTMLIFrameElement>, app)\n    }\n\n    return () => {\n      communicatorInstance?.clear()\n    }\n  }, [app, iframeRef])\n\n  return communicator\n}\n\nexport { useAppCommunicator }\n","import React, { ReactElement, useState, useRef, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { FixedIcon, Loader, Title, Card } from '@gnosis.pm/safe-react-components'\nimport { GetBalanceParams, GetTxBySafeTxHashParams, MethodToResponse, RPCPayload } from '@gnosis.pm/safe-apps-sdk'\nimport { generatePath, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { INTERFACE_MESSAGES, Transaction, RequestId, LowercaseNetworks } from '@gnosis.pm/safe-apps-sdk-v1'\nimport Web3 from 'web3'\n\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { getNetworkId, getNetworkName, getSafeAppsRpcServiceUrl, getTxServiceUrl } from 'src/config'\nimport { SAFE_ROUTES } from 'src/routes/routes'\nimport { isSameURL } from 'src/utils/url'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\nimport { LoadingContainer } from 'src/components/LoaderContainer/index'\nimport { TIMEOUT } from 'src/utils/constants'\n\nimport { ConfirmTxModal } from './ConfirmTxModal'\nimport { useIframeMessageHandler } from '../hooks/useIframeMessageHandler'\nimport { useLegalConsent } from '../hooks/useLegalConsent'\nimport LegalDisclaimer from './LegalDisclaimer'\nimport { getAppInfoFromUrl } from '../utils'\nimport { SafeApp } from '../types'\nimport { useAppCommunicator } from '../communicator'\nimport { fetchTokenCurrenciesBalances } from 'src/logic/safe/api/fetchTokenCurrenciesBalances'\nimport { fetchSafeTransaction } from 'src/logic/safe/transactions/api/fetchSafeTransaction'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\n\nconst OwnerDisclaimer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 476px;\n`\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% + 59px);\n  margin: 0 -16px;\n`\n\nconst StyledCard = styled(Card)`\n  flex-grow: 1;\n  padding: 0;\n  border-radius: 0;\n`\n\nconst StyledIframe = styled.iframe<{ isLoading: boolean }>`\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  box-sizing: border-box;\n  display: ${({ isLoading }) => (isLoading ? 'none' : 'block')};\n`\n\nexport type TransactionParams = {\n  safeTxGas?: number\n}\n\ntype ConfirmTransactionModalState = {\n  isOpen: boolean\n  txs: Transaction[]\n  requestId: RequestId\n  params?: TransactionParams\n}\n\ntype Props = {\n  appUrl: string\n}\n\nconst NETWORK_NAME = getNetworkName()\nconst NETWORK_ID = getNetworkId()\n\nconst INITIAL_CONFIRM_TX_MODAL_STATE: ConfirmTransactionModalState = {\n  isOpen: false,\n  txs: [],\n  requestId: '',\n  params: undefined,\n}\n\nconst safeAppWeb3Provider = new Web3.providers.HttpProvider(getSafeAppsRpcServiceUrl(), {\n  timeout: 10_000,\n})\n\nconst AppFrame = ({ appUrl }: Props): ReactElement => {\n  const granted = useSelector(grantedSelector)\n  const { address: safeAddress, ethBalance, owners, threshold } = useSelector(currentSafe)\n  const safeName = useSelector((state) => addressBookEntryName(state, { address: safeAddress }))\n  const { trackEvent } = useAnalytics()\n  const history = useHistory()\n  const { consentReceived, onConsentReceipt } = useLegalConsent()\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n  const [confirmTransactionModal, setConfirmTransactionModal] =\n    useState<ConfirmTransactionModalState>(INITIAL_CONFIRM_TX_MODAL_STATE)\n  const [appIsLoading, setAppIsLoading] = useState<boolean>(true)\n  const [safeApp, setSafeApp] = useState<SafeApp | undefined>()\n\n  const redirectToBalance = () =>\n    history.push(\n      generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n        safeAddress,\n      }),\n    )\n  const timer = useRef<number>()\n  const [appTimeout, setAppTimeout] = useState(false)\n\n  useEffect(() => {\n    if (appIsLoading) {\n      timer.current = window.setTimeout(() => {\n        setAppTimeout(true)\n      }, TIMEOUT)\n    } else {\n      clearTimeout(timer.current)\n      setAppTimeout(false)\n    }\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [appIsLoading])\n\n  const openConfirmationModal = useCallback(\n    (txs: Transaction[], params: TransactionParams | undefined, requestId: RequestId) =>\n      setConfirmTransactionModal({\n        isOpen: true,\n        txs,\n        requestId,\n        params,\n      }),\n    [setConfirmTransactionModal],\n  )\n  const closeConfirmationModal = useCallback(\n    () => setConfirmTransactionModal(INITIAL_CONFIRM_TX_MODAL_STATE),\n    [setConfirmTransactionModal],\n  )\n\n  const { sendMessageToIframe } = useIframeMessageHandler(\n    safeApp,\n    openConfirmationModal,\n    closeConfirmationModal,\n    iframeRef,\n  )\n\n  const onIframeLoad = useCallback(() => {\n    const iframe = iframeRef.current\n    if (!iframe || !isSameURL(iframe.src, appUrl as string)) {\n      return\n    }\n\n    setAppIsLoading(false)\n    sendMessageToIframe({\n      messageId: INTERFACE_MESSAGES.ON_SAFE_INFO,\n      data: {\n        safeAddress: safeAddress as string,\n        network: NETWORK_NAME.toLowerCase() as LowercaseNetworks,\n        ethBalance: ethBalance as string,\n      },\n    })\n  }, [ethBalance, safeAddress, appUrl, sendMessageToIframe])\n\n  const communicator = useAppCommunicator(iframeRef, safeApp)\n\n  useEffect(() => {\n    communicator?.on('getEnvInfo', () => ({\n      txServiceUrl: getTxServiceUrl(),\n    }))\n\n    communicator?.on('getTxBySafeTxHash', async (msg) => {\n      const { safeTxHash } = msg.data.params as GetTxBySafeTxHashParams\n\n      const tx = await fetchSafeTransaction(safeTxHash)\n\n      return tx\n    })\n\n    communicator?.on('getSafeInfo', () => ({\n      safeAddress,\n      network: NETWORK_NAME,\n      chainId: NETWORK_ID,\n      owners,\n      threshold,\n    }))\n\n    communicator?.on('getSafeBalances', async (msg) => {\n      const { currency = 'usd' } = msg.data.params as GetBalanceParams\n\n      const balances = await fetchTokenCurrenciesBalances({ safeAddress, selectedCurrency: currency })\n\n      return balances\n    })\n\n    communicator?.on('rpcCall', async (msg) => {\n      const params = msg.data.params as RPCPayload\n\n      try {\n        const response = new Promise<MethodToResponse['rpcCall']>((resolve, reject) => {\n          safeAppWeb3Provider.send(\n            {\n              jsonrpc: '2.0',\n              method: params.call,\n              params: params.params,\n              id: '1',\n            },\n            (err, res) => {\n              if (err || res?.error) {\n                reject(err || res?.error)\n              }\n\n              resolve(res?.result)\n            },\n          )\n        })\n\n        return response\n      } catch (err) {\n        return err\n      }\n    })\n\n    communicator?.on('sendTransactions', (msg) => {\n      // @ts-expect-error explore ways to fix this\n      openConfirmationModal(msg.data.params.txs as Transaction[], msg.data.params.params, msg.data.id)\n    })\n  }, [communicator, openConfirmationModal, safeAddress, owners, threshold])\n\n  const onUserTxConfirm = (safeTxHash: string) => {\n    // Safe Apps SDK V1 Handler\n    sendMessageToIframe(\n      { messageId: INTERFACE_MESSAGES.TRANSACTION_CONFIRMED, data: { safeTxHash } },\n      confirmTransactionModal.requestId,\n    )\n\n    // Safe Apps SDK V2 Handler\n    communicator?.send({ safeTxHash }, confirmTransactionModal.requestId as string)\n  }\n\n  const onTxReject = () => {\n    // Safe Apps SDK V1 Handler\n    sendMessageToIframe(\n      { messageId: INTERFACE_MESSAGES.TRANSACTION_REJECTED, data: {} },\n      confirmTransactionModal.requestId,\n    )\n\n    // Safe Apps SDK V2 Handler\n    communicator?.send('Transaction was rejected', confirmTransactionModal.requestId as string, true)\n  }\n\n  useEffect(() => {\n    const loadApp = async () => {\n      try {\n        const app = await getAppInfoFromUrl(appUrl)\n        setSafeApp(app)\n      } catch (err) {\n        logError(Errors._900, `${appUrl}, ${err.message}`)\n      }\n    }\n    loadApp()\n  }, [appUrl])\n\n  //track GA\n  useEffect(() => {\n    if (safeApp) {\n      trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Apps', label: safeApp.name })\n    }\n  }, [safeApp, trackEvent])\n\n  if (!appUrl) {\n    throw Error('App url No provided or it is invalid.')\n  }\n\n  if (!safeApp) {\n    return (\n      <LoadingContainer>\n        <Loader size=\"md\" />\n      </LoadingContainer>\n    )\n  }\n\n  if (consentReceived === false) {\n    return <LegalDisclaimer onCancel={redirectToBalance} onConfirm={onConsentReceipt} />\n  }\n\n  if (NETWORK_NAME === 'UNKNOWN' || !granted) {\n    return (\n      <OwnerDisclaimer>\n        <FixedIcon type=\"notOwner\" />\n        <Title size=\"xs\">To use apps, you must be an owner of this Safe</Title>\n      </OwnerDisclaimer>\n    )\n  }\n\n  return (\n    <AppWrapper>\n      <StyledCard>\n        {appIsLoading && (\n          <LoadingContainer style={{ flexDirection: 'column' }}>\n            {appTimeout && (\n              <Title size=\"xs\">\n                The safe app is taking longer than usual to load. There might be a problem with the app provider.\n              </Title>\n            )}\n            <Loader size=\"md\" />\n          </LoadingContainer>\n        )}\n\n        <StyledIframe\n          isLoading={appIsLoading}\n          frameBorder=\"0\"\n          id={`iframe-${appUrl}`}\n          ref={iframeRef}\n          src={appUrl}\n          title={safeApp.name}\n          onLoad={onIframeLoad}\n        />\n      </StyledCard>\n\n      <ConfirmTxModal\n        isOpen={confirmTransactionModal.isOpen}\n        app={safeApp as SafeApp}\n        safeAddress={safeAddress}\n        ethBalance={ethBalance as string}\n        safeName={safeName as string}\n        txs={confirmTransactionModal.txs}\n        onClose={closeConfirmationModal}\n        onUserConfirm={onUserTxConfirm}\n        params={confirmTransactionModal.params}\n        onTxReject={onTxReject}\n      />\n    </AppWrapper>\n  )\n}\n\nexport default AppFrame\n","import styled, { keyframes } from 'styled-components'\n\nconst gradientSK = keyframes`\n  0% {\n    background-position: 0% 54%;\n  }\n  50% {\n    background-position: 100% 47%;\n  }\n  100% {\n    background-position: 0% 54%;\n  }\n`\n\nexport const AppIconSK = styled.div`\n  height: 60px;\n  width: 60px;\n  border-radius: 30px;\n  margin: 0 auto;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\nexport const TitleSK = styled.div`\n  height: 24px;\n  width: 160px;\n  margin: 24px auto;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\nexport const DescriptionSK = styled.div`\n  height: 16px;\n  width: 200px;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n","import axios from 'axios'\nimport { getNetworkId } from 'src/config'\nimport { CONFIG_SERVICE_URL } from 'src/utils/constants'\n\nexport type AppData = {\n  url: string\n  name?: string\n  disabled?: boolean\n  description?: string\n  networks: number[]\n  custom?: boolean\n}\n\nenum Endpoints {\n  SAFE_APPS = '/safe-apps/',\n}\n\nexport const fetchSafeAppsList = async (): Promise<AppData[]> => {\n  const networkId = getNetworkId()\n  return axios.get(`${CONFIG_SERVICE_URL}${Endpoints['SAFE_APPS']}?chainId=${networkId}`).then(({ data }) => data)\n}\n","export default __webpack_public_path__ + \"static/media/addApp.8e52bdd5.svg\";","import { Checkbox, Text } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport { useFormState } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { required } from 'src/components/forms/validator'\nimport Field from 'src/components/forms/Field'\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin: 0;\n`\n\nconst AppAgreement = (): React.ReactElement => {\n  const { visited } = useFormState({ subscription: { visited: true } })\n\n  // trick to prevent having the field validated by default. Not sure why this happens in this form\n  const validate = !visited?.agreementAccepted ? undefined : required\n\n  return (\n    <Field\n      component={StyledCheckbox}\n      label={<Text size=\"xl\">This app is not a Gnosis product and I agree to use this app at my own risk.</Text>}\n      name=\"agreementAccepted\"\n      type=\"checkbox\"\n      validate={validate}\n    />\n  )\n}\n\nexport default AppAgreement\n","import debounce from 'lodash.debounce'\nimport { useCallback, useEffect, useState, useRef } from 'react'\n\n/*\n  This code snippet is copied from https://github.com/gnbaron/use-lodash-debounce\n  with the sole intention to be able to tweak it if is needed and prevent from having\n  a new dependency for something relatively trivial\n*/\n\ninterface DebounceOptions {\n  leading: boolean\n  maxWait: number\n  trailing: boolean\n}\n\nexport const useDebouncedCallback = <T extends (...args: unknown[]) => unknown>(\n  callback: T,\n  delay = 0,\n  options?: DebounceOptions,\n): T & { cancel: () => void } => useCallback(debounce(callback, delay, options), [callback, delay, options])\n\nexport const useDebounce = <T extends unknown>(value: T, delay = 0, options?: DebounceOptions): T => {\n  const previousValue = useRef(value)\n  const [current, setCurrent] = useState(value)\n  const debouncedCallback = useDebouncedCallback((value: T) => setCurrent(value), delay, options)\n\n  useEffect(() => {\n    // does trigger the debounce timer initially\n    if (value !== previousValue.current) {\n      debouncedCallback(value)\n      previousValue.current = value\n      // cancel the debounced callback on clean up\n      return debouncedCallback.cancel\n    }\n  }, [debouncedCallback, value])\n\n  return current\n}\n","import { TextField } from '@gnosis.pm/safe-react-components'\nimport createDecorator from 'final-form-calculate'\nimport React from 'react'\nimport { useField, useFormState } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { getAppInfoFromUrl, getIpfsLinkFromEns, uniqueApp } from 'src/routes/safe/components/Apps/utils'\nimport { composeValidators, required } from 'src/components/forms/validator'\nimport Field from 'src/components/forms/Field'\nimport { isValidURL } from 'src/utils/url'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { useDebounce } from 'src/logic/hooks/useDebounce'\n\nconst validateUrl = (url: string): string | undefined => (isValidURL(url) ? undefined : 'Invalid URL')\n\nexport const appUrlResolver = createDecorator({\n  field: 'appUrl',\n  updates: {\n    appUrl: async (appUrl: string): Promise<string | undefined> => {\n      const ensContent = !isValidURL(appUrl) && isValidEnsName(appUrl) && (await getIpfsLinkFromEns(appUrl))\n\n      if (ensContent) {\n        return ensContent\n      }\n\n      return appUrl\n    },\n  },\n})\n\ntype AppInfoUpdaterProps = {\n  onAppInfo: (appInfo: SafeApp) => unknown\n  onLoading: (isLoading: boolean) => unknown\n  onError: (error: Error) => unknown\n}\n\nexport const AppInfoUpdater = ({ onAppInfo, onLoading, onError }: AppInfoUpdaterProps): null => {\n  const {\n    input: { value: appUrl },\n  } = useField('appUrl', { subscription: { value: true } })\n\n  const debouncedValue = useDebounce(appUrl, 500)\n\n  React.useEffect(() => {\n    const updateAppInfo = async () => {\n      onLoading(true)\n\n      try {\n        const appInfo = await getAppInfoFromUrl(debouncedValue)\n        onAppInfo({ ...appInfo })\n      } catch (error) {\n        onError?.(error)\n      }\n\n      onLoading(false)\n    }\n\n    if (isValidURL(debouncedValue)) {\n      updateAppInfo()\n    }\n  }, [debouncedValue, onAppInfo, onError, onLoading])\n\n  return null\n}\n\nconst StyledAppUrlField = styled(Field)`\n  && {\n    width: 100%;\n  }\n`\n\nconst AppUrl = ({ appList }: { appList: SafeApp[] }): React.ReactElement => {\n  const { visited } = useFormState({ subscription: { visited: true } })\n\n  // trick to prevent having the field validated by default. Not sure why this happens in this form\n  const validate = !visited?.appUrl ? undefined : composeValidators(required, validateUrl, uniqueApp(appList))\n\n  return (\n    <StyledAppUrlField\n      label=\"App URL\"\n      name=\"appUrl\"\n      placeholder=\"App URL\"\n      type=\"text\"\n      component={TextField}\n      validate={validate}\n      autoComplete=\"off\"\n    />\n  )\n}\n\nexport default AppUrl\n","import React, { ReactElement, useMemo } from 'react'\nimport { useFormState } from 'react-final-form'\n\nimport { Modal } from 'src/components/Modal'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { isAppManifestValid } from 'src/routes/safe/components/Apps/utils'\n\ninterface Props {\n  appInfo: SafeApp\n  onCancel: () => void\n}\n\nexport const FormButtons = ({ appInfo, onCancel }: Props): ReactElement => {\n  const { valid, validating, visited } = useFormState({\n    subscription: { valid: true, validating: true, visited: true },\n  })\n\n  const isSubmitDisabled = useMemo(() => {\n    // if non visited, fields were not evaluated yet. Then, the default value is considered invalid\n    const fieldsVisited = visited?.agreementAccepted && visited?.appUrl\n\n    return validating || !valid || !fieldsVisited || !isAppManifestValid(appInfo)\n  }, [validating, valid, visited, appInfo])\n\n  return (\n    <Modal.Footer.Buttons\n      cancelButtonProps={{ onClick: onCancel }}\n      confirmButtonProps={{ disabled: isSubmitDisabled, text: 'Add' }}\n    />\n  )\n}\n","import { Icon, Link, Loader, Text, TextField } from '@gnosis.pm/safe-react-components'\nimport React, { useState, ReactElement, useCallback, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { generatePath, useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { SafeApp, StoredSafeApp } from 'src/routes/safe/components/Apps/types'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Img from 'src/components/layout/Img'\nimport { Modal } from 'src/components/Modal'\n\nimport AppAgreement from './AppAgreement'\nimport AppUrl, { AppInfoUpdater, appUrlResolver } from './AppUrl'\nimport { FormButtons } from './FormButtons'\nimport { APPS_STORAGE_KEY, getEmptySafeApp } from 'src/routes/safe/components/Apps/utils'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { SAFE_ROUTES } from 'src/routes/routes'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { safeAddressFromUrl } from 'src/logic/safe/store/selectors'\n\nconst FORM_ID = 'add-apps-form'\n\nconst StyledTextFileAppName = styled(TextField)`\n  && {\n    width: 385px;\n  }\n`\n\nconst AppInfo = styled.div`\n  display: flex;\n  margin: 36px 0 24px 0;\n\n  img {\n    margin-right: 10px;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  inline-size: fit-content;\n`\n\nconst AppDocsInfo = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n  flex-direction: column;\n  svg {\n    position: relative;\n    top: 4px;\n    left: 4px;\n  }\n`\n\nconst WrapperLoader = styled.div`\n  height: 55px;\n  width: 65px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledLoader = styled(Loader)`\n  margin-right: 15px;\n`\n\ninterface AddAppFormValues {\n  appUrl: string\n  agreementAccepted: boolean\n}\n\nconst INITIAL_VALUES: AddAppFormValues = {\n  appUrl: '',\n  agreementAccepted: false,\n}\n\nconst DEFAULT_APP_INFO = getEmptySafeApp()\n\ninterface AddAppProps {\n  appList: SafeApp[]\n  closeModal: () => void\n}\n\nconst AddApp = ({ appList, closeModal }: AddAppProps): ReactElement => {\n  const safeAddress = useSelector(safeAddressFromUrl)\n  const appsPath = generatePath(SAFE_ROUTES.APPS, {\n    safeAddress,\n  })\n  const [appInfo, setAppInfo] = useState<SafeApp>(DEFAULT_APP_INFO)\n  const [fetchError, setFetchError] = useState<string | undefined>()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleSubmit = useCallback(async () => {\n    const persistedAppList =\n      (await loadFromStorage<(StoredSafeApp & { disabled?: number[] })[]>(APPS_STORAGE_KEY)) || []\n    const newAppList = [\n      { url: appInfo.url, disabled: false },\n      ...persistedAppList.map(({ url, disabled }) => ({ url, disabled })),\n    ]\n    saveToStorage(APPS_STORAGE_KEY, newAppList)\n    const goToApp = `${appsPath}?appUrl=${encodeURI(appInfo.url)}`\n    history.push(goToApp)\n  }, [appInfo.url, history, appsPath])\n\n  useEffect(() => {\n    if (isLoading) {\n      setFetchError(undefined)\n    }\n  }, [isLoading])\n\n  const onError = useCallback(\n    (error: Error) => {\n      setFetchError(error.message)\n      logError(Errors._903, error.message)\n      setAppInfo(DEFAULT_APP_INFO)\n    },\n    [setAppInfo],\n  )\n\n  return (\n    <GnoForm decorators={[appUrlResolver]} initialValues={INITIAL_VALUES} onSubmit={handleSubmit} testId={FORM_ID}>\n      {() => (\n        <>\n          <Modal.Body>\n            <AppDocsInfo>\n              <Text size=\"xl\" as=\"span\" color=\"secondary\">\n                Safe Apps are third-party extensions.\n              </Text>\n              <StyledLink\n                href=\"https://docs.gnosis.io/safe/docs/sdks_safe_apps/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                title=\"Learn more about building Safe Apps\"\n              >\n                <Text size=\"xl\" as=\"span\" color=\"primary\">\n                  Learn more about building Safe Apps.\n                </Text>\n                <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\n              </StyledLink>\n            </AppDocsInfo>\n            <AppUrl appList={appList} />\n            {/* Fetch app from url and return a SafeApp */}\n            <AppInfoUpdater onAppInfo={setAppInfo} onLoading={setIsLoading} onError={onError} />\n            <AppInfo>\n              {isLoading ? (\n                <WrapperLoader>\n                  <StyledLoader size=\"sm\" />\n                </WrapperLoader>\n              ) : (\n                <Img alt=\"Token image\" width={55} src={appInfo.iconUrl} />\n              )}\n              <StyledTextFileAppName\n                label=\"App name\"\n                readOnly\n                meta={{ error: fetchError }}\n                value={isLoading ? 'Loading...' : appInfo.name === DEFAULT_APP_INFO.name ? '' : appInfo.name}\n                onChange={() => {}}\n              />\n            </AppInfo>\n            <AppAgreement />\n          </Modal.Body>\n          <Modal.Footer>\n            <FormButtons appInfo={appInfo} onCancel={closeModal} />\n          </Modal.Footer>\n        </>\n      )}\n    </GnoForm>\n  )\n}\n\nexport default AddApp\n","import { IconText, Loader, Menu, Text, Icon, Breadcrumb, BreadcrumbElement } from '@gnosis.pm/safe-react-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, generatePath } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nimport Col from 'src/components/layout/Col'\nimport { Modal } from 'src/components/Modal'\nimport { safeAddressFromUrl } from 'src/logic/safe/store/selectors'\nimport AppCard from 'src/routes/safe/components/Apps/components/AppCard'\nimport AddAppIcon from 'src/routes/safe/components/Apps/assets/addApp.svg'\nimport { SAFE_ROUTES } from 'src/routes/routes'\n\nimport { useAppList } from '../hooks/useAppList'\nimport { SAFE_APP_FETCH_STATUS, SafeApp } from '../types'\nimport AddAppForm from './AddAppForm'\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst centerCSS = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  ${centerCSS};\n`\n\nconst CardsWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(243px, 1fr));\n  column-gap: 20px;\n  row-gap: 20px;\n  justify-content: space-evenly;\n  margin: 0 0 16px 0;\n`\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  align-items: center;\n`\n\nconst IconBtn = styled(IconButton)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  z-index: 10;\n  padding: 5px;\n  opacity: 0;\n\n  transition: opacity 0.2s ease-in-out;\n`\n\nconst AppContainer = styled.div`\n  position: relative;\n\n  &:hover {\n    ${IconBtn} {\n      opacity: 1;\n    }\n  }\n`\n\nconst isAppLoading = (app: SafeApp) => SAFE_APP_FETCH_STATUS.LOADING === app.fetchStatus\nconst isCustomApp = (appUrl: string, appsList: SafeApp[]) => {\n  return appsList.some(({ url, custom }) => url === appUrl && custom)\n}\n\nconst AppsList = (): React.ReactElement => {\n  const safeAddress = useSelector(safeAddressFromUrl)\n  const appsPath = generatePath(SAFE_ROUTES.APPS, {\n    safeAddress,\n  })\n  const { appList, removeApp, isLoading } = useAppList()\n  const [isAddAppModalOpen, setIsAddAppModalOpen] = useState<boolean>(false)\n  const [appToRemove, setAppToRemove] = useState<SafeApp | null>(null)\n  const openAddAppModal = () => setIsAddAppModalOpen(true)\n\n  const closeAddAppModal = () => setIsAddAppModalOpen(false)\n  if (isLoading || !safeAddress) {\n    return (\n      <LoadingContainer>\n        <Loader size=\"md\" />\n      </LoadingContainer>\n    )\n  }\n  return (\n    <Wrapper>\n      <Menu>\n        <Col start=\"sm\" xs={12}>\n          <Breadcrumb>\n            <BreadcrumbElement iconType=\"apps\" text=\"Apps\" />\n          </Breadcrumb>\n        </Col>\n      </Menu>\n      <ContentWrapper>\n        <CardsWrapper>\n          <AppCard iconUrl={AddAppIcon} onClick={openAddAppModal} buttonText=\"Add custom app\" iconSize=\"lg\" />\n\n          {appList\n            .filter((a) => a.fetchStatus !== SAFE_APP_FETCH_STATUS.ERROR)\n            .map((a) => (\n              <AppContainer key={a.url}>\n                <StyledLink key={a.url} to={`${appsPath}?appUrl=${encodeURI(a.url)}`}>\n                  <AppCard isLoading={isAppLoading(a)} iconUrl={a.iconUrl} name={a.name} description={a.description} />\n                </StyledLink>\n                {isCustomApp(a.url, appList) && (\n                  <IconBtn\n                    title=\"Remove\"\n                    onClick={(e) => {\n                      e.stopPropagation()\n\n                      setAppToRemove(a)\n                    }}\n                  >\n                    <Icon size=\"sm\" type=\"delete\" color=\"error\" />\n                  </IconBtn>\n                )}\n              </AppContainer>\n            ))}\n        </CardsWrapper>\n\n        <IconText\n          color=\"secondary\"\n          iconSize=\"sm\"\n          iconType=\"info\"\n          text=\"These are third-party apps, which means they are not owned, controlled, maintained or audited by Gnosis. Interacting with the apps is at your own risk. Any communication within the Apps is for informational purposes only and must not be construed as investment advice to engage in any transaction.\"\n          textSize=\"sm\"\n        />\n      </ContentWrapper>\n\n      {isAddAppModalOpen && (\n        <Modal title=\"Add app\" description=\"Add a custom app to the list of apps\" handleClose={closeAddAppModal}>\n          <Modal.Header onClose={closeAddAppModal}>\n            <Modal.Header.Title>Add custom app</Modal.Header.Title>\n          </Modal.Header>\n          <AddAppForm closeModal={closeAddAppModal} appList={appList} />\n        </Modal>\n      )}\n\n      {appToRemove && (\n        <Modal title=\"Remove app\" description=\"Confirm for the app removal\" handleClose={() => setAppToRemove(null)}>\n          <Modal.Header onClose={() => setAppToRemove(null)}>\n            <Modal.Header.Title>Remove app</Modal.Header.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Text size=\"xl\">\n              This action will remove{' '}\n              <Text size=\"xl\" strong as=\"span\">\n                {appToRemove.name}\n              </Text>{' '}\n              from the interface\n            </Text>\n          </Modal.Body>\n          <Modal.Footer>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: () => setAppToRemove(null) }}\n              confirmButtonProps={{\n                color: 'error',\n                onClick: () => {\n                  removeApp(appToRemove.url)\n                  setAppToRemove(null)\n                },\n                text: 'Remove',\n              }}\n            />\n          </Modal.Footer>\n        </Modal>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default AppsList\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { APPS_STORAGE_KEY, getAppInfoFromUrl, getEmptySafeApp } from '../utils'\nimport { AppData, fetchSafeAppsList } from 'src/logic/configService'\nimport { SafeApp, StoredSafeApp, SAFE_APP_FETCH_STATUS } from '../types'\nimport { getNetworkId } from 'src/config'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { useDispatch } from 'react-redux'\nimport { logError, Errors } from 'src/logic/exceptions/CodedException'\n\ntype UseAppListReturnType = {\n  appList: SafeApp[]\n  removeApp: (appUrl: string) => void\n  isLoading: boolean\n}\n\nconst useAppList = (): UseAppListReturnType => {\n  const [appList, setAppList] = useState<SafeApp[]>([])\n  const [apiAppsList, setApiAppsList] = useState<AppData[]>([])\n  const [customAppList, setCustomAppList] = useState<(StoredSafeApp & { disabled?: boolean; networks?: number[] })[]>(\n    [],\n  )\n  const dispatch = useDispatch()\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const loadAppsList = async () => {\n      setIsLoading(true)\n      try {\n        const result = await fetchSafeAppsList()\n        setApiAppsList(result && result?.length ? result : apiAppsList)\n      } catch (e) {\n        logError(Errors._902, e.message)\n        dispatch(enqueueSnackbar(NOTIFICATIONS.SAFE_APPS_FETCH_ERROR_MSG))\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (!apiAppsList.length) {\n      loadAppsList()\n    }\n  }, [dispatch, apiAppsList])\n\n  // Load apps list\n  // for each URL we return a mocked safe-app with a loading status\n  // it was developed to speed up initial page load, otherwise the\n  // app renders a loading until all the safe-apps are fetched.\n  useEffect(() => {\n    const fetchAppCallback = (res: SafeApp) => {\n      setAppList((prevStatus) => {\n        const cpPrevStatus = [...prevStatus]\n        const appIndex = cpPrevStatus.findIndex((a) => a.url === res.url)\n        const newStatus = res.error ? SAFE_APP_FETCH_STATUS.ERROR : SAFE_APP_FETCH_STATUS.SUCCESS\n        cpPrevStatus[appIndex] = { ...res, fetchStatus: newStatus }\n        return cpPrevStatus.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      })\n    }\n\n    const loadApps = async () => {\n      // recover apps from storage (third-party apps added by the user)\n      let storageAppList =\n        (await loadFromStorage<(StoredSafeApp & { disabled?: boolean; networks?: number[]; custom?: boolean })[]>(\n          APPS_STORAGE_KEY,\n        )) || []\n      storageAppList = storageAppList.map((app) => {\n        app.custom = true\n        return app\n      })\n      setCustomAppList(storageAppList)\n      // backward compatibility. In a previous implementation a safe app could be disabled, that state was\n      // persisted in the storage.\n      const customApps = storageAppList.filter(\n        (persistedApp) => !apiAppsList.some((app) => app.url === persistedApp.url),\n      )\n      const apps: SafeApp[] = [...apiAppsList, ...customApps]\n        // if the app does not expose supported networks, include them. (backward compatible)\n        .filter((app) => (!app.networks ? true : app.networks.includes(getNetworkId())))\n        .map((app) => ({\n          ...getEmptySafeApp(),\n          ...app,\n          url: app.url.trim(),\n          custom: app.custom,\n        }))\n      setAppList(apps)\n\n      apps.forEach((app) => {\n        if (!app.name || app.name === 'unknown') {\n          // We are using legacy mode, we have to fetch info from manifest\n          getAppInfoFromUrl(app.url)\n            .then((appFromUrl) => {\n              const formatedApp = appFromUrl\n              formatedApp.custom = app.custom\n              fetchAppCallback(formatedApp)\n            })\n            .catch((err) => {\n              logError(Errors._900, `${app.url}, ${err.message}`)\n            })\n        } else {\n          // We already have manifest information so we directly add the app\n          fetchAppCallback(app)\n        }\n      })\n    }\n\n    loadApps()\n  }, [apiAppsList])\n\n  const removeApp = useCallback(\n    (appUrl: string): void => {\n      setAppList((list) => {\n        const newList = list.filter(({ url }) => url !== appUrl)\n        const newPersistedList = customAppList.filter(({ url }) => url !== appUrl)\n        saveToStorage(APPS_STORAGE_KEY, newPersistedList)\n\n        return newList\n      })\n    },\n    [customAppList],\n  )\n\n  return {\n    appList,\n    removeApp,\n    isLoading,\n  }\n}\n\nexport { useAppList }\n","import React from 'react'\nimport { useSafeAppUrl } from 'src/logic/hooks/useSafeAppUrl'\n\nimport AppFrame from './components/AppFrame'\nimport AppsList from './components/AppsList'\n\nconst Apps = (): React.ReactElement => {\n  const { getAppUrl } = useSafeAppUrl()\n  const url = getAppUrl()\n  if (url) {\n    return <AppFrame appUrl={url} />\n  } else {\n    return <AppsList />\n  }\n}\n\nexport default Apps\n"],"sourceRoot":""}