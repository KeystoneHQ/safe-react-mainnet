{"version":3,"sources":["components/layout/Bold/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/style.ts","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/index.tsx","routes/safe/components/Settings/ThresholdSettings/style.ts","routes/safe/components/Settings/ThresholdSettings/index.tsx"],"names":["Bold","this","props","children","React","style","minWidth","SelectInput","classes","disableError","formControlProps","input","name","onChange","value","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","error","touched","inputProps","htmlFor","cx","classNames","bind","styles","Heading","align","className","color","margin","tag","testId","truncate","capitalize","undefined","module","exports","useStyles","makeStyles","createStyles","heading","padding","sm","lg","justifyContent","boxSizing","height","headingText","fontSize","close","width","modalContent","md","ownersText","marginLeft","inputRow","position","gasCostsContainer","backgroundColor","background","ChangeThresholdModal","onClose","ownersCount","safeAddress","threshold","dispatch","useDispatch","safeVersion","useSelector","currentSafeCurrentVersion","useState","data","setData","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","editedThreshold","setEditedThreshold","disabledSubmitForm","setDisabledSubmitForm","useEstimateTransactionGas","txData","txRecipient","safeTxGas","gasCostFormatted","txEstimationExecutionStatus","isCreation","isExecution","isOffChainSignature","gasLimit","gasPriceFormatted","gasEstimation","useEstimationStatus","buttonStatus","useEffect","isCurrent","getGnosisSafeInstanceAt","methods","changeThreshold","encodeABI","calculateChangeThresholdData","handleThreshold","target","parseInt","handleSubmit","txParameters","createTransaction","to","valueInWei","txNonce","safeNonce","Number","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","EditableTxParameters","ethGasLimit","ethGasPrice","toString","closeEditModalCallback","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","Row","grow","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","GnoForm","initialValues","onSubmit","Block","Col","xs","Field","data-testid","render","SelectField","Array","map","x","index","MenuItem","key","validate","composeValidators","required","mustBeInteger","minValue","differentFrom","size","TxParametersDetail","onEdit","isTransactionCreation","isTransactionExecution","EstimationStatus","LOADING","Modal","Footer","withoutBorder","ButtonStatus","Buttons","cancelButtonProps","confirmButtonProps","disabled","status","text","secondaryText","fontColor","container","buttonRow","left","bottom","borderTop","border","modifyBtn","xl","smallFontSize","ThresholdSettings","isModalOpen","setModalOpen","currentSafe","address","owners","granted","grantedSelector","toggleModal","prevOpen","trackEvent","useAnalytics","category","SAFE_NAVIGATION_EVENT","action","length","Button","variant","description","handleClose","open","title"],"mappings":"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","file":"static/js/58.e92b72e9.chunk.js","sourcesContent":["import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: `${sm} ${lg}`,\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    headingText: {\n      fontSize: '20px',\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n    modalContent: {\n      padding: `${md} ${lg}`,\n    },\n    ownersText: {\n      marginLeft: sm,\n    },\n    inputRow: {\n      position: 'relative',\n    },\n    gasCostsContainer: {\n      backgroundColor: background,\n      padding: `${sm} ${lg}`,\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Close from '@material-ui/icons/Close'\nimport React, { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, differentFrom, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\n\nimport { useStyles } from './style'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nconst THRESHOLD_FIELD_NAME = 'threshold'\n\ntype ChangeThresholdModalProps = {\n  onClose: () => void\n  ownersCount?: number\n  safeAddress: string\n  threshold?: number\n}\n\nexport const ChangeThresholdModal = ({\n  onClose,\n  ownersCount = 0,\n  safeAddress,\n  threshold = 1,\n}: ChangeThresholdModalProps): ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const safeVersion = useSelector(currentSafeCurrentVersion) as string\n  const [data, setData] = useState('')\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n  const [editedThreshold, setEditedThreshold] = useState<number>(threshold)\n  const [disabledSubmitForm, setDisabledSubmitForm] = useState<boolean>(true)\n\n  const {\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isCreation,\n    isExecution,\n    isOffChainSignature,\n    gasLimit,\n    gasPriceFormatted,\n    gasEstimation,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n    const calculateChangeThresholdData = () => {\n      const safeInstance = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n      const txData = safeInstance.methods.changeThreshold(editedThreshold).encodeABI()\n      if (isCurrent) {\n        setData(txData)\n      }\n    }\n\n    calculateChangeThresholdData()\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, editedThreshold])\n\n  const handleThreshold = ({ target }) => {\n    const value = parseInt(target.value)\n    setDisabledSubmitForm(value === editedThreshold || value === threshold)\n    setEditedThreshold(value)\n  }\n\n  const handleSubmit = ({ txParameters }) => {\n    dispatch(\n      createTransaction({\n        safeAddress,\n        to: safeAddress,\n        valueInWei: '0',\n        txData: data,\n        txNonce: txParameters.safeNonce,\n        safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\n        ethParameters: txParameters,\n        notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      }),\n    )\n    onClose()\n  }\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = Number(gasPriceFormatted)\n    const newGasPrice = Number(txParameters.ethGasPrice)\n    const oldSafeTxGas = Number(gasEstimation)\n    const newSafeTxGas = Number(txParameters.safeTxGas)\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation.toString()}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <Row align=\"center\" className={classes.heading} grow>\n            <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n              Change required confirmations\n            </Paragraph>\n            <IconButton disableRipple onClick={onClose}>\n              <Close className={classes.close} />\n            </IconButton>\n          </Row>\n          <Hairline />\n          <GnoForm initialValues={{ threshold: editedThreshold.toString(), txParameters }} onSubmit={handleSubmit}>\n            {() => (\n              <>\n                <Block className={classes.modalContent}>\n                  <Row>\n                    <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n                  </Row>\n                  <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                    <Col xs={2}>\n                      <Field\n                        data-testid=\"threshold-select-input\"\n                        name={THRESHOLD_FIELD_NAME}\n                        onChange={handleThreshold}\n                        render={(props) => (\n                          <>\n                            <SelectField {...props} disableError>\n                              {[...Array(Number(ownersCount))].map((x, index) => (\n                                <MenuItem key={index} value={`${index + 1}`}>\n                                  {index + 1}\n                                </MenuItem>\n                              ))}\n                            </SelectField>\n                          </>\n                        )}\n                        validate={composeValidators(required, mustBeInteger, minValue(1), differentFrom(threshold))}\n                      />\n                    </Col>\n                    <Col xs={10}>\n                      <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                        {`out of ${ownersCount} owner(s)`}\n                      </Paragraph>\n                    </Col>\n                  </Row>\n\n                  {/* Tx Parameters */}\n                  <TxParametersDetail\n                    txParameters={txParameters}\n                    onEdit={toggleEditMode}\n                    isTransactionCreation={isCreation}\n                    isTransactionExecution={isExecution}\n                    isOffChainSignature={isOffChainSignature}\n                  />\n                </Block>\n                {txEstimationExecutionStatus !== EstimationStatus.LOADING && (\n                  <div className={classes.gasCostsContainer}>\n                    <TransactionFees\n                      gasCostFormatted={gasCostFormatted}\n                      isExecution={isExecution}\n                      isCreation={isCreation}\n                      isOffChainSignature={isOffChainSignature}\n                      txEstimationExecutionStatus={txEstimationExecutionStatus}\n                    />\n                  </div>\n                )}\n\n                <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\n                  <Modal.Footer.Buttons\n                    cancelButtonProps={{ onClick: onClose }}\n                    confirmButtonProps={{\n                      disabled: disabledSubmitForm,\n                      status: buttonStatus,\n                      text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                    }}\n                  />\n                </Modal.Footer>\n              </>\n            )}\n          </GnoForm>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { createStyles } from '@material-ui/core/styles'\nimport { border, fontColor, lg, secondaryText, smallFontSize, xl } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  ownersText: {\n    color: secondaryText,\n    '& b': {\n      color: fontColor,\n    },\n  },\n  container: {\n    padding: lg,\n  },\n  buttonRow: {\n    padding: lg,\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    boxSizing: 'border-box',\n    width: '100%',\n    justifyContent: 'flex-end',\n    borderTop: `2px solid ${border}`,\n  },\n  modifyBtn: {\n    height: xl,\n    fontSize: smallFontSize,\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Button from 'src/components/layout/Button'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\n\nimport { ChangeThresholdModal } from './ChangeThreshold'\nimport { styles } from './style'\n\nconst useStyles = makeStyles(styles)\n\nconst ThresholdSettings = (): React.ReactElement => {\n  const classes = useStyles()\n  const [isModalOpen, setModalOpen] = useState(false)\n  const { address: safeAddress = '', owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const granted = useSelector(grantedSelector)\n\n  const toggleModal = () => {\n    setModalOpen((prevOpen) => !prevOpen)\n  }\n\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Owners' })\n  }, [trackEvent])\n\n  return (\n    <>\n      <Block className={classes.container}>\n        <Heading tag=\"h2\">Required confirmations</Heading>\n        <Paragraph>Any transaction requires the confirmation of:</Paragraph>\n        <Paragraph className={classes.ownersText} size=\"lg\">\n          <Bold>{threshold}</Bold> out of <Bold>{owners?.length || 0}</Bold> owners\n        </Paragraph>\n        {owners && owners.length > 1 && granted && (\n          <Row className={classes.buttonRow}>\n            <Button\n              className={classes.modifyBtn}\n              color=\"primary\"\n              minWidth={120}\n              onClick={toggleModal}\n              variant=\"contained\"\n            >\n              Change\n            </Button>\n          </Row>\n        )}\n      </Block>\n      <Modal\n        description=\"Change Required Confirmations Form\"\n        handleClose={toggleModal}\n        open={isModalOpen}\n        title=\"Change Required Confirmations\"\n      >\n        <ChangeThresholdModal\n          onClose={toggleModal}\n          ownersCount={owners?.length}\n          safeAddress={safeAddress}\n          threshold={threshold}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default ThresholdSettings\n"],"sourceRoot":""}