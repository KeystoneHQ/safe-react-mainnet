{"version":3,"sources":["components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/Table/TableHead.tsx","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","components/Table/sorting.ts","components/Table/index.tsx","components/forms/AddressInput/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx"],"names":["styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","alt","role","src","QRIcon","testId","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","key","id","disablePadding","sortDirection","static","active","direction","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","state","previous","_proto","componentDidUpdate","_this$props","children","setState","render","OnChange","_ref","createElement","Field","subscription","allowNull","cx","classNames","bind","Heading","tag","truncate","capitalize","undefined","module","exports","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","xl","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","defaultOrder","newOrder","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","aria-labelledby","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","withStyles","AddressInput","text","placeholder","fieldMutator","inputAdornment","validators","defaultValue","disabled","TextField","type","spellCheck","validate","composeValidators","required","mustBeEthereumAddress","address","trimSpaces","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","resolverAddr","formattedAddress","checksumAddress","logError","Errors","_101","message","Toolbar","_props$component","_props$disableGutters","disableGutters","_props$variant","other","_objectWithoutProperties","clsx","gutters","theme","position","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","useTheme","event","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","icon","selectIcon","InputBase","rowsPerPageOption","menuItem","min","actions","palette","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","textAlign","textAlignLast","annotation","manage","closeIcon","formContainer","md","gap","ADD_OWNER_NAME_INPUT_TEST_ID","ADD_OWNER_ADDRESS_INPUT_TEST_ID","ADD_OWNER_NEXT_BTN_TEST_ID","formMutators","setOwnerAddress","args","utils","changeValue","setOwnerName","OwnerForm","onSubmit","initialValues","addressBookMap","useSelector","currentNetworkAddressBookAsMap","currentSafe","safeAddress","owners","ownerDoesntExist","uniqueAddress","ownerAddressIsNotSafeAddress","addressIsNotCurrentSafe","weight","GnoForm","ownerName","ownerAddress","values","mutators","scannedAddress","startsWith","replace","xs","validAddressBookName","isValidAddress","center","Footer","Buttons","cancelButtonProps","confirmButtonProps","info","flexDirection","details","borderRight","border","ownersTitle","owner","textOverflow","selectedOwner","gasCostsContainer","ReviewAddOwner","onClickBack","setData","currentSafeWithNames","safeName","safeVersion","currentVersion","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","useEstimateTransactionGas","txData","txRecipient","safeTxGas","gasLimit","gasEstimation","gasCostFormatted","gasPriceFormatted","txEstimationExecutionStatus","isExecution","isOffChainSignature","isCreation","useEstimationStatus","buttonStatus","isCurrent","getGnosisSafeInstanceAt","methods","addOwnerWithThreshold","threshold","encodeABI","calculateAddOwnerData","EditableTxParameters","ethGasLimit","ethGasPrice","toString","closeEditModalCallback","txParameters","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","Fragment","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","data-testid","TxParametersDetail","onEdit","compact","isTransactionCreation","isTransactionExecution","status","EstimationStatus","LOADING","headingText","ownersText","inputRow","errorText","bottom","ThresholdForm","numOptions","SelectField","Array","x","mustBeInteger","minValue","maxValue","sendAddOwner","dispatch","gnosisSafe","createTransaction","valueInWei","txNonce","safeNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","addressBookAddOrUpdate","makeAddressBookEntry","AddOwnerModal","activeScreen","setActiveScreen","setValues","useDispatch","onAddOwner","paperClassName","newValues","stateValues","container","RENAME_OWNER_INPUT_TEST_ID","SAVE_OWNER_CHANGES_BTN_TEST_ID","EditOwnerModal","enqueueSnackbar","NOTIFICATIONS","OWNER_NAME_CHANGE_EXECUTED_MSG","pristine","initialValue","justify","CheckOwner","ReviewRemoveOwnerModal","getOwners","safeOwners","findIndex","sameAddress","prevAddress","SENTINEL_ADDRESS","removeOwner","calculateRemoveOwnerData","safeOwner","withoutBorder","ownersCount","defaultThreshold","sendRemoveOwner","ownerAddressToRemove","toLowerCase","RemoveOwnerModal","cpValues","REPLACE_OWNER_NAME_INPUT_TEST_ID","REPLACE_OWNER_ADDRESS_INPUT_TEST_ID","REPLACE_OWNER_NEXT_BTN_TEST_ID","selectedOwnerRemoved","selectedOwnerAdded","ReviewReplaceOwnerModal","newOwner","swapOwner","calculateReplaceOwnerData","sendReplaceOwner","ReplaceOwnerModal","setNewOwner","safeAddressFromUrl","currentSafeCurrentVersion","onReplaceOwner","checksumAddr","OWNERS_TABLE_NAME_ID","OWNERS_TABLE_ADDRESS_ID","paddingBottom","hide","visibility","noBorderBottom","borderBottom","editOwnerIcon","replaceOwnerIcon","controlsRow","borderRadius","removeOwnerIcon","RENAME_OWNER_BTN_TEST_ID","REMOVE_OWNER_BTN_TEST_ID","ADD_OWNER_BTN_TEST_ID","REPLACE_OWNER_BTN_TEST_ID","OWNERS_ROW_TEST_ID","ManageOwners","granted","trackEvent","useAnalytics","setSelectedOwner","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","action","row","prevState","onHide","Boolean","category","SAFE_NAVIGATION_EVENT","nameColumn","custom","addressColumn","actionsColumn","generateColumns","autoColumns","c","ownerData","getOwnerData","TableContainer","TableRow","cn","ButtonHelper","dataTestId","tooltip","end"],"mappings":"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","file":"static/js/45.5c1a6bfe.chunk.js","sourcesContent":["import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { makeStyles } from '@material-ui/core/styles'\nimport React, { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import { createElement, Component } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xl, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: xl,\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import * as React from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\n\n// an idea for second field was taken from here\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => (\n  <>\n    <Field\n      className={className}\n      component={TextField as any}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      inputAdornment={inputAdornment}\n      name={name}\n      placeholder={placeholder}\n      testId={testId}\n      text={text}\n      type=\"text\"\n      spellCheck={false}\n      validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\n    />\n    <OnChange name={name}>\n      {async (value: string) => {\n        const address = trimSpaces(value)\n        if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n          try {\n            const resolverAddr = await getAddressFromDomain(address)\n            const formattedAddress = checksumAddress(resolverAddr)\n            fieldMutator(formattedAddress)\n          } catch (err) {\n            logError(Errors._101, err.message)\n          }\n        } else {\n          fieldMutator(address)\n        }\n      }}\n    </OnChange>\n  </>\n)\n\nexport default AddressInput\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { lg, md, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    height: '74px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport { Mutator } from 'final-form'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport { styles } from './style'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { OwnerValues } from '../..'\nimport { Modal } from 'src/components/Modal'\n\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values) => void\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, initialValues }: OwnerFormProps): React.ReactElement => {\n  const classes = useStyles()\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners = [] } = useSelector(currentSafe) ?? {}\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Add new owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        initialValues={{\n          ownerName: initialValues?.ownerName,\n          ownerAddress: initialValues?.ownerAddress,\n        }}\n        onSubmit={handleSubmit}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row margin=\"md\">\n                  <Paragraph>Add a new owner to the active Safe</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose, text: 'Cancel' }}\n                  confirmButtonProps={{\n                    type: 'submit',\n                    text: 'Next',\n                    testId: ADD_OWNER_NEXT_BTN_TEST_ID,\n                  }}\n                />\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core/styles'\n\nexport const styles = createStyles({\n  root: {\n    height: '372px',\n  },\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    height: '74px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 2px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: lg,\n  },\n  owner: {\n    padding: sm,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  selectedOwner: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#f7f5f5',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  gasCostsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n    width: '100%',\n    backgroundColor: background,\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { ReactElement, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\n\nimport { OwnerValues } from '../..'\nimport { styles } from './style'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\n\nexport const ADD_OWNER_SUBMIT_BTN_TEST_ID = 'add-owner-submit-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype ReviewAddOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  values: OwnerValues\n}\n\nexport const ReviewAddOwner = ({ onClickBack, onClose, onSubmit, values }: ReviewAddOwnerProps): ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasEstimation,\n    gasCostFormatted,\n    gasPriceFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isOffChainSignature,\n    isCreation,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateAddOwnerData = () => {\n      try {\n        const safeInstance = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n        const txData = safeInstance.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        console.error('Error calculating ERC721 transfer data:', error.message)\n      }\n    }\n    calculateAddOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, values.ownerAddress, values.threshold])\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = Number(gasPriceFormatted)\n    const newGasPrice = Number(txParameters.ethGasPrice)\n    const oldSafeTxGas = Number(gasEstimation)\n    const newSafeTxGas = Number(txParameters.safeTxGas)\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation.toString()}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <Row align=\"center\" className={classes.heading} grow>\n            <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n              Add new owner\n            </Paragraph>\n            <Paragraph className={classes.annotation}>3 of 3</Paragraph>\n            <IconButton disableRipple onClick={onClose}>\n              <Close className={classes.closeIcon} />\n            </IconButton>\n          </Row>\n          <Hairline />\n          <Block>\n            <Row className={classes.root}>\n              <Col layout=\"column\" xs={4}>\n                <Block className={classes.details}>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\n                      Details\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Safe name\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {safeName}\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Any transaction requires the confirmation of:\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {`${values.threshold} out of ${(owners?.length || 0) + 1} owner(s)`}\n                    </Paragraph>\n                  </Block>\n                </Block>\n              </Col>\n              <Col className={classes.owners} layout=\"column\" xs={8}>\n                <Row className={classes.ownersTitle}>\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\n                    {`${(owners?.length || 0) + 1} Safe owner(s)`}\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                {owners?.map((owner) => (\n                  <React.Fragment key={owner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={12}>\n                        <EthHashInfo\n                          hash={owner.address}\n                          name={owner.name}\n                          showCopyBtn\n                          showAvatar\n                          explorerUrl={getExplorerInfo(owner.address)}\n                        />\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </React.Fragment>\n                ))}\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    ADDING NEW OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwner} data-testid=\"add-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={values.ownerAddress}\n                      name={values.ownerName}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(values.ownerAddress)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Col>\n            </Row>\n          </Block>\n          <Hairline />\n\n          {/* Tx Parameters */}\n          <TxParametersDetail\n            txParameters={txParameters}\n            onEdit={toggleEditMode}\n            compact={false}\n            isTransactionCreation={isCreation}\n            isTransactionExecution={isExecution}\n            isOffChainSignature={isOffChainSignature}\n          />\n\n          <Block className={classes.gasCostsContainer}>\n            <TransactionFees\n              gasCostFormatted={gasCostFormatted}\n              isExecution={isExecution}\n              isCreation={isCreation}\n              isOffChainSignature={isOffChainSignature}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          </Block>\n          <Hairline />\n          <Row align=\"center\" className={classes.buttonRow}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmit(txParameters),\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                testId: ADD_OWNER_SUBMIT_BTN_TEST_ID,\n              }}\n            />\n          </Row>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    height: '74px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  headingText: {\n    fontSize: md,\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { Modal } from 'src/components/Modal'\n\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype SubmitProps = {\n  threshold: number\n}\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (values: SubmitProps) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const numOptions = owners ? owners.length + 1 : 0\n\n  const handleSubmit = (values: SubmitProps) => {\n    onSubmit(values)\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Add new owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm initialValues={{ threshold: initialValues.threshold || threshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.formContainer}>\n              <Row>\n                <Paragraph className={classes.headingText} weight=\"bolder\">\n                  Set the required owner confirmations:\n                </Paragraph>\n              </Row>\n              <Row>\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n              </Row>\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                <Col xs={2}>\n                  <Field\n                    data-testid=\"threshold-select-input\"\n                    name=\"threshold\"\n                    render={(props) => (\n                      <>\n                        <SelectField {...props} disableError>\n                          {[...Array(Number(numOptions))].map((x, index) => (\n                            <MenuItem key={index} value={`${index + 1}`}>\n                              {index + 1}\n                            </MenuItem>\n                          ))}\n                        </SelectField>\n                        {props.meta.error && props.meta.touched && (\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                            {props.meta.error}\n                          </Paragraph>\n                        )}\n                      </>\n                    )}\n                    validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                  />\n                </Col>\n                <Col xs={10}>\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                    out of {numOptions} owner(s)\n                  </Paragraph>\n                </Col>\n              </Row>\n            </Block>\n            <Hairline />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Modal.Footer.Buttons\n                cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                confirmButtonProps={{\n                  type: 'submit',\n                  text: 'Review',\n                  testId: ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID,\n                }}\n              />\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nimport { OwnerForm } from './screens/OwnerForm'\nimport { ReviewAddOwner } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\n\nexport type OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendAddOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  txParameters: TxParameters,\n  dispatch: Dispatch,\n): Promise<void> => {\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n  const txData = gnosisSafe.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash) {\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: values.ownerAddress, name: values.ownerName })))\n  }\n}\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport const AddOwnerModal = ({ isOpen, onClose }: Props): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\n  const [values, setValues] = useState<OwnerValues>({ ownerName: '', ownerAddress: '', threshold: '' })\n  const dispatch = useDispatch()\n  const { address: safeAddress = '', currentVersion: safeVersion = '' } = useSelector(currentSafe) ?? {}\n\n  useEffect(\n    () => () => {\n      setActiveScreen('selectOwner')\n      setValues({ ownerName: '', ownerAddress: '', threshold: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewAddOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('selectOwner')\n    }\n  }\n\n  const ownerSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      ownerName: newValues.ownerName,\n      ownerAddress: checksumAddress(newValues.ownerAddress),\n    }))\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      threshold: newValues.threshold,\n    }))\n    setActiveScreen('reviewAddOwner')\n  }\n\n  const onAddOwner = async (txParameters: TxParameters) => {\n    onClose()\n\n    try {\n      await sendAddOwner(values, safeAddress, safeVersion, txParameters, dispatch)\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress })))\n    } catch (error) {\n      console.error('Error while removing an owner', error)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Add owner to Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Add owner to Safe\"\n    >\n      <>\n        {activeScreen === 'selectOwner' && (\n          <OwnerForm initialValues={values} onClose={onClose} onSubmit={ownerSubmitted} />\n        )}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewAddOwner' && (\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: lg,\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    container: {\n      padding: `${md} ${lg}`,\n      minHeight: '200px',\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { getExplorerInfo } from 'src/config'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\n\ntype OwnProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const EditOwnerModal = ({ isOpen, onClose, owner }: OwnProps): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleSubmit = ({ ownerName }: { ownerName: string }): void => {\n    // Update the value only if the ownerName really changed\n    if (ownerName !== owner.name) {\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: owner.address, name: ownerName })))\n      dispatch(enqueueSnackbar(NOTIFICATIONS.OWNER_NAME_CHANGE_EXECUTED_MSG))\n    }\n    onClose()\n  }\n\n  return (\n    <Modal\n      description=\"Edit owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"smaller-modal-window\"\n      title=\"Edit owner from Safe\"\n    >\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Edit owner name\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm onSubmit={handleSubmit} subscription={{ pristine: true }}>\n        {(...args) => {\n          const pristine = args[2].pristine\n          return (\n            <>\n              <Block className={classes.container}>\n                <Row margin=\"md\">\n                  <Field\n                    component={TextField}\n                    initialValue={owner.name}\n                    name=\"ownerName\"\n                    placeholder=\"Owner name*\"\n                    testId={RENAME_OWNER_INPUT_TEST_ID}\n                    text=\"Owner name*\"\n                    type=\"text\"\n                    validate={composeValidators(required, validAddressBookName)}\n                  />\n                </Row>\n                <Row>\n                  <Block justify=\"center\">\n                    <EthHashInfo\n                      hash={owner.address}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Block>\n                </Row>\n              </Block>\n              <GenericModal.Footer>\n                <GenericModal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ disabled: pristine, testId: SAVE_OWNER_CHANGES_BTN_TEST_ID, text: 'Save' }}\n                />\n              </GenericModal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: `${sm} ${lg}`,\n      justifyContent: 'flex-start',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    annotation: {\n      lineHeight: 'normal',\n      color: secondaryText,\n      marginRight: 'auto',\n      marginLeft: '20px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    closeIcon: {\n      height: '35px',\n      width: '35px',\n    },\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport React, { ReactElement } from 'react'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport { getExplorerInfo } from 'src/config'\nimport { Modal } from 'src/components/Modal'\n\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\n\ninterface CheckOwnerProps {\n  onClose: () => void\n  onSubmit: () => void\n  owner: OwnerData\n}\n\nexport const CheckOwner = ({ onClose, onSubmit, owner }: CheckOwnerProps): ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"md\">\n          <Paragraph size=\"lg\">Review the owner you want to remove from the active Safe:</Paragraph>\n        </Row>\n        <Row>\n          <Col align=\"center\" xs={12}>\n            <EthHashInfo\n              hash={owner.address}\n              name={owner.name}\n              showCopyBtn\n              showAvatar\n              explorerUrl={getExplorerInfo(owner.address)}\n            />\n          </Col>\n        </Row>\n      </Block>\n      <Modal.Footer>\n        <Modal.Footer.Buttons\n          cancelButtonProps={{ onClick: onClose }}\n          confirmButtonProps={{ onClick: onSubmit, testId: REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID, text: 'Next' }}\n        />\n      </Modal.Footer>\n    </>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, border, lg, secondaryText, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    heading: {\n      padding: `${sm} ${lg}`,\n      justifyContent: 'flex-start',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    annotation: {\n      lineHeight: 'normal',\n      color: secondaryText,\n      marginRight: 'auto',\n      marginLeft: '20px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    closeIcon: {\n      height: '35px',\n      width: '35px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: lg,\n    },\n    owner: {\n      padding: sm,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwner: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n    gasCostsContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      width: '100%',\n      backgroundColor: background,\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\nexport const REMOVE_OWNER_REVIEW_BTN_TEST_ID = 'remove-owner-review-btn'\n\ntype ReviewRemoveOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  owner: OwnerData\n  threshold?: number\n}\n\nexport const ReviewRemoveOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  threshold = 1,\n}: ReviewRemoveOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const numOptions = owners ? owners.length - 1 : 0\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    if (!threshold) {\n      console.error(\"Threshold value was not define, tx can't be executed\")\n      return\n    }\n\n    const calculateRemoveOwnerData = async () => {\n      try {\n        // FixMe: if the order returned by the service is the same as in the contracts\n        //  the data lookup can be removed from here\n        const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n        const safeOwners = await gnosisSafe.methods.getOwners().call()\n        const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, owner.address))\n        const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n        const txData = gnosisSafe.methods.removeOwner(prevAddress, owner.address, threshold).encodeABI()\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        console.error('Error calculating ERC721 transfer data:', error.message)\n      }\n    }\n    calculateRemoveOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, owner.address, threshold])\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = Number(gasPriceFormatted)\n    const newGasPrice = Number(txParameters.ethGasPrice)\n    const oldSafeTxGas = Number(gasEstimation)\n    const newSafeTxGas = Number(txParameters.safeTxGas)\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation.toString()}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <Row align=\"center\" className={classes.heading} grow>\n            <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n              Remove owner\n            </Paragraph>\n            <Paragraph className={classes.annotation}>3 of 3</Paragraph>\n            <IconButton disableRipple onClick={onClose}>\n              <Close className={classes.closeIcon} />\n            </IconButton>\n          </Row>\n          <Hairline />\n          <Block>\n            <Row className={classes.root}>\n              {/* Details */}\n              <Col layout=\"column\" xs={4}>\n                <Block className={classes.details}>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\n                      Details\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Safe name\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {safeName}\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Any transaction requires the confirmation of:\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {`${threshold} out of ${numOptions} owner(s)`}\n                    </Paragraph>\n                  </Block>\n                </Block>\n              </Col>\n              {/* Owners */}\n              <Col className={classes.owners} layout=\"column\" xs={8}>\n                <Row className={classes.ownersTitle}>\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\n                    {`${numOptions} Safe owner(s)`}\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                {owners?.map(\n                  (safeOwner) =>\n                    !sameAddress(safeOwner.address, owner.address) && (\n                      <React.Fragment key={safeOwner.address}>\n                        <Row className={classes.owner}>\n                          <Col align=\"center\" xs={12}>\n                            <EthHashInfo\n                              hash={safeOwner.address}\n                              name={safeOwner.name}\n                              showCopyBtn\n                              showAvatar\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\n                            />\n                          </Col>\n                        </Row>\n                        <Hairline />\n                      </React.Fragment>\n                    ),\n                )}\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    REMOVING OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwner} data-testid=\"remove-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Col>\n            </Row>\n          </Block>\n          <Hairline />\n\n          {/* Tx Parameters */}\n          <TxParametersDetail\n            txParameters={txParameters}\n            onEdit={toggleEditMode}\n            compact={false}\n            isTransactionCreation={isCreation}\n            isTransactionExecution={isExecution}\n            isOffChainSignature={isOffChainSignature}\n          />\n\n          {txEstimationExecutionStatus === EstimationStatus.LOADING ? null : (\n            <Block className={classes.gasCostsContainer}>\n              <TransactionFees\n                gasCostFormatted={gasCostFormatted}\n                isExecution={isExecution}\n                isCreation={isCreation}\n                isOffChainSignature={isOffChainSignature}\n                txEstimationExecutionStatus={txEstimationExecutionStatus}\n              />\n            </Block>\n          )}\n          <Modal.Footer withoutBorder>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmit(txParameters),\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                type: 'submit',\n                testId: REMOVE_OWNER_REVIEW_BTN_TEST_ID,\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: `${sm} ${lg}`,\n      justifyContent: 'flex-start',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    annotation: {\n      lineHeight: 'normal',\n      color: secondaryText,\n      marginRight: 'auto',\n      marginLeft: '20px',\n    },\n    closeIcon: {\n      height: '35px',\n      width: '35px',\n    },\n    headingText: {\n      fontSize: md,\n    },\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    ownersText: {\n      marginLeft: sm,\n    },\n    inputRow: {\n      position: 'relative',\n    },\n    errorText: {\n      position: 'absolute',\n      bottom: '-25px',\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Close from '@material-ui/icons/Close'\nimport React, { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const ownersCount = owners?.length ?? 0\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const defaultThreshold = threshold > 1 && threshold === ownersCount ? threshold - 1 : threshold\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm\n        initialValues={{ threshold: initialValues.threshold || defaultThreshold.toString() }}\n        onSubmit={handleSubmit}\n      >\n        {() => {\n          const numOptions = ownersCount > 1 ? ownersCount - 1 : 1\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\n                    Set the required owner confirmations:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n                </Row>\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                  <Col xs={2}>\n                    <Field\n                      data-testid=\"threshold-select-input\"\n                      name=\"threshold\"\n                      render={(props) => (\n                        <>\n                          <SelectField {...props} disableError>\n                            {[...Array(Number(numOptions))].map((x, index) => (\n                              <MenuItem key={index} value={`${index + 1}`}>\n                                {index + 1}\n                              </MenuItem>\n                            ))}\n                          </SelectField>\n                          {props.meta.error && props.meta.touched && (\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                              {props.meta.error}\n                            </Paragraph>\n                          )}\n                        </>\n                      )}\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                    />\n                  </Col>\n                  <Col xs={10}>\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                      out of {ownersCount ? ownersCount - 1 : 0} owner(s)\n                    </Paragraph>\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                  confirmButtonProps={{ testId: REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID, text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { CheckOwner } from './screens/CheckOwner'\nimport { ReviewRemoveOwnerModal } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\n\nimport Modal from 'src/components/Modal'\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\ntype OwnerValues = OwnerData & {\n  threshold: string\n}\n\nexport const sendRemoveOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n): Promise<void> => {\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\n  const index = safeOwners.findIndex(\n    (ownerAddress) => ownerAddress.toLowerCase() === ownerAddressToRemove.toLowerCase(),\n  )\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n  const txData = gnosisSafe.methods.removeOwner(prevAddress, ownerAddressToRemove, values.threshold).encodeABI()\n\n  dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n}\n\ntype RemoveOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const RemoveOwnerModal = ({ isOpen, onClose, owner }: RemoveOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [values, setValues] = useState<OwnerValues>({ ...owner, threshold: '' })\n  const dispatch = useDispatch()\n  const { address: safeAddress = '', currentVersion: safeVersion = '' } = useSelector(currentSafe) ?? {}\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewRemoveOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('checkOwner')\n    }\n  }\n\n  const ownerSubmitted = () => {\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    const cpValues = { ...values, threshold: newValues.threshold }\n    setValues(cpValues)\n    setActiveScreen('reviewRemoveOwner')\n  }\n\n  const onRemoveOwner = (txParameters: TxParameters) => {\n    onClose()\n    sendRemoveOwner(values, safeAddress, safeVersion, owner.address, dispatch, txParameters)\n  }\n\n  return (\n    <Modal\n      description=\"Remove owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Remove owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} owner={owner} />}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewRemoveOwner' && (\n          <ReviewRemoveOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onRemoveOwner}\n            owner={owner}\n            threshold={Number(values.threshold)}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: `${sm} ${lg}`,\n      justifyContent: 'flex-start',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    annotation: {\n      color: secondaryText,\n      marginRight: 'auto',\n      marginLeft: '20px',\n      lineHeight: 'normal',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    closeIcon: {\n      height: '35px',\n      width: '35px',\n    },\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    owner: {\n      alignItems: 'center',\n    },\n    address: {\n      marginRight: sm,\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport { Mutator } from 'final-form'\nimport React, { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { useStyles } from './style'\nimport { getExplorerInfo } from 'src/config'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\n\nimport { OwnerValues } from '../..'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\ntype NewOwnerProps = {\n  ownerAddress: string\n  ownerName: string\n}\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values: NewOwnerProps) => void\n  owner: OwnerData\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, owner, initialValues }: OwnerFormProps): ReactElement => {\n  const classes = useStyles()\n\n  const handleSubmit = (values: NewOwnerProps) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners } = useSelector(currentSafe) ?? {}\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Replace owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        onSubmit={handleSubmit}\n        initialValues={{\n          ownerName: initialValues?.name,\n          ownerAddress: initialValues?.address,\n        }}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph>\n                    Review the owner you want to replace from the active Safe. Then specify the new owner you want to\n                    replace it with:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph>Current owner</Paragraph>\n                </Row>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Paragraph>New owner</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ testId: REPLACE_OWNER_NEXT_BTN_TEST_ID, text: 'Next' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    heading: {\n      padding: `${sm} ${lg}`,\n      justifyContent: 'flex-start',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    annotation: {\n      color: secondaryText,\n      marginRight: 'auto',\n      marginLeft: '20px',\n      lineHeight: 'normal',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    closeIcon: {\n      height: '35px',\n      width: '35px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: lg,\n    },\n    owner: {\n      padding: sm,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwnerRemoved: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n    selectedOwnerAdded: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#f7f5f5',\n    },\n    gasCostsContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      width: '100%',\n      backgroundColor: background,\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\n\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\n\ntype ReplaceOwnerProps = {\n  onClose: () => void\n  onClickBack: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  owner: OwnerData\n  newOwner: {\n    address: string\n    name: string\n  }\n}\n\nexport const ReviewReplaceOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  newOwner,\n}: ReplaceOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    threshold = 1,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const [manualSafeTxGas, setManualSafeTxGas] = useState(0)\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n    const calculateReplaceOwnerData = async () => {\n      const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n      const safeOwners = await gnosisSafe.methods.getOwners().call()\n      const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, owner.address))\n      const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n      const txData = gnosisSafe.methods.swapOwner(prevAddress, owner.address, newOwner.address).encodeABI()\n      if (isCurrent) {\n        setData(txData)\n      }\n    }\n\n    calculateReplaceOwnerData()\n    return () => {\n      isCurrent = false\n    }\n  }, [owner.address, safeAddress, safeVersion, newOwner.address])\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = Number(gasPriceFormatted)\n    const newGasPrice = Number(txParameters.ethGasPrice)\n    const oldSafeTxGas = Number(gasEstimation)\n    const newSafeTxGas = Number(txParameters.safeTxGas)\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation.toString()}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <Row align=\"center\" className={classes.heading} grow>\n            <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n              Replace owner\n            </Paragraph>\n            <Paragraph className={classes.annotation}>2 of 2</Paragraph>\n            <IconButton disableRipple onClick={onClose}>\n              <Close className={classes.closeIcon} />\n            </IconButton>\n          </Row>\n          <Hairline />\n          <Block>\n            <Row className={classes.root}>\n              <Col layout=\"column\" xs={4}>\n                <Block className={classes.details}>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\n                      Details\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Safe name\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {safeName}\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Any transaction requires the confirmation of:\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {`${threshold} out of ${owners?.length || 0} owner(s)`}\n                    </Paragraph>\n                  </Block>\n                </Block>\n              </Col>\n              <Col className={classes.owners} layout=\"column\" xs={8}>\n                <Row className={classes.ownersTitle}>\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\n                    {`${owners?.length || 0} Safe owner(s)`}\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                {owners?.map(\n                  (safeOwner) =>\n                    !sameAddress(safeOwner.address, owner.address) && (\n                      <React.Fragment key={safeOwner.address}>\n                        <Row className={classes.owner}>\n                          <Col align=\"center\" xs={12}>\n                            <EthHashInfo\n                              hash={safeOwner.address}\n                              name={safeOwner.name}\n                              showCopyBtn\n                              showAvatar\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\n                            />\n                          </Col>\n                        </Row>\n                        <Hairline />\n                      </React.Fragment>\n                    ),\n                )}\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    REMOVING OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwnerRemoved} data-testid=\"remove-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    ADDING NEW OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwnerAdded} data-testid=\"add-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={newOwner.address}\n                      name={newOwner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(newOwner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Col>\n            </Row>\n          </Block>\n          <Hairline />\n\n          {/* Tx Parameters */}\n          <TxParametersDetail\n            txParameters={txParameters}\n            onEdit={toggleEditMode}\n            compact={false}\n            isTransactionCreation={isCreation}\n            isTransactionExecution={isExecution}\n            isOffChainSignature={isOffChainSignature}\n          />\n\n          <Block className={classes.gasCostsContainer}>\n            <TransactionFees\n              gasCostFormatted={gasCostFormatted}\n              isExecution={isExecution}\n              isCreation={isCreation}\n              isOffChainSignature={isOffChainSignature}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          </Block>\n          <Modal.Footer withoutBorder>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmit(txParameters),\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                type: 'submit',\n                testId: REPLACE_OWNER_SUBMIT_BTN_TEST_ID,\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { currentSafeCurrentVersion, safeAddressFromUrl } from 'src/logic/safe/store/selectors'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nimport { OwnerForm } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm'\nimport { ReviewReplaceOwnerModal } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { isValidAddress } from 'src/utils/isValidAddress'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nexport type OwnerValues = {\n  address: string\n  name: string\n}\n\nexport const sendReplaceOwner = async (\n  newOwner: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n): Promise<void> => {\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\n  const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, ownerAddressToRemove))\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n  const txData = gnosisSafe.methods.swapOwner(prevAddress, ownerAddressToRemove, newOwner.address).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas ? Number(txParameters.safeTxGas) : undefined,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash) {\n    // update the AB\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry(newOwner)))\n  }\n}\n\ntype ReplaceOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const ReplaceOwnerModal = ({ isOpen, onClose, owner }: ReplaceOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [newOwner, setNewOwner] = useState({ address: '', name: '' })\n  const dispatch = useDispatch()\n  const safeAddress = useSelector(safeAddressFromUrl)\n  const safeVersion = useSelector(currentSafeCurrentVersion) as string\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n      setNewOwner({ address: '', name: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => setActiveScreen('checkOwner')\n\n  const ownerSubmitted = (newValues) => {\n    const { ownerAddress, ownerName } = newValues\n\n    if (isValidAddress(ownerAddress)) {\n      const checksumAddr = checksumAddress(ownerAddress)\n      setNewOwner({ address: checksumAddr, name: ownerName })\n      setActiveScreen('reviewReplaceOwner')\n    }\n  }\n\n  const onReplaceOwner = async (txParameters: TxParameters) => {\n    onClose()\n    try {\n      await sendReplaceOwner(newOwner, safeAddress, safeVersion, owner.address, dispatch, txParameters)\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry(newOwner)))\n    } catch (error) {\n      console.error('Error while removing an owner', error)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Replace owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Replace owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && (\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} initialValues={newOwner} owner={owner} />\n        )}\n        {activeScreen === 'reviewReplaceOwner' && (\n          <ReviewReplaceOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onReplaceOwner}\n            owner={owner}\n            newOwner={newOwner}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const OWNERS_TABLE_NAME_ID = 'name'\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\n\nexport type OwnerData = { address: string; name: string }\n\nexport const getOwnerData = (owners: AddressBookState): OwnerData[] => {\n  return owners.map((owner) => ({\n    [OWNERS_TABLE_NAME_ID]: owner.name,\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const nameColumn: TableColumn = {\n    id: OWNERS_TABLE_NAME_ID,\n    order: false,\n    formatTypeSort: (value: string) => value.toLowerCase(),\n    disablePadding: false,\n    label: 'Name',\n    width: 150,\n    custom: false,\n    align: 'left',\n  }\n\n  const addressColumn: TableColumn = {\n    id: OWNERS_TABLE_ADDRESS_ID,\n    order: false,\n    disablePadding: false,\n    label: 'Address',\n    custom: false,\n    align: 'left',\n  }\n\n  const actionsColumn: TableColumn = {\n    id: OWNERS_TABLE_ACTIONS_ID,\n    order: false,\n    disablePadding: false,\n    label: '',\n    custom: true,\n  }\n\n  return List([nameColumn, addressColumn, actionsColumn])\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      minHeight: '420px',\n    },\n    title: {\n      padding: lg,\n      paddingBottom: 0,\n    },\n    annotation: {\n      paddingLeft: lg,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: '#f7f5f5',\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n      minWidth: '100px',\n      gap: '16px',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    editOwnerIcon: {\n      cursor: 'pointer',\n    },\n    replaceOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n    controlsRow: {\n      backgroundColor: 'white',\n      padding: lg,\n      borderRadius: sm,\n    },\n    removeOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n  }),\n)\n","import React, { useState, useEffect, ReactElement } from 'react'\nimport { EthHashInfo, Icon } from '@gnosis.pm/safe-react-components'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport cn from 'classnames'\n\nimport { AddOwnerModal } from './AddOwnerModal'\nimport { EditOwnerModal } from './EditOwnerModal'\nimport { RemoveOwnerModal } from './RemoveOwnerModal'\nimport { ReplaceOwnerModal } from './ReplaceOwnerModal'\nimport { OWNERS_TABLE_ADDRESS_ID, generateColumns, getOwnerData, OwnerData } from './dataFetcher'\nimport { useStyles } from './style'\n\nimport { getExplorerInfo } from 'src/config'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph/index'\nimport Row from 'src/components/layout/Row'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\n\ntype Props = {\n  granted: boolean\n  owners: AddressBookState\n}\n\nconst ManageOwners = ({ granted, owners }: Props): ReactElement => {\n  const { trackEvent } = useAnalytics()\n  const classes = useStyles()\n\n  const [selectedOwner, setSelectedOwner] = useState<OwnerData | undefined>()\n  const [modalsStatus, setModalStatus] = useState({\n    showAddOwner: false,\n    showRemoveOwner: false,\n    showReplaceOwner: false,\n    showEditOwner: false,\n  })\n\n  const onShow = (action, row?: OwnerData) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !prevState[`show${action}`],\n    }))\n    if (row) {\n      setSelectedOwner(row)\n    }\n  }\n\n  const onHide = (action) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\n    }))\n    setSelectedOwner(undefined)\n  }\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Owners' })\n  }, [trackEvent])\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const ownerData = getOwnerData(owners)\n\n  return (\n    <>\n      <Block className={classes.formContainer}>\n        <Heading className={classes.title} tag=\"h2\">\n          Manage Safe Owners\n        </Heading>\n        <Paragraph className={classes.annotation}>\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\n          with Gnosis or any third parties.\n        </Paragraph>\n        <TableContainer>\n          <Table\n            columns={columns}\n            data={ownerData}\n            defaultFixed\n            defaultOrderBy={OWNERS_TABLE_ADDRESS_ID}\n            disablePagination\n            label=\"Owners\"\n            noBorder\n            size={ownerData.length}\n          >\n            {(sortedData) =>\n              sortedData.map((row, index) => (\n                <TableRow\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                  data-testid={OWNERS_ROW_TEST_ID}\n                  key={index}\n                >\n                  {autoColumns.map((column: any) => (\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\n                        <Block justify=\"left\">\n                          <EthHashInfo\n                            hash={row[column.id]}\n                            showCopyBtn\n                            showAvatar\n                            explorerUrl={getExplorerInfo(row[column.id])}\n                          />\n                        </Block>\n                      ) : (\n                        row[column.id]\n                      )}\n                    </TableCell>\n                  ))}\n                  <TableCell component=\"td\">\n                    <Row align=\"end\" className={classes.actions}>\n                      <ButtonHelper onClick={onShow('EditOwner', row)} dataTestId={RENAME_OWNER_BTN_TEST_ID}>\n                        <Icon size=\"sm\" type=\"edit\" color=\"icon\" tooltip=\"Edit owner\" />\n                      </ButtonHelper>\n                      {granted && (\n                        <>\n                          <ButtonHelper onClick={onShow('ReplaceOwner', row)} dataTestId={REPLACE_OWNER_BTN_TEST_ID}>\n                            <Icon size=\"sm\" type=\"replaceOwner\" color=\"icon\" tooltip=\"Replace owner\" />\n                          </ButtonHelper>\n                          {ownerData.length > 1 && (\n                            <ButtonHelper onClick={onShow('RemoveOwner', row)} dataTestId={REMOVE_OWNER_BTN_TEST_ID}>\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove owner\" />\n                            </ButtonHelper>\n                          )}\n                        </>\n                      )}\n                    </Row>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </Table>\n        </TableContainer>\n      </Block>\n      {granted && (\n        <>\n          <Hairline />\n          <Row align=\"end\" className={classes.controlsRow} grow>\n            <Col end=\"xs\">\n              <Button\n                color=\"primary\"\n                onClick={onShow('AddOwner')}\n                size=\"small\"\n                testId={ADD_OWNER_BTN_TEST_ID}\n                variant=\"contained\"\n              >\n                Add new owner\n              </Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\n      {selectedOwner && (\n        <>\n          <RemoveOwnerModal\n            isOpen={modalsStatus.showRemoveOwner}\n            onClose={onHide('RemoveOwner')}\n            owner={selectedOwner}\n          />\n          <ReplaceOwnerModal\n            isOpen={modalsStatus.showReplaceOwner}\n            onClose={onHide('ReplaceOwner')}\n            owner={selectedOwner}\n          />\n          <EditOwnerModal isOpen={modalsStatus.showEditOwner} onClose={onHide('EditOwner')} owner={selectedOwner} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ManageOwners\n"],"sourceRoot":""}