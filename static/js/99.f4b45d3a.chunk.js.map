{"version":3,"sources":["routes/safe/container/index.tsx"],"names":["BALANCES_TAB_BTN_TEST_ID","SETTINGS_TAB_BTN_TEST_ID","APPS_TAB_BTN_TEST_ID","TRANSACTIONS_TAB_BTN_TEST_ID","ADDRESS_BOOK_TAB_BTN_TEST_ID","SAFE_VIEW_NAME_HEADING_TEST_ID","TRANSACTIONS_TAB_NEW_BTN_TEST_ID","Apps","React","lazy","Settings","Balances","TxList","AddressBookTable","Container","safeAddress","useSelector","safeAddressFromUrl","featuresEnabled","currentSafeFeaturesEnabled","balancesBaseRoute","generatePath","SAFE_ROUTES","ASSETS_BASE_ROUTE","settingsBaseRoute","SETTINGS_BASE_ROUTE","useState","isOpen","title","body","footer","onClose","modal","setModal","size","exact","path","render","wrapInSuspense","TRANSACTIONS","APPS","history","includes","FEATURES","SAFE_APPS","push","ASSETS_BALANCES","ADDRESS_BOOK","to"],"mappings":"wnBAWaA,EAA2B,mBAC3BC,EAA2B,mBAC3BC,EAAuB,eACvBC,EAA+B,uBAC/BC,EAA+B,uBAC/BC,EAAiC,oBACjCC,EAAmC,2BAE1CC,EAAOC,IAAMC,MAAK,kBAAM,wEACxBC,EAAWF,IAAMC,MAAK,kBAAM,mCAC5BE,EAAWH,IAAMC,MAAK,kBAAM,0DAC5BG,EAASJ,IAAMC,MAAK,kBAAM,gEAC1BI,EAAmBL,IAAMC,MAAK,kBAAM,wEAuF3BK,UArFG,WAChB,IAAMC,EAAcC,YAAYC,KAC1BC,EAAkBF,YAAYG,KAC9BC,EAAoBC,YAAaC,IAAYC,kBAAmB,CACpER,gBAEIS,EAAoBH,YAAaC,IAAYG,oBAAqB,CACtEV,gBAPwC,EAShBW,mBAAS,CACjCC,QAAQ,EACRC,MAAO,KACPC,KAAM,KACNC,OAAQ,KACRC,QAAS,eAd+B,mBASnCC,EATmC,KAS5BC,EAT4B,KAiB1C,IAAKf,EACH,OACE,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQgB,KAAK,QAmBnB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKhB,EAAL,gBAAsCiB,OAAQ,kBAAMC,YAAe,kBAAC3B,EAAD,MAAc,SAClG,kBAAC,IAAD,CACEwB,OAAK,EACLC,KAAMf,YAAaC,IAAYiB,aAAc,CAC3CxB,gBAEFsB,OAAQ,kBAAMC,YAAe,kBAAC1B,EAAD,MAAY,SAE3C,kBAAC,IAAD,CACEuB,OAAK,EACLC,KAAMf,YAAaC,IAAYkB,KAAM,CACnCzB,gBAEFsB,OAAQ,YAAkB,IAAfI,EAAc,EAAdA,QAQT,OAPKvB,EAAgBwB,SAASC,IAASC,YACrCH,EAAQI,KACNxB,YAAaC,IAAYwB,gBAAiB,CACxC/B,iBAICuB,YAAe,kBAAC/B,EAAD,MAAU,SAGpC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAI,UAAKZ,EAAL,aAAmCa,OAAQ,kBAAMC,YAAe,kBAAC5B,EAAD,MAAc,SAC/F,kBAAC,IAAD,CACEyB,OAAK,EACLC,KAAMf,YAAaC,IAAYyB,aAAc,CAC3ChC,gBAEFsB,OAAQ,kBAAMC,YAAe,kBAACzB,EAAD,MAAsB,SAErD,kBAAC,IAAD,CACEmC,GAAI3B,YAAaC,IAAYwB,gBAAiB,CAC5C/B,mBAILiB,EAAML,QAAU,kBAAC,eAAD,iBAAkBK,EAAlB,CAAyBD,QAvDpB,WACJ,IAAD,EAAfC,EAAMD,UACR,UAAAC,EAAMD,eAAN,cAAAC,IAGFC,EAAS,CACPN,QAAQ,EACRC,MAAO,KACPC,KAAM,KACNC,OAAQ,KACRC,QAAS","file":"static/js/99.f4b45d3a.chunk.js","sourcesContent":["import { GenericModal, Loader } from '@gnosis.pm/safe-react-components'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { generatePath, Redirect, Route, Switch } from 'react-router-dom'\n\nimport { currentSafeFeaturesEnabled, safeAddressFromUrl } from 'src/logic/safe/store/selectors'\nimport { wrapInSuspense } from 'src/utils/wrapInSuspense'\nimport { SAFE_ROUTES } from 'src/routes/routes'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { LoadingContainer } from 'src/components/LoaderContainer'\n\nexport const BALANCES_TAB_BTN_TEST_ID = 'balances-tab-btn'\nexport const SETTINGS_TAB_BTN_TEST_ID = 'settings-tab-btn'\nexport const APPS_TAB_BTN_TEST_ID = 'apps-tab-btn'\nexport const TRANSACTIONS_TAB_BTN_TEST_ID = 'transactions-tab-btn'\nexport const ADDRESS_BOOK_TAB_BTN_TEST_ID = 'address-book-tab-btn'\nexport const SAFE_VIEW_NAME_HEADING_TEST_ID = 'safe-name-heading'\nexport const TRANSACTIONS_TAB_NEW_BTN_TEST_ID = 'transactions-tab-new-btn'\n\nconst Apps = React.lazy(() => import('src/routes/safe/components/Apps'))\nconst Settings = React.lazy(() => import('src/routes/safe/components/Settings'))\nconst Balances = React.lazy(() => import('src/routes/safe/components/Balances'))\nconst TxList = React.lazy(() => import('src/routes/safe/components/Transactions/TxList'))\nconst AddressBookTable = React.lazy(() => import('src/routes/safe/components/AddressBook'))\n\nconst Container = (): React.ReactElement => {\n  const safeAddress = useSelector(safeAddressFromUrl)\n  const featuresEnabled = useSelector(currentSafeFeaturesEnabled)\n  const balancesBaseRoute = generatePath(SAFE_ROUTES.ASSETS_BASE_ROUTE, {\n    safeAddress,\n  })\n  const settingsBaseRoute = generatePath(SAFE_ROUTES.SETTINGS_BASE_ROUTE, {\n    safeAddress,\n  })\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: null,\n    body: null,\n    footer: null,\n    onClose: () => {},\n  })\n\n  if (!featuresEnabled) {\n    return (\n      <LoadingContainer>\n        <Loader size=\"md\" />\n      </LoadingContainer>\n    )\n  }\n\n  const closeGenericModal = () => {\n    if (modal.onClose) {\n      modal.onClose?.()\n    }\n\n    setModal({\n      isOpen: false,\n      title: null,\n      body: null,\n      footer: null,\n      onClose: () => {},\n    })\n  }\n\n  return (\n    <>\n      <Switch>\n        <Route exact path={`${balancesBaseRoute}/:assetType?`} render={() => wrapInSuspense(<Balances />, null)} />\n        <Route\n          exact\n          path={generatePath(SAFE_ROUTES.TRANSACTIONS, {\n            safeAddress,\n          })}\n          render={() => wrapInSuspense(<TxList />, null)}\n        />\n        <Route\n          exact\n          path={generatePath(SAFE_ROUTES.APPS, {\n            safeAddress,\n          })}\n          render={({ history }) => {\n            if (!featuresEnabled.includes(FEATURES.SAFE_APPS)) {\n              history.push(\n                generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n                  safeAddress,\n                }),\n              )\n            }\n            return wrapInSuspense(<Apps />, null)\n          }}\n        />\n        <Route exact path={`${settingsBaseRoute}/:section`} render={() => wrapInSuspense(<Settings />, null)} />\n        <Route\n          exact\n          path={generatePath(SAFE_ROUTES.ADDRESS_BOOK, {\n            safeAddress,\n          })}\n          render={() => wrapInSuspense(<AddressBookTable />, null)}\n        />\n        <Redirect\n          to={generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n            safeAddress,\n          })}\n        />\n      </Switch>\n      {modal.isOpen && <GenericModal {...modal} onClose={closeGenericModal} />}\n    </>\n  )\n}\n\nexport default Container\n"],"sourceRoot":""}