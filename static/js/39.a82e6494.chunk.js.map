{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ContractInteraction/Buttons/index.tsx","logic/contractInteraction/sources/ABIService/index.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/ContractABI/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/EthAddressInput/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/FormErrorMessage/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/MethodsDropdown/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/ArrayTypeInput.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderOutputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/NativeCoinValue/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/index.tsx","components/forms/Field/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","components/layout/Bold/index.tsx","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","assets/icons/qrcode.svg","components/Divider/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils/index.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/style.ts","../node_modules/final-form-calculate/dist/final-form-calculate.es.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","components/forms/TextAreaField/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/Header/index.tsx","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts"],"names":["Buttons","onClose","method","useField","subscription","value","input","useFormState","modifiedSinceLastSubmit","submitError","submitting","valid","validating","Modal","Footer","cancelButtonProps","onClick","confirmButtonProps","disabled","status","ButtonStatus","LOADING","READY","testId","isReadMethod","text","getMethodSignature","inputs","name","params","map","x","type","join","getSignatureHash","signature","web3","utils","keccak256","toString","isAllowedMethod","getMethodAction","stateMutability","includes","extractUsefulMethods","abi","filter","action","methodSignature","signatureHash","getMethodSignatureAndSignatureHash","sort","a","b","toLowerCase","NO_DATA","hasUsefulMethods","JSON","parse","length","e","ContractABI","contractAddress","mutators","useForm","setAbiValue","React","useRef","useEffect","isEthereumAddress","undefined","mustBeEthereumAddress","mustBeEthereumContractAddress","isEthereumContractAddress","getContractABI","current","validateAndSetAbi","Row","margin","Col","TextAreaField","placeholder","validate","useStyles","makeStyles","styles","EthAddressInput","isContract","isRequired","onScannedValue","classes","validatorsList","required","composeValidators","validator","pristine","useState","address","selectedEntry","setSelectedEntry","xs","Field","component","TextField","onChange","event","target","setIsValidAddress","fieldMutator","label","center","className","middle","ScanQRWrapper","handleScan","closeQrModal","scannedAddress","startsWith","replace","FormErrorMessage","align","fullWidth","Paragraph","color","noMargin","size","style","letterSpacing","overflowWrap","MENU_WIDTH","StyledText","styled","Text","MethodsDropdown","useDropdownStyles","buttonWidth","meta","selectedMethodByDefault","initialValues","selectedMethod","setSelectedMethod","methodsList","setMethodsList","methodsListFiltered","setMethodsListFiltered","anchorEl","setAnchorEl","searchParams","setSearchParams","handleClose","NO_CONTRACT","theme","DropdownListTheme","button","currentTarget","classNames","buttonInner","openMenuButton","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","open","PaperProps","width","transformOrigin","MenuItem","listItemSearch","key","search","searchIcon","InputBase","root","inputRoot","inputInput","inputProps","dropdownItemsScrollWrapper","listItem","chosenMethod","ListItemText","primary","ListItemIcon","iconRight","alt","src","CheckIcon","values","Array","isArray","typePlaceholder","isAddress","isBoolean","isUint","isInt","isByte","ArrayTypeInput","InputComponent","keyValue","Checkbox","mustBeAddressHash","isArrayParameter","RenderInputParams","validABI","index","generateFormFieldKey","output","lineHeight","height","overflowY","RenderOutputParams","results","multipleResults","outputs","multiline","rowsMax","nativeCoin","getNetworkInfo","NativeCoinValue","onSetMax","ethBalance","useSelector","currentSafeEthBalance","Boolean","payable","isPayable","ButtonLink","weight","inputAdornment","endAdornment","InputAdornment","position","mustBeFloat","maxValue","ContractInteraction","setCallResults","onNext","switchMethod","isABI","safeAddress","safeAddressFromUrl","useMemo","saveForm","handleSubmit","submit","txObject","createTxObject","data","encodeABI","call","from","result","handleSubmitError","Header","subTitle","title","Hairline","GnoForm","decorators","ensResolver","formMutators","onSubmit","rest","Block","formContainer","SafeInfo","Divider","withArrow","setContractAddress","setMax","Switch","checked","GnoField","props","overflowStyle","overflow","createStyles","paddingTop","lg","paddingBottom","restInput","rows","helperText","showError","touched","hasError","error","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","statusClasses","autoComplete","inputRootProps","InputProps","stylesBasedOn","padding","flexDirection","flex","children","validation","render","data-testid","form","Bold","this","heading","justifyContent","maxHeight","boxSizing","loaderContainer","close","secondaryText","detailsContainer","backgroundColor","background","buttonRow","marginLeft","sm","ScanQRModal","isOpen","onScan","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","openImageDialog","onFileScannedResolve","successData","console","description","grow","IconButton","disableRipple","layout","legacyMode","onError","err","ref","facingMode","Button","minWidth","variant","Wrapper","div","StyledDivider","DividerSRC","qrCodeBtn","cursor","qrModalOpen","setQrModalOpen","role","QRIcon","StyledBlock","border","currentSafeWithNames","safeName","hash","explorerUrl","getExplorerInfo","showAvatar","showCopyBtn","symbol","createDecorator","field","updates","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","resolvedAddress","message","args","state","changeValue","lastFormState","indexOf","parameter","test","hasOwnProperty","reason","FORM_ERROR","keyType","extractMethodArgs","Number","isInteger","BigNumber","getParsedJSONOrArrayFromString","contract","getWeb3","eth","Contract","methods","getValueFromTxInputs","tx","String","useTextFieldLabelStyle","borderRadius","fontSize","useTextFieldInputStyle","chainId","getNetworkId","BaseAddressBookInput","addressBookEntries","setValidationText","validationText","updateAddressInfo","addressEntry","validateAddress","addressErrorMessage","filteredEntries","filterAddressEntries","inputValue","onInputChange","_","normalizedValue","trimSpaces","isFeatureEnabled","FEATURES","DOMAIN_LOOKUP","logError","Errors","_101","validatedAddress","labelStyles","inputStyles","Autocomplete","closeIcon","openOnFocus","filterOptions","freeSolo","options","renderInput","autoFocus","InputLabelProps","shrink","getOptionLabel","renderOption","display","flexGrow","AddressBookInput","currentNetworkAddressBook","errorMsg","ContractsAddressBookInput","setFilteredEntries","filterContractAddressBookEntries","filteredADBK","filterContractAddresses","onSetSelectedEntry","contractAddressErrorMessage","md","annotation","marginRight","headingText","wordBreak","outerData","minHeight","fontFamily","fontStretch","gap","dataInput","selectAddress","gasCostsContainer","isPromise","obj","then","tripleEquals","_len","arguments","calculations","_key","previousValues","subscribe","_ref","batch","runUpdates","isEqual","next","getIn","previous","resolved","Object","keys","forEach","destField","change","update","fields","getRegisteredFields","_ref2","matches","findIndex","f","RegExp","fieldName","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItems","alignItemsFlexStart","withStyles","palette","flexShrink","marginTop","textarea","maxWidth","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","etherFlag","iconLeft","fontWeight","outline","textAlign","opacity","borderLeft","borderRight","borderTop","content","right","top","borderBottom","left","pointerEvents","transform","fill"],"mappings":"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","file":"static/js/39.a82e6494.chunk.js","sourcesContent":["import React from 'react'\nimport { useField, useFormState } from 'react-final-form'\n\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { isReadMethod } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\n\nexport interface ButtonProps {\n  onClose: () => void\n}\n\nconst Buttons = ({ onClose }: ButtonProps): React.ReactElement => {\n  const {\n    input: { value: method },\n  } = useField('selectedMethod', { subscription: { value: true } })\n  const { modifiedSinceLastSubmit, submitError, submitting, valid, validating } = useFormState({\n    subscription: {\n      modifiedSinceLastSubmit: true,\n      submitError: true,\n      submitting: true,\n      valid: true,\n      validating: true,\n    },\n  })\n\n  return (\n    <Modal.Footer>\n      <Modal.Footer.Buttons\n        cancelButtonProps={{ onClick: onClose }}\n        confirmButtonProps={{\n          disabled: submitting || validating || ((!valid || !!submitError) && !modifiedSinceLastSubmit) || !method,\n          status: submitting || validating ? ButtonStatus.LOADING : ButtonStatus.READY,\n          testId: `${isReadMethod(method) ? 'call' : 'review'}-tx-btn`,\n          text: isReadMethod(method) ? 'Call' : 'Review',\n        }}\n      />\n    </Modal.Footer>\n  )\n}\n\nexport default Buttons\n","import { AbiItem } from 'web3-utils'\n\nimport { web3ReadOnly as web3 } from 'src/logic/wallets/getWeb3'\n\nexport interface AllowedAbiItem extends AbiItem {\n  name: string\n  type: 'function'\n}\n\nexport interface AbiItemExtended extends AllowedAbiItem {\n  action: string\n  methodSignature: string\n  signatureHash: string\n}\n\nexport const getMethodSignature = ({ inputs, name }: AbiItem): string => {\n  const params = inputs?.map((x) => x.type).join(',')\n  return `${name}(${params})`\n}\n\nexport const getSignatureHash = (signature: string): string => {\n  return web3.utils.keccak256(signature).toString()\n}\n\nexport const getMethodHash = (method: AbiItem): string => {\n  const signature = getMethodSignature(method)\n  return getSignatureHash(signature)\n}\n\nexport const getMethodSignatureAndSignatureHash = (\n  method: AbiItem,\n): { methodSignature: string; signatureHash: string } => {\n  const methodSignature = getMethodSignature(method)\n  const signatureHash = getSignatureHash(methodSignature)\n  return { methodSignature, signatureHash }\n}\n\nexport const isAllowedMethod = ({ name, type }: AbiItem): boolean => {\n  return type === 'function' && !!name\n}\n\nexport const getMethodAction = ({ stateMutability }: AbiItem): 'read' | 'write' => {\n  if (!stateMutability) {\n    return 'write'\n  }\n\n  return ['view', 'pure'].includes(stateMutability) ? 'read' : 'write'\n}\n\nexport const extractUsefulMethods = (abi: AbiItem[]): AbiItemExtended[] => {\n  const allowedAbiItems = abi.filter(isAllowedMethod) as AllowedAbiItem[]\n\n  return allowedAbiItems\n    .map(\n      (method): AbiItemExtended => ({\n        action: getMethodAction(method),\n        ...getMethodSignatureAndSignatureHash(method),\n        ...method,\n      }),\n    )\n    .sort(({ name: a }, { name: b }) => {\n      return a.toLowerCase() > b.toLowerCase() ? 1 : -1\n    })\n}\n\nexport const isPayable = (method: AbiItem | AbiItemExtended): boolean => {\n  return Boolean(method?.payable) || method.stateMutability === 'payable'\n}\n","import React from 'react'\nimport { useField, useForm } from 'react-final-form'\n\nimport { TextAreaField } from 'src/components/forms/TextAreaField'\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { getContractABI } from 'src/config'\nimport { extractUsefulMethods } from 'src/logic/contractInteraction/sources/ABIService'\n\nexport const NO_DATA = 'no data'\n\nconst hasUsefulMethods = (abi: string): undefined | string => {\n  try {\n    const parsedABI = extractUsefulMethods(JSON.parse(abi))\n\n    if (parsedABI.length === 0) {\n      return NO_DATA\n    }\n  } catch (e) {\n    return NO_DATA\n  }\n}\n\nconst ContractABI = (): React.ReactElement => {\n  const {\n    input: { value: contractAddress },\n  } = useField('contractAddress', { subscription: { value: true } })\n  const { mutators } = useForm()\n  const setAbiValue = React.useRef(mutators.setAbiValue)\n\n  React.useEffect(() => {\n    const validateAndSetAbi = async () => {\n      const isEthereumAddress = mustBeEthereumAddress(contractAddress) === undefined\n      const isEthereumContractAddress = (await mustBeEthereumContractAddress(contractAddress)) === undefined\n\n      if (isEthereumAddress && isEthereumContractAddress) {\n        const abi = await getContractABI(contractAddress)\n        const isValidABI = hasUsefulMethods(abi) === undefined\n\n        // this check may help in scenarios where the user first pastes the ABI,\n        // and then sets a Proxy contract that has no useful methods\n        if (isValidABI) {\n          setAbiValue.current(abi)\n        }\n      }\n    }\n\n    if (contractAddress) {\n      validateAndSetAbi()\n    }\n  }, [contractAddress])\n\n  return (\n    <Row margin=\"sm\">\n      <Col>\n        <TextAreaField name=\"abi\" placeholder=\"ABI*\" text=\"ABI*\" type=\"text\" validate={hasUsefulMethods} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ContractABI\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useState } from 'react'\nimport { useFormState, useField } from 'react-final-form'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { ContractsAddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  composeValidators,\n  mustBeEthereumAddress,\n  mustBeEthereumContractAddress,\n  required,\n  Validator,\n} from 'src/components/forms/validator'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\nexport interface EthAddressInputProps {\n  isContract?: boolean\n  isRequired?: boolean\n  name: string\n  onScannedValue: (scannedValue: string) => void\n  text: string\n}\n\nexport const EthAddressInput = ({\n  isContract = true,\n  isRequired = true,\n  name,\n  onScannedValue,\n  text,\n}: EthAddressInputProps): React.ReactElement => {\n  const classes = useStyles()\n  const validatorsList = [\n    isRequired && required,\n    mustBeEthereumAddress,\n    isContract && mustBeEthereumContractAddress,\n  ] as Validator[]\n  const validate = composeValidators(...validatorsList.filter((validator) => validator))\n  const { pristine } = useFormState({ subscription: { pristine: true } })\n  const {\n    input: { value },\n  } = useField('contractAddress', { subscription: { value: true } })\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string | null } | null>({\n    address: value,\n    name: '',\n  })\n\n  const handleScan = (value, closeQrModal) => {\n    let scannedAddress = value\n\n    if (scannedAddress.startsWith('ethereum:')) {\n      scannedAddress = scannedAddress.replace('ethereum:', '')\n    }\n\n    setSelectedEntry({ address: scannedAddress })\n    onScannedValue(scannedAddress)\n    closeQrModal()\n  }\n\n  const handleInputChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const { value } = event.target\n    setSelectedEntry({ address: value })\n  }\n\n  return (\n    <>\n      <Row margin=\"md\">\n        <Col xs={11}>\n          {selectedEntry?.address ? (\n            <Field\n              component={TextField}\n              name={name}\n              placeholder={text}\n              onChange={handleInputChange}\n              testId={name}\n              text={text}\n              type=\"text\"\n              validate={validate}\n            />\n          ) : (\n            <ContractsAddressBookInput\n              setSelectedEntry={setSelectedEntry}\n              setIsValidAddress={() => {}}\n              fieldMutator={onScannedValue}\n              pristine={pristine}\n              label=\"Contract address\"\n            />\n          )}\n        </Col>\n        <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n          <ScanQRWrapper handleScan={handleScan} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useFormState } from 'react-final-form'\n\nimport Row from 'src/components/layout/Row'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\nconst FormErrorMessage = () => {\n  const classes = useStyles()\n  const { modifiedSinceLastSubmit, submitError } = useFormState({\n    subscription: { modifiedSinceLastSubmit: true, submitError: true },\n  })\n\n  const hasNewSubmitError = !!submitError && !modifiedSinceLastSubmit\n  return hasNewSubmitError ? (\n    <Row align=\"center\" className={classes.fullWidth} margin=\"xs\">\n      <Paragraph color=\"error\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px', overflowWrap: 'anywhere' }}>\n        {submitError}\n      </Paragraph>\n    </Row>\n  ) : null\n}\n\nexport default FormErrorMessage\n","import InputBase from '@material-ui/core/InputBase'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport classNames from 'classnames'\nimport React, { ReactElement, useEffect, useState } from 'react'\nimport { useField, useFormState } from 'react-final-form'\nimport { AbiItem } from 'web3-utils'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { NO_CONTRACT } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport CheckIcon from 'src/routes/safe/components/CurrencyDropdown/img/check.svg'\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\nimport { DropdownListTheme } from 'src/theme/mui'\nimport { extractUsefulMethods, AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { Text } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nconst MENU_WIDTH = '452px'\n\nconst StyledText = styled(Text)`\n  padding: 4px 0 0 8px;\n`\n\ninterface MethodsDropdownProps {\n  onChange: (method: AbiItem) => void\n}\n\nexport const MethodsDropdown = ({ onChange }: MethodsDropdownProps): ReactElement | null => {\n  const classes = useDropdownStyles({ buttonWidth: MENU_WIDTH })\n  const {\n    input: { value: abi },\n    meta: { valid },\n  } = useField('abi', { subscription: { value: true, valid: true } })\n  const {\n    initialValues: { selectedMethod: selectedMethodByDefault },\n  } = useFormState({ subscription: { initialValues: true } })\n  const [selectedMethod, setSelectedMethod] = useState(selectedMethodByDefault ? selectedMethodByDefault : {})\n  const [methodsList, setMethodsList] = useState<AbiItemExtended[]>([])\n  const [methodsListFiltered, setMethodsListFiltered] = useState<AbiItemExtended[]>([])\n\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [searchParams, setSearchParams] = useState('')\n\n  useEffect(() => {\n    if (abi) {\n      try {\n        setMethodsList(extractUsefulMethods(JSON.parse(abi)))\n      } catch (e) {\n        setMethodsList([])\n      }\n    }\n  }, [abi])\n\n  useEffect(() => {\n    setMethodsListFiltered(methodsList.filter(({ name }) => name?.toLowerCase().includes(searchParams.toLowerCase())))\n  }, [methodsList, searchParams])\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onMethodSelectedChanged = (chosenMethod: AbiItem) => {\n    setSelectedMethod(chosenMethod)\n    onChange(chosenMethod)\n    handleClose()\n  }\n\n  if (!valid || !abi || abi === NO_CONTRACT) {\n    return null\n  }\n\n  return (\n    <Row margin=\"sm\">\n      <Col>\n        <MuiThemeProvider theme={DropdownListTheme}>\n          <>\n            <button className={classes.button} onClick={handleClick} type=\"button\">\n              <StyledText\n                size=\"md\"\n                color=\"placeHolder\"\n                className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}\n              >\n                {(selectedMethod as Record<string, string>).name || 'Method'}\n              </StyledText>\n            </button>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                horizontal: 'center',\n                vertical: 'bottom',\n              }}\n              elevation={0}\n              getContentAnchorEl={null}\n              id=\"customizedMenu\"\n              keepMounted\n              onClose={handleClose}\n              open={!!anchorEl}\n              PaperProps={{ style: { width: MENU_WIDTH } }}\n              transformOrigin={{\n                horizontal: 'center',\n                vertical: 'top',\n              }}\n            >\n              <MenuItem className={classes.listItemSearch} key=\"0\">\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(event) => setSearchParams(event.target.value)}\n                    placeholder=\"Search…\"\n                    value={searchParams}\n                  />\n                </div>\n              </MenuItem>\n              <div className={classes.dropdownItemsScrollWrapper}>\n                {methodsListFiltered.map((method) => {\n                  const { action, name, signatureHash } = method\n\n                  return (\n                    <MenuItem\n                      className={classes.listItem}\n                      key={signatureHash}\n                      onClick={() => onMethodSelectedChanged(method)}\n                      value={signatureHash}\n                    >\n                      <ListItemText primary={name} />\n                      <ListItemIcon className={classes.iconRight}>\n                        {signatureHash === (selectedMethod as Record<string, string>).signatureHash ? (\n                          <img alt=\"checked\" src={CheckIcon} />\n                        ) : (\n                          <span />\n                        )}\n                      </ListItemIcon>\n                      <ListItemIcon className={classes.iconRight}>\n                        <div>{action}</div>\n                      </ListItemIcon>\n                    </MenuItem>\n                  )\n                })}\n              </div>\n            </Menu>\n          </>\n        </MuiThemeProvider>\n      </Col>\n    </Row>\n  )\n}\n","import React from 'react'\n\nimport { TextAreaField } from 'src/components/forms/TextAreaField'\nimport {\n  isAddress,\n  isBoolean,\n  isByte,\n  isInt,\n  isUint,\n} from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\n\nconst validator = (value: string): string | undefined => {\n  try {\n    const values = JSON.parse(value)\n\n    if (!Array.isArray(values)) {\n      return 'be sure to surround value with []'\n    }\n  } catch (e) {\n    return 'invalid format'\n  }\n}\n\nconst typePlaceholder = (text: string, type: string): string => {\n  if (isAddress(type)) {\n    return `${text} E.g.: [\"0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E\",\"0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e\"]`\n  }\n\n  if (isBoolean(type)) {\n    return `${text} E.g.: [true, false, false, true]`\n  }\n\n  if (isUint(type)) {\n    return `${text} E.g.: [1000, 212, 320000022, 23]`\n  }\n\n  if (isInt(type)) {\n    return `${text} E.g.: [1000, -212, 1232, -1]`\n  }\n\n  if (isByte(type)) {\n    return `${text} E.g.: [\"0xc00000000000000000000000000000000000\", \"0xc00000000000000000000000000000000001\"]`\n  }\n\n  return `${text} E.g.: [\"first value\", \"second value\", \"third value\"]`\n}\n\nconst ArrayTypeInput = ({ name, text, type }: { name: string; text: string; type: string }): React.ReactElement => (\n  <TextAreaField name={name} placeholder={typePlaceholder(text, type)} text={text} type=\"text\" validate={validator} />\n)\n\nexport default ArrayTypeInput\n","import { Checkbox } from '@gnosis.pm/safe-react-components'\nimport React, { ReactElement } from 'react'\n\nimport Col from 'src/components/layout/Col'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\n\nimport { composeValidators, mustBeAddressHash, required } from 'src/components/forms/validator'\nimport { isArrayParameter } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport ArrayTypeInput from './ArrayTypeInput'\n\ntype Props = {\n  type: string\n  keyValue: string\n  placeholder: string\n}\n\nexport const InputComponent = ({ type, keyValue, placeholder }: Props): ReactElement | null => {\n  if (!type) {\n    return null\n  }\n\n  switch (type) {\n    case 'bool': {\n      const inputProps = {\n        'data-testid': keyValue,\n      }\n      return (\n        <Col>\n          <Field component={Checkbox} name={keyValue} label={placeholder} type=\"checkbox\" inputProps={inputProps} />\n        </Col>\n      )\n    }\n    case 'address': {\n      return (\n        <Col>\n          <Field\n            component={TextField}\n            name={keyValue}\n            placeholder={placeholder}\n            testId={keyValue}\n            text={placeholder}\n            type=\"text\"\n            validate={composeValidators(required, mustBeAddressHash)}\n          />\n        </Col>\n      )\n    }\n    default: {\n      return (\n        <Col>\n          {isArrayParameter(type) ? (\n            <ArrayTypeInput name={keyValue} text={placeholder} type={type} />\n          ) : (\n            <Field\n              component={TextField}\n              name={keyValue}\n              placeholder={placeholder}\n              testId={keyValue}\n              text={placeholder}\n              type=\"text\"\n              validate={required}\n            />\n          )}\n        </Col>\n      )\n    }\n  }\n}\n","import React, { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\n\nimport Row from 'src/components/layout/Row'\n\nimport { InputComponent } from './InputComponent'\nimport { generateFormFieldKey } from '../utils'\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\n\nexport const RenderInputParams = (): ReactElement | null => {\n  const {\n    meta: { valid: validABI },\n  } = useField('abi', { subscription: { valid: true, value: true } })\n  const {\n    input: { value: method },\n  }: { input: { value: AbiItemExtended } } = useField('selectedMethod', { subscription: { value: true } })\n  const renderInputs = validABI && !!method && method.inputs?.length\n\n  return !renderInputs ? null : (\n    <>\n      {method.inputs?.map(({ name, type }, index) => {\n        const placeholder = name ? `${name} (${type})` : type\n        const key = generateFormFieldKey(type, method.signatureHash, index)\n\n        return (\n          <Row key={key} margin=\"sm\">\n            <InputComponent type={type} keyValue={key} placeholder={placeholder} />\n          </Row>\n        )\n      })}\n    </>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from 'src/components/forms/TextField'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\n\nconst useStyles = makeStyles({\n  output: {\n    '& > div > textarea': {\n      letterSpacing: '-0.5px',\n      lineHeight: '20px',\n      height: '40px',\n      overflowY: 'auto',\n    },\n  },\n})\n\nexport const RenderOutputParams = (): ReactElement | null => {\n  const classes = useStyles()\n  const {\n    input: { value: method },\n  }: any = useField('selectedMethod', { subscription: { value: true } })\n  const {\n    input: { value: results },\n  }: any = useField('callResults', { subscription: { value: true } })\n  const multipleResults = !!method && method.outputs.length > 1\n\n  if (results == null || results === '') {\n    return null\n  }\n\n  return (\n    <>\n      <Row align=\"left\" margin=\"xs\">\n        <Paragraph color=\"primary\" size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\n          Call result:\n        </Paragraph>\n      </Row>\n      {method.outputs?.map(({ name, type }, index) => {\n        const placeholder = name ? `${name} (${type})` : type\n        const key = `methodCallResult-${method.name}_${index}_${type}`\n        const value = multipleResults ? results[index] : results\n\n        return (\n          <Row key={key} margin=\"sm\">\n            <Col>\n              <TextField\n                className={classes.output}\n                multiline\n                disabled\n                rowsMax={3}\n                input={{ name: key, value: value.toString(), placeholder, type: 'text' }}\n                meta={{ valid: true }}\n                testId={key}\n                text={placeholder}\n              />\n            </Col>\n          </Row>\n        )\n      })}\n    </>\n  )\n}\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useField } from 'react-final-form'\nimport { useSelector } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, maxValue, mustBeFloat } from 'src/components/forms/validator'\nimport ButtonLink from 'src/components/layout/ButtonLink'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { isPayable } from 'src/logic/contractInteraction/sources/ABIService'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\nimport { currentSafeEthBalance } from 'src/logic/safe/store/selectors'\nimport { getNetworkInfo } from 'src/config'\n\nconst useStyles = makeStyles(styles)\n\ninterface NativeCoinValueProps {\n  onSetMax: (nativeCoinBalance: string) => void\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nexport const NativeCoinValue = ({ onSetMax }: NativeCoinValueProps): React.ReactElement | null => {\n  const classes = useStyles()\n  const ethBalance = useSelector(currentSafeEthBalance)\n\n  const {\n    input: { value: method },\n  } = useField('selectedMethod', { subscription: { value: true } })\n  const disabled = !isPayable(method)\n\n  if (!ethBalance) {\n    return null\n  }\n\n  return disabled ? null : (\n    <>\n      <Row className={classes.fullWidth} margin=\"xs\">\n        <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n          Value\n        </Paragraph>\n        <ButtonLink\n          color={disabled ? 'disabled' : 'secondary'}\n          onClick={() => !disabled && onSetMax(ethBalance)}\n          weight=\"bold\"\n        >\n          Send max\n        </ButtonLink>\n      </Row>\n      <Row margin=\"md\">\n        <Col>\n          <Field\n            component={TextField}\n            disabled={disabled}\n            inputAdornment={{\n              endAdornment: <InputAdornment position=\"end\">{nativeCoin.name}</InputAdornment>,\n              disabled,\n            }}\n            name=\"value\"\n            placeholder=\"Value\"\n            text=\"Value\"\n            type=\"text\"\n            validate={!disabled && composeValidators(mustBeFloat, maxValue(ethBalance))}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport Switch from '@material-ui/core/Switch'\nimport { styles } from './style'\nimport Divider from 'src/components/Divider'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { safeAddressFromUrl } from 'src/logic/safe/store/selectors'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Buttons from './Buttons'\nimport ContractABI from './ContractABI'\nimport { EthAddressInput } from './EthAddressInput'\nimport FormErrorMessage from './FormErrorMessage'\nimport { Header } from './Header'\nimport { MethodsDropdown } from './MethodsDropdown'\nimport { RenderInputParams } from './RenderInputParams'\nimport { RenderOutputParams } from './RenderOutputParams'\nimport { createTxObject, formMutators, handleSubmitError, isReadMethod, ensResolver } from './utils'\nimport { TransactionReviewType } from './Review'\nimport { NativeCoinValue } from './NativeCoinValue'\n\nconst useStyles = makeStyles(styles)\n\nexport interface CreatedTx {\n  contractAddress: string\n  data: string\n  selectedMethod: TransactionReviewType\n  value: string | number\n}\n\nexport type ContractInteractionTx = {\n  contractAddress?: string\n}\n\nexport interface ContractInteractionProps {\n  contractAddress?: string\n  initialValues: ContractInteractionTx\n  isABI: boolean\n  onClose: () => void\n  switchMethod: () => void\n  onNext: (tx: CreatedTx, submit: boolean) => void\n}\n\nconst ContractInteraction: React.FC<ContractInteractionProps> = ({\n  contractAddress,\n  initialValues,\n  onClose,\n  onNext,\n  switchMethod,\n  isABI,\n}) => {\n  const classes = useStyles()\n  const safeAddress = useSelector(safeAddressFromUrl)\n  let setCallResults\n\n  React.useMemo(() => {\n    if (contractAddress) {\n      initialValues.contractAddress = contractAddress\n    }\n  }, [contractAddress, initialValues])\n\n  const saveForm = async (values: CreatedTx): Promise<void> => {\n    await handleSubmit(values, false)\n    switchMethod()\n  }\n\n  const handleSubmit = async (\n    { contractAddress, selectedMethod, value, ...values },\n    submit = true,\n  ): Promise<void | Record<string, string>> => {\n    if (value || (contractAddress && selectedMethod)) {\n      try {\n        const txObject = createTxObject(selectedMethod, contractAddress, values)\n        const data = txObject.encodeABI()\n\n        if (isReadMethod(selectedMethod) && submit) {\n          const result = await txObject.call({ from: safeAddress })\n          setCallResults(result)\n\n          // this was a read method, so we won't go to the 'review' screen\n          return\n        }\n\n        onNext({ ...values, contractAddress, data, selectedMethod, value }, submit)\n      } catch (error) {\n        return handleSubmitError(error, values)\n      }\n    }\n  }\n\n  return (\n    <>\n      <Header onClose={onClose} subTitle=\"1 of 2\" title=\"Contract interaction\" />\n      <Hairline />\n      <GnoForm\n        decorators={[ensResolver]}\n        formMutators={formMutators}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        subscription={{ submitting: true, pristine: true, values: true }}\n      >\n        {(submitting, validating, rest, mutators) => {\n          setCallResults = mutators.setCallResults\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <SafeInfo />\n                <Divider withArrow />\n                <EthAddressInput\n                  name=\"contractAddress\"\n                  onScannedValue={mutators.setContractAddress}\n                  text=\"Contract address*\"\n                />\n                <ContractABI />\n                <MethodsDropdown onChange={mutators.setSelectedMethod} />\n                <NativeCoinValue onSetMax={mutators.setMax} />\n                <RenderInputParams />\n                <RenderOutputParams />\n                <FormErrorMessage />\n                <Paragraph color=\"disabled\" noMargin size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\n                  <Switch checked={!isABI} onChange={() => saveForm(rest.values)} />\n                  Use custom data (hex encoded)\n                </Paragraph>\n              </Block>\n              <Buttons onClose={onClose} />\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default ContractInteraction\n","import React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import MuiTextField from '@material-ui/core/TextField'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () =>\n  createStyles({\n    root: {\n      paddingTop: lg,\n      paddingBottom: '12px',\n      lineHeight: 0,\n    },\n  })\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: {\n    touched?: boolean\n    pristine?: boolean\n    valid?: boolean\n    error?: string\n    modifiedSinceLastSubmit?: boolean\n    submitError?: boolean\n    active?: boolean\n  }\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  multiline: boolean\n  rows?: string\n  testId: string\n  text: string\n  disabled?: boolean\n  rowsMax?: number\n  className?: string\n}\n\nconst TextField = (props: Props): React.ReactElement => {\n  const {\n    input: { name, onChange, value, ...restInput },\n    inputAdornment,\n    meta,\n    multiline,\n    rows,\n    testId,\n    text,\n    ...rest\n  } = props\n  const classes = useStyles()\n  const helperText = value ? text : undefined\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n  const errorMessage = meta.error || meta.submitError\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n  const inputRoot = helperText ? classes.root : ''\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n  const inputProps = {\n    ...restInput,\n    autoComplete: 'off',\n    'data-testid': testId,\n  }\n  const inputRootProps = {\n    ...inputAdornment,\n    className: `${inputRoot} ${statusClasses}`,\n    disableUnderline: disableUnderline,\n  }\n\n  return (\n    <MuiTextField\n      error={hasError && showError}\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\n      inputProps={inputProps} // blank in order to force to have helper text\n      InputProps={inputRootProps}\n      multiline={multiline}\n      name={name}\n      onChange={onChange}\n      rows={rows}\n      style={overflowStyle}\n      value={value}\n      {...rest}\n    />\n  )\n}\n\nexport default TextField\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Icon, Divider as DividerSRC } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 8px 0;\n\n  svg {\n    margin: 0 12px 0 4px;\n  }\n`\nconst StyledDivider = styled(DividerSRC)`\n  width: 100%;\n`\n\ntype Props = {\n  withArrow?: boolean\n}\n\nconst Divider = ({ withArrow }: Props): ReactElement => (\n  <Wrapper>\n    {withArrow && <Icon type=\"arrowDown\" size=\"md\" />}\n    <StyledDivider />\n  </Wrapper>\n)\n\nexport default Divider\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Bold from 'src/components/layout/Bold'\nimport { border, xs } from 'src/theme/variables'\nimport Block from 'src/components/layout/Block'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5px;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  margin-left: 40px;\n  border-radius: 3px;\n`\n\nconst SafeInfo = (): React.ReactElement => {\n  const { address: safeAddress, ethBalance, name: safeName } = useSelector(currentSafeWithNames)\n\n  return (\n    <>\n      <EthHashInfo\n        hash={safeAddress}\n        name={safeName}\n        explorerUrl={getExplorerInfo(safeAddress)}\n        showAvatar\n        showCopyBtn\n      />\n      {ethBalance && (\n        <StyledBlock>\n          <Paragraph noMargin>\n            Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n          </Paragraph>\n        </StyledBlock>\n      )}\n    </>\n  )\n}\n\nexport default SafeInfo\n","import { FORM_ERROR, Mutator, SubmissionErrors } from 'final-form'\nimport createDecorator from 'final-form-calculate'\nimport { ContractSendMethod } from 'web3-eth-contract'\n\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { getAddressFromDomain, getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { TransactionReviewType } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review'\nimport { isValidCryptoDomainName, isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { BigNumber } from 'bignumber.js'\n\nexport const NO_CONTRACT = 'no contract'\n\nexport const ensResolver = createDecorator({\n  field: 'contractAddress',\n  updates: {\n    contractAddress: async (contractAddress) => {\n      try {\n        const resolvedAddress =\n          (isValidEnsName(contractAddress) || isValidCryptoDomainName(contractAddress)) &&\n          (await getAddressFromDomain(contractAddress))\n\n        if (resolvedAddress) {\n          return resolvedAddress\n        }\n\n        return contractAddress\n      } catch (e) {\n        console.error(e.message)\n        return contractAddress\n      }\n    },\n  },\n})\n\nexport const formMutators: Record<string, Mutator<{ selectedMethod: { name: string } }>> = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'value', () => args[0])\n  },\n  setContractAddress: (args, state, utils) => {\n    utils.changeValue(state, 'contractAddress', () => args[0])\n  },\n  setSelectedMethod: (args, state, utils) => {\n    const modified =\n      state.lastFormState?.values.selectedMethod && state.lastFormState.values.selectedMethod.name !== args[0].name\n\n    if (modified) {\n      utils.changeValue(state, 'callResults', () => '')\n      utils.changeValue(state, 'value', () => '')\n    }\n\n    utils.changeValue(state, 'selectedMethod', () => args[0])\n  },\n  setCallResults: (args, state, utils) => {\n    utils.changeValue(state, 'callResults', () => args[0])\n  },\n  setAbiValue: (args, state, utils) => {\n    utils.changeValue(state, 'abi', () => args[0])\n  },\n}\n\nexport const isAddress = (type: string): boolean => type.indexOf('address') === 0\nexport const isBoolean = (type: string): boolean => type.indexOf('bool') === 0\nexport const isString = (type: string): boolean => type.indexOf('string') === 0\nexport const isUint = (type: string): boolean => type.indexOf('uint') === 0\nexport const isInt = (type: string): boolean => type.indexOf('int') === 0\nexport const isByte = (type: string): boolean => type.indexOf('byte') === 0\n\nexport const isArrayParameter = (parameter: string): boolean => /(\\[\\d*])+$/.test(parameter)\nexport const getParsedJSONOrArrayFromString = (parameter: string): (string | number)[] | null => {\n  try {\n    const arrayResult = JSON.parse(parameter)\n    return arrayResult.map((value) => {\n      if (Number.isInteger(value)) {\n        return new BigNumber(value).toString()\n      }\n      return value\n    })\n  } catch (err) {\n    return null\n  }\n}\n\nexport const handleSubmitError = (error: SubmissionErrors, values: Record<string, string>): Record<string, string> => {\n  for (const key in values) {\n    if (values.hasOwnProperty(key) && error !== undefined && values[key] === error.value) {\n      return { [key]: error.reason }\n    }\n  }\n\n  // .call() failed and we're logging a generic error\n  return { [FORM_ERROR]: error ? error.message : undefined }\n}\n\nexport const generateFormFieldKey = (type: string, signatureHash: string, index: number): string => {\n  const keyType = isArrayParameter(type) ? 'arrayParam' : type\n  return `methodInput-${signatureHash}_${index}_${keyType}`\n}\n\nconst extractMethodArgs =\n  (signatureHash: string, values: Record<string, string>) =>\n  ({ type }, index) => {\n    const key = generateFormFieldKey(type, signatureHash, index)\n\n    return getParsedJSONOrArrayFromString(values[key]) || values[key]\n  }\n\nexport const createTxObject = (\n  method: AbiItemExtended,\n  contractAddress: string,\n  values: Record<string, string>,\n): ContractSendMethod => {\n  const web3 = getWeb3()\n  const contract = new web3.eth.Contract([method], contractAddress)\n  const { inputs, name = '', signatureHash } = method\n  const args = inputs?.map(extractMethodArgs(signatureHash, values)) || []\n\n  return contract.methods[name](...args)\n}\n\nexport const isReadMethod = (method: AbiItemExtended): boolean => method && method.action === 'read'\n\nexport const getValueFromTxInputs = (key: string, type: string, tx: TransactionReviewType): string => {\n  if (isArrayParameter(type)) {\n    key = key.replace('[]', '')\n  }\n\n  let value = tx[key]\n\n  if (type === 'bool') {\n    value = String(value)\n  }\n\n  return value\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      borderRadius: 4,\n      fontSize: '15px',\n      width: '500px',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    root: {\n      fontSize: '14px',\n      width: '420px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport React, { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { getNetworkId, isFeatureEnabled } from 'src/config'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport { trimSpaces } from 'src/utils/strings'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\n\nconst chainId = getNetworkId()\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  label?: string\n  pristine?: boolean\n  recipientAddress?: string\n  errorMsg?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  label = 'Recipient',\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (address: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(address)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: address })\n    return filteredEntries.length === 1 ? filteredEntries[0] : address\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name, chainId } = value as AddressBookEntry\n        updateAddressInfo({ address, name, chainId })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (\n          isFeatureEnabled(FEATURES.DOMAIN_LOOKUP) &&\n          (isValidEnsName(normalizedValue) || isValidCryptoDomainName(normalizedValue))\n        ) {\n          let address = ''\n          try {\n            address = await getAddressFromDomain(normalizedValue)\n          } catch (err) {\n            logError(Errors._101, err.message)\n          }\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry =\n            typeof validatedAddress === 'string'\n              ? {\n                  address,\n                  name: normalizedValue,\n                  chainId,\n                }\n              : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string'\n            ? {\n                address: validatedAddress,\n                name: '',\n                chainId,\n              }\n            : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      id=\"address-book-input\"\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus={true}\n          error={!!validationText}\n          fullWidth\n          variant=\"filled\"\n          label={validationText ? validationText : label}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <EthHashInfo hash={address} name={name} showAvatar />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    if (props.errorMsg) {\n      setValidationText(props.errorMsg)\n    }\n  }, [props.errorMsg])\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import { lg, md, secondaryText, sm, border, background } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '74px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    wordBreak: 'break-word',\n  },\n  value: {\n    marginLeft: sm,\n  },\n  outerData: {\n    borderRadius: '5px',\n    border: `1px solid ${border}`,\n    padding: '11px',\n    minHeight: '21px',\n  },\n  data: {\n    wordBreak: 'break-all',\n    overflow: 'auto',\n    fontSize: '14px',\n    fontFamily: 'Averta',\n    maxHeight: '100px',\n    letterSpacing: 'normal',\n    fontStretch: 'normal',\n    lineHeight: '1.43',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  dataInput: {\n    '& TextField-root-294': {\n      lineHeight: 'auto',\n      border: 'green',\n    },\n  },\n  selectAddress: {\n    cursor: 'pointer',\n  },\n  fullWidth: {\n    justifyContent: 'space-between',\n  },\n  gasCostsContainer: {\n    backgroundColor: background,\n    padding: `0 ${lg}`,\n  },\n})\n","import { getIn } from 'final-form';\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\n//      \n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar createDecorator = function createDecorator() {\n  for (var _len = arguments.length, calculations = new Array(_len), _key = 0; _key < _len; _key++) {\n    calculations[_key] = arguments[_key];\n  }\n\n  return function (form) {\n    var previousValues = {};\n    var unsubscribe = form.subscribe(function (_ref) {\n      var values = _ref.values;\n      form.batch(function () {\n        var runUpdates = function runUpdates(field, isEqual, updates) {\n          var next = values && getIn(values, field);\n          var previous = previousValues && getIn(previousValues, field);\n\n          if (!isEqual(next, previous)) {\n            if (typeof updates === 'function') {\n              var results = updates(next, field, values, previousValues);\n\n              if (isPromise(results)) {\n                results.then(function (resolved) {\n                  Object.keys(resolved).forEach(function (destField) {\n                    form.change(destField, resolved[destField]);\n                  });\n                });\n              } else {\n                Object.keys(results).forEach(function (destField) {\n                  form.change(destField, results[destField]);\n                });\n              }\n            } else {\n              Object.keys(updates).forEach(function (destField) {\n                var update = updates[destField];\n                var result = update(next, values, previousValues);\n\n                if (isPromise(result)) {\n                  result.then(function (resolved) {\n                    form.change(destField, resolved);\n                  });\n                } else {\n                  form.change(destField, result);\n                }\n              });\n            }\n          }\n        };\n\n        var fields = form.getRegisteredFields();\n        calculations.forEach(function (_ref2) {\n          var field = _ref2.field,\n              isEqual = _ref2.isEqual,\n              updates = _ref2.updates;\n\n          if (typeof field === 'string') {\n            runUpdates(field, isEqual || tripleEquals, updates);\n          } else {\n            // field is a either array or regex\n            var matches = Array.isArray(field) ? function (name) {\n              return ~field.indexOf(name) || field.findIndex(function (f) {\n                return f instanceof RegExp && f.test(name);\n              }) !== -1;\n            } : function (name) {\n              return field.test(name);\n            };\n            fields.forEach(function (fieldName) {\n              if (matches(fieldName)) {\n                runUpdates(fieldName, isEqual || tripleEquals, updates);\n              }\n            });\n          }\n        });\n        previousValues = values;\n      });\n    }, {\n      values: true\n    });\n    return unsubscribe;\n  };\n};\n\n//\n\nexport default createDecorator;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React, { ReactElement } from 'react'\n\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\n\nconst styles = createStyles({\n  textarea: {\n    '& > div': {\n      height: '140px',\n      paddingTop: '0',\n      paddingBottom: '0',\n      alignItems: 'auto',\n      '& > textarea': {\n        fontSize: '15px',\n        letterSpacing: '-0.5px',\n        lineHeight: '20px',\n        height: '102px',\n      },\n    },\n  },\n})\n\nconst useStyles = makeStyles(styles)\n\nexport const TextAreaField = ({ ...props }): ReactElement => {\n  const classes = useStyles()\n  return <Field {...props} className={classes.textarea} component={TextField} multiline rows=\"5\" />\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { ReactElement } from 'react'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\ninterface HeaderProps {\n  onClose: () => void\n  subTitle: string\n  title: string\n}\n\nexport const Header = ({ onClose, subTitle, title }: HeaderProps): ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <Row align=\"center\" className={classes.heading} grow>\n      <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n        {title}\n      </Paragraph>\n      <Paragraph className={classes.annotation}>{subTitle}</Paragraph>\n      <IconButton disableRipple onClick={onClose}>\n        <Close className={classes.closeIcon} />\n      </IconButton>\n    </Row>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/check.7da64643.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst buttonWidth = '140px'\nexport const useDropdownStyles = makeStyles({\n  listItem: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    boxSizing: 'border-box',\n  },\n  listItemSearch: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    padding: '0',\n    boxSizing: 'border-box',\n  },\n  localFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    height: '20px !important',\n    width: '26px !important',\n  },\n  etherFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    width: '26px',\n    height: '26px',\n  },\n  iconLeft: {\n    marginRight: '10px',\n  },\n  iconRight: {\n    marginLeft: '18px',\n  },\n  button: {\n    backgroundColor: '#e8e7e6',\n    border: 'none',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    color: '#5d6d74',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    height: '24px',\n    lineHeight: '1.33',\n    marginRight: '20px',\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    outline: 'none',\n    padding: '0',\n    textAlign: 'left',\n    '&:active': {\n      opacity: '0.8',\n    },\n  },\n  buttonInner: {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '100%',\n    lineHeight: '24px',\n    padding: '0 22px 0 8px',\n    position: 'relative',\n    width: '100%',\n    '&::after': {\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: '5px solid #5d6d74',\n      content: '\"\"',\n      height: '0',\n      position: 'absolute',\n      right: '8px',\n      top: '9px',\n      width: '0',\n    },\n  },\n  openMenuButton: {\n    '&::after': {\n      borderBottom: '5px solid #5d6d74',\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: 'none',\n    },\n  },\n  dropdownItemsScrollWrapper: {\n    maxHeight: '280px',\n    overflow: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: '0',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    marginRight: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    left: '12px',\n    margin: '0',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '18px',\n    '& path': {\n      fill: '#b2b5b2',\n    },\n  },\n  inputRoot: {\n    color: '#5d6d74',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    lineHeight: '1.43',\n    width: '100%',\n  },\n  inputInput: {\n    boxSizing: 'border-box',\n    height: '44px',\n    padding: '12px 12px 12px 40px',\n    width: '100%',\n  },\n})\n"],"sourceRoot":""}