{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","routes/open/components/fields.ts","components/forms/AddressInput/index.tsx","components/Stepper/OpenPaper/index.tsx","routes/open/utils/safeDataExtractor.ts","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","routes/open/utils/padOwnerIndex.ts","routes/welcome/components/index.tsx","components/Stepper/Controls/index.tsx","components/Stepper/index.tsx","routes/opening/components/Footer.tsx","routes/opening/steps.ts","routes/opening/assets/safe-created.svg","routes/opening/assets/vault-error.svg","routes/opening/assets/creation-process.gif","routes/opening/utils/getSafeAddressFromLogs.ts","routes/opening/index.tsx","routes/open/components/ReviewInformation/styles.ts","logic/hooks/useEstimateSafeCreationGas.tsx","routes/open/components/ReviewInformation/index.tsx","routes/open/components/SafeNameForm/index.tsx","routes/open/components/SafeOwnersConfirmationsForm/style.ts","routes/open/components/SafeOwnersConfirmationsForm/index.tsx","routes/open/components/Layout.tsx","utils/timer.ts","logic/safe/transactions/txMonitor.ts","routes/open/container/Open.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","useStyles","makeStyles","createStyles","root","paddingTop","lg","paddingBottom","lineHeight","TextField","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","classes","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","stylesBasedOn","padding","flexDirection","flex","GnoForm","children","decorators","formMutators","initialValues","onSubmit","subscription","validation","mutators","render","handleSubmit","data-testid","submitting","validating","form","validate","styles","heading","justifyContent","maxHeight","boxSizing","loaderContainer","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","ScanQRModal","isOpen","onClose","onScan","useState","fileUploadModalOpen","setFileUploadModalOpen","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","Modal","description","handleClose","open","title","Row","align","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","facingMode","Button","minWidth","variant","SelectInput","disableError","formControlProps","label","renderValue","dirtySinceLastSubmit","htmlFor","cx","classNames","bind","Heading","tag","truncate","capitalize","module","exports","FIELD_NAME","FIELD_CONFIRMATIONS","FIELD_SAFE_NAME","FIELD_CREATION_PROXY_SALT","getOwnerNameBy","index","padOwnerIndex","getOwnerAddressBy","getNumOwnersFrom","values","Object","keys","sort","filter","key","test","length","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","component","type","spellCheck","composeValidators","required","mustBeEthereumAddress","a","address","trimSpaces","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","resolverAddr","formattedAddress","checksumAddress","logError","Errors","_101","message","maxWidth","boxShadow","OpenPaper","controls","elevation","getByRegexFrom","regex","accounts","numOwners","map","account","slice","getAccountsFrom","getNamesFrom","getThresholdFrom","Number","confirmations","getSafeNameFrom","getSafeCreationSaltFrom","safeCreationSalt","Page","page","toString","padStart","Wrapper","styled","div","StyledCardDouble","Card","StyledCard","CardsCol","StyledButton","TitleWrapper","StyledTitle","Title","StyledTitleOnly","StyledButtonLink","ButtonLink","WelcomeLayout","isOldMultisigMigration","provider","useSelector","providerNameSelector","strong","withoutMargin","textSize","iconType","iconSize","href","target","rel","onConnectButtonClick","Link","to","OPEN_ADDRESS","orientation","LOAD_ADDRESS","controlStyle","borderRadius","firstButtonStyle","marginRight","fontWeight","boldFont","secondary","secondButtonStyle","Controls","next","buttonLabels","currentStep","firstPage","lastPage","onPrevious","penultimate","back","center","xs","transitionProps","timeout","enter","exit","StepperPage","pointerCursor","cursor","GnoStepper","setPage","setValues","prevState","getPageProps","pages","Children","toArray","updateInitialProps","useCallback","newInitialProps","formValues","activePageProps","prepareNextInitialProps","pageInitialProps","finalValues","Math","min","count","previous","history","goBack","max","isLastPage","pageNumber","steps","disabledWhenValidating","activePage","restProps","getActivePageFrom","valuesToValidate","Stepper","activeStep","labelProps","StepLabel","StepContent","TransitionProps","StyledText","Text","ButtonWithMargin","FooterContainer","LoaderText","span","GenericFooter","safeCreationTxHash","getExplorerInfo","explorerInfo","url","alt","match","exec","explorerDomain","aria-label","as","ErrorFooter","onCancel","onRetry","id","instruction","footerComponent","continueButtonDisabled","onContinue","abiDecoder","addABI","getProxyFactoryDeployment","version","LATEST_SAFE_VERSION","abi","getNewSafeAddressFromLogs","logs","proxyCreationEvent","decodeLogs","find","proxyInformation","events","Nav","Body","theme","colors","white","CardTitle","FullParagraph","$stepIndex","connected","fontColor","BodyImage","BodyDescription","BodyInstruction","BodyFooter","BackButton","SafeDeployment","FooterComponent","creationTxHash","onSuccess","submittedPromise","loading","setLoading","stepIndex","setStepIndex","setSafeCreationTxHash","createdSafeAddress","setCreatedSafeAddress","intervalStarted","setIntervalStarted","waitingSafeDeployed","setWaitingSafeDeployed","setContinueButtonDisabled","dispatch","useDispatch","confirmationStep","isConfirmationStep","showSnackbarError","isTxPendingError","enqueueSnackbar","NOTIFICATIONS","TX_PENDING_MSG","CREATE_SAFE_FAILED_MSG","_800","onRetryTx","instantiateSafeContracts","loadContracts","receipt","transactionHash","handlePromise","isTxMined","txHash","web3","getWeb3","eth","getTransaction","blockNumber","getTransactionReceipt","status","Error","interval","setInterval","then","clearInterval","safeAddress","ProxyCreation","returnValues","proxy","getCode","EMPTY_DATA","awaitUntilSafeIsDeployed","activeStepIndex","Img","src","VaultErrorSvg","VaultLoading","SuccessSvg","inversecolors","minHeight","screenSm","detailsColumn","ownersColumn","details","borderRight","border","info","textAlign","owners","textOverflow","owner","alignItems","paddingLeft","user","nativeCoin","getNetworkInfo","ReviewComponent","names","addresses","useMemo","gasEstimation","gasCostFormatted","gasLimit","setGasEstimation","userAccount","userAccountSelector","estimateGasForDeployingSafe","calculateGasPrice","gasPrice","estimatedGasCosts","parseInt","gasCost","fromTokenUnit","decimals","formatAmount","estimateGas","useEstimateSafeCreationGas","setValue","weight","TableContainer","Fragment","hash","showAvatar","showCopyBtn","explorerUrl","Review","display","flexWrap","dot","links","StyledField","Field","useSafeNameStyles","SafeNameForm","safeName","validAddressBookName","SafeNamePageComponent","md","link","position","top","left","marginTop","ownerName","marginBottom","ownerAddress","header","fontSize","extraSmallFontSize","trash","add","check","remove","ownersAmount","ownersAmountItem","StyledAddressInput","validateOwnersForm","reduce","result","toLowerCase","includes","errors","ADDRESS_REPEATED_ERROR","push","SafeOwnersForm","validOwners","addressBook","currentNetworkAddressBook","setNumOwners","qrModalOpen","setQrModalOpen","scanQrForOwnerName","setScanQrForOwnerName","closeQrModal","onRemoveRow","newValues","ownerRelatedField","RegExp","ownerOrder","ownerField","calculateValuesAfterRemoving","reset","Array","x","addressName","minMaxLength","newOwnerAddress","newOwnerName","entry","sameAddress","noErrorsOn","endAdornment","InputAdornment","ButtonHelper","openQrModal","tooltip","SelectField","mustBeInteger","minValue","MenuItem","scannedAddress","startsWith","replace","SafeOwnersPage","otherAccounts","iconStyle","state","field","changeValue","Layout","onCallSafeContractSubmit","safeProps","addressBookEntryName","sameString","ADDRESS_BOOK_DEFAULT_NAME","Date","now","obj","ownerAddresses","ownerNames","threshold","entries","useInitialValuesFrom","SafeNameField","sleep","ms","Promise","resolve","setTimeout","findSpeedupTx","sender","nonce","web3ReadOnly","getBlock","latestBlock","replacementTransaction","transactions","transaction","from","txMonitor","options","tries","reject","maxRetries","CodedException","_805","params","catch","firstTxReceipt","replacementTx","replacementReceipt","delay","SAFE_PENDING_CREATION_STORAGE_KEY","getSafePropsValuesFromQueryParams","queryParams","isNaN","validateQueryParams","isArray","createSafe","deploymentTx","getSafeDeploymentTransaction","send","gas","once","saveToStorage","encodeABI","txReceipt","log","Open","showProgress","setShowProgress","creationTxPromise","setCreationTxPromise","safeCreationPendingInfo","setSafeCreationPendingInfo","safePropsFromUrl","setSafePropsFromUrl","location","useLocation","trackEvent","useAnalytics","query","queryString","parse","search","arrayFormat","owneraddresses","ownernames","loadFromStorage","pendingCreation","load","createSafeProxy","copy","receiptPromise","onSafeCreated","ownersNames","ownersAddresses","makeAddressBookEntry","safe","addressBookSafeLoad","category","action","backOff","getSafeInfo","startingDelay","retry","e","buildSafe","addOrUpdateSafe","removeFromStorage","pathname","generatePath","SAFE_ROUTES","ASSETS_BALANCES","tx","WELCOME_ADDRESS"],"mappings":"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","file":"static/js/41.0ac19421.chunk.js","sourcesContent":["import React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import MuiTextField from '@material-ui/core/TextField'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () =>\n  createStyles({\n    root: {\n      paddingTop: lg,\n      paddingBottom: '12px',\n      lineHeight: 0,\n    },\n  })\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: {\n    touched?: boolean\n    pristine?: boolean\n    valid?: boolean\n    error?: string\n    modifiedSinceLastSubmit?: boolean\n    submitError?: boolean\n    active?: boolean\n  }\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  multiline: boolean\n  rows?: string\n  testId: string\n  text: string\n  disabled?: boolean\n  rowsMax?: number\n  className?: string\n}\n\nconst TextField = (props: Props): React.ReactElement => {\n  const {\n    input: { name, onChange, value, ...restInput },\n    inputAdornment,\n    meta,\n    multiline,\n    rows,\n    testId,\n    text,\n    ...rest\n  } = props\n  const classes = useStyles()\n  const helperText = value ? text : undefined\n  const showError = (meta.touched || !meta.pristine) && !meta.valid\n  const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n  const errorMessage = meta.error || meta.submitError\n  const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n  const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n  const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n  const inputRoot = helperText ? classes.root : ''\n  const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n  const inputProps = {\n    ...restInput,\n    autoComplete: 'off',\n    'data-testid': testId,\n  }\n  const inputRootProps = {\n    ...inputAdornment,\n    className: `${inputRoot} ${statusClasses}`,\n    disableUnderline: disableUnderline,\n  }\n\n  return (\n    <MuiTextField\n      error={hasError && showError}\n      helperText={hasError && showError ? errorMessage : helperText || ' '}\n      inputProps={inputProps} // blank in order to force to have helper text\n      InputProps={inputRootProps}\n      multiline={multiline}\n      name={name}\n      onChange={onChange}\n      rows={rows}\n      style={overflowStyle}\n      value={value}\n      {...rest}\n    />\n  )\n}\n\nexport default TextField\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { LoadFormValues } from 'src/routes/load/container/Load'\nimport { padOwnerIndex } from 'src/routes/open/utils/padOwnerIndex'\nimport { CreateSafeValues } from 'src/routes/open/utils/safeDataExtractor'\n\nexport const FIELD_NAME = 'name'\nexport const FIELD_CONFIRMATIONS = 'confirmations'\nexport const FIELD_OWNERS = 'owners'\nexport const FIELD_SAFE_NAME = 'safeName'\nexport const FIELD_CREATION_PROXY_SALT = 'safeCreationSalt'\n\nexport const getOwnerNameBy = (index: number): string => `owner${padOwnerIndex(index)}Name`\nexport const getOwnerAddressBy = (index: number): string => `owner${padOwnerIndex(index)}Address`\n\nexport const getNumOwnersFrom = (values: CreateSafeValues | LoadFormValues): number => {\n  const accounts = Object.keys(values)\n    .sort()\n    .filter((key) => {\n      const res = /^owner\\d+Address$/.test(key)\n\n      return res && !!values[key]\n    })\n\n  return accounts.length\n}\n","import * as React from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\n\n// an idea for second field was taken from here\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => (\n  <>\n    <Field\n      className={className}\n      component={TextField as any}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      inputAdornment={inputAdornment}\n      name={name}\n      placeholder={placeholder}\n      testId={testId}\n      text={text}\n      type=\"text\"\n      spellCheck={false}\n      validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\n    />\n    <OnChange name={name}>\n      {async (value: string) => {\n        const address = trimSpaces(value)\n        if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n          try {\n            const resolverAddr = await getAddressFromDomain(address)\n            const formattedAddress = checksumAddress(resolverAddr)\n            fieldMutator(formattedAddress)\n          } catch (err) {\n            logError(Errors._101, err.message)\n          }\n        } else {\n          fieldMutator(address)\n        }\n      }}\n    </OnChange>\n  </>\n)\n\nexport default AddressInput\n","import Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport Block from 'src/components/layout/Block'\nimport { lg } from 'src/theme/variables'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '10px 0 10px 10px',\n    maxWidth: '770px',\n    boxShadow: '0 0 10px 0 rgba(33,48,77,0.10)',\n  },\n  padding: {\n    padding: lg,\n  },\n})\n\ninterface Props {\n  padding?: boolean\n  controls: React.ReactNode\n}\n\nconst OpenPaper: React.FC<Props> = ({ children, controls, padding = true }) => {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <Block className={padding ? classes.padding : ''}>{children}</Block>\n      {controls}\n    </Paper>\n  )\n}\n\nexport default OpenPaper\n","import { LoadFormValues } from 'src/routes/load/container/Load'\nimport { getNumOwnersFrom } from 'src/routes/open/components/fields'\n\nexport type CreateSafeValues = {\n  confirmations: string\n  name: string\n  owner0Address?: string\n  owner0Name?: string\n  safeCreationSalt: number\n  gasLimit?: number\n  owners?: number | string\n}\n\nconst getByRegexFrom =\n  (regex: RegExp) =>\n  (values: CreateSafeValues | LoadFormValues): string[] => {\n    const accounts = Object.keys(values)\n      .sort()\n      .filter((key) => regex.test(key))\n\n    const numOwners = getNumOwnersFrom(values)\n    return accounts.map((account) => values[account]).slice(0, numOwners)\n  }\n\nexport const getAccountsFrom = getByRegexFrom(/^owner\\d+Address$/)\n\nexport const getNamesFrom = getByRegexFrom(/^owner\\d+Name$/)\n\nexport const getThresholdFrom = (values: CreateSafeValues): number => Number(values.confirmations)\n\nexport const getSafeNameFrom = (values: CreateSafeValues): string => values.name\n\nexport const getSafeCreationSaltFrom = (values: CreateSafeValues): number => values.safeCreationSalt\n","import classNames from 'classnames/bind'\nimport React from 'react'\n\nimport styles from './index.module.scss'\n\nconst cx = classNames.bind(styles)\n\nconst Page = ({ align, children, overflow }: any) => (\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\n)\n\nexport default Page\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__G6hb0\",\"center\":\"Page_center__1dwJ9\",\"overflow\":\"Page_overflow__30EmX\"};","export const padOwnerIndex = (index: number | string): string => {\n  return index.toString().padStart(4, '0')\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  Button,\n  Title,\n  Text,\n  Divider,\n  ButtonLink,\n  Dot,\n  Icon,\n  Link as LinkSRC,\n} from '@gnosis.pm/safe-react-components'\n\nimport Link from 'src/components/layout/Link'\nimport Block from 'src/components/layout/Block'\nimport { LOAD_ADDRESS, OPEN_ADDRESS } from 'src/routes/routes'\nimport { onConnectButtonClick } from 'src/components/ConnectButton'\nimport { useSelector } from 'react-redux'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 24px 0 0 0;\n`\nconst StyledCardDouble = styled(Card)`\n  display: flex;\n  padding: 0;\n`\nconst StyledCard = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 20px 0 0;\n  max-width: 27%;\n  height: 276px;\n`\nconst CardsCol = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 24px;\n  width: 50%;\n`\nconst StyledButton = styled(Button)`\n  margin-top: auto !important;\n  text-decoration: none;\n`\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 0 0 16px 0;\n\n  h5 {\n    color: white;\n  }\n`\nconst StyledTitle = styled(Title)`\n  margin: 0 0 0 16px;\n`\nconst StyledTitleOnly = styled(Title)`\n  margin: 0 0 16px 0;\n`\nconst StyledButtonLink = styled(ButtonLink)`\n  margin: 16px 0 16px -8px;\n`\n\ntype Props = {\n  isOldMultisigMigration?: boolean\n}\n\nexport const WelcomeLayout = ({ isOldMultisigMigration }: Props): React.ReactElement => {\n  const provider = useSelector(providerNameSelector)\n  return (\n    <Block>\n      {/* Title */}\n      <Title size=\"md\" strong>\n        Welcome to Gnosis Safe.\n      </Title>\n\n      {/* Subtitle */}\n      <Title size=\"xs\">\n        {isOldMultisigMigration ? (\n          <>\n            We will replicate the owner structure from your existing Gnosis MultiSig to let you test the new interface.\n            As soon as you feel comfortable, start moving funds to your new Safe.\n          </>\n        ) : (\n          <>\n            Gnosis Safe is the most trusted platform to manage digital assets. <br /> Here is how to get started:{' '}\n          </>\n        )}\n      </Title>\n\n      <>\n        <Wrapper>\n          {/* Connect wallet */}\n          <StyledCard>\n            <TitleWrapper>\n              <Dot color=\"primary\">\n                {!provider ? <Title size=\"xs\">1</Title> : <Icon color=\"white\" type=\"check\" size=\"md\" />}\n              </Dot>\n              <StyledTitle size=\"sm\" strong withoutMargin>\n                Connect wallet\n              </StyledTitle>\n            </TitleWrapper>\n            <Text size=\"xl\">\n              Gnosis Safe supports a wide range of wallets that you can choose to interact with your Safe.\n            </Text>\n            <StyledButtonLink textSize=\"xl\" color=\"primary\" iconType=\"externalLink\" iconSize=\"sm\">\n              <LinkSRC\n                size=\"xl\"\n                href=\"https://help.gnosis-safe.io/en/articles/4689442-why-do-i-need-to-connect-a-wallet\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                title=\"More info about: Why do I need to connect a wallet?\"\n              >\n                Why do I need to connect a wallet?\n              </LinkSRC>\n            </StyledButtonLink>\n            <StyledButton\n              size=\"lg\"\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={onConnectButtonClick}\n              disabled={!!provider}\n              data-testid=\"connect-btn\"\n            >\n              <Text size=\"xl\" color=\"white\">\n                Connect wallet\n              </Text>\n            </StyledButton>\n          </StyledCard>\n\n          <StyledCardDouble disabled={!provider}>\n            {/* Create safe */}\n            <CardsCol>\n              <TitleWrapper>\n                <Dot color=\"primary\">\n                  <Title size=\"xs\">2</Title>\n                </Dot>\n                <StyledTitle size=\"sm\" strong withoutMargin>\n                  Create Safe\n                </StyledTitle>\n              </TitleWrapper>\n              <Text size=\"xl\">\n                Create a new Safe that is controlled by one or multiple owners. <br />\n                You will be required to pay a network fee for creating your new Safe.\n              </Text>\n              <StyledButton size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={OPEN_ADDRESS}>\n                <Text size=\"xl\" color=\"white\">\n                  + Create new Safe\n                </Text>\n              </StyledButton>\n            </CardsCol>\n\n            <Divider orientation=\"vertical\" />\n\n            {/* Load safe */}\n            <CardsCol>\n              <StyledTitleOnly size=\"sm\" strong withoutMargin>\n                Add existing Safe\n              </StyledTitleOnly>\n              <Text size=\"xl\">\n                Already have a Safe? Do you want to access your Safe from a different device? Easily add it using your\n                Safe address.\n              </Text>\n              <StyledButton\n                variant=\"bordered\"\n                iconType=\"safe\"\n                iconSize=\"sm\"\n                size=\"lg\"\n                color=\"secondary\"\n                component={Link}\n                to={LOAD_ADDRESS}\n              >\n                <Text size=\"xl\" color=\"secondary\">\n                  Add existing Safe\n                </Text>\n              </StyledButton>\n            </CardsCol>\n          </StyledCardDouble>\n        </Wrapper>\n      </>\n    </Block>\n  )\n}\n","import * as React from 'react'\n\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { boldFont, sm, lg, secondary } from 'src/theme/variables'\n\nconst controlStyle = {\n  backgroundColor: 'white',\n  padding: lg,\n  borderRadius: sm,\n}\n\nconst firstButtonStyle = {\n  marginRight: sm,\n  fontWeight: boldFont,\n  color: secondary,\n}\n\nconst secondButtonStyle = {\n  fontWeight: boldFont,\n}\n\ninterface Props {\n  buttonLabels?: string[]\n  currentStep: number\n  disabled: boolean\n  firstPage: boolean\n  lastPage: boolean\n  penultimate: boolean\n  onPrevious: () => void\n}\n\nconst Controls = ({\n  buttonLabels,\n  currentStep,\n  disabled,\n  firstPage,\n  lastPage,\n  onPrevious,\n  penultimate,\n}: Props): React.ReactElement => {\n  const back = firstPage ? 'Cancel' : 'Back'\n\n  let next\n  if (!buttonLabels) {\n    // eslint-disable-next-line\n    next = firstPage ? 'Start' : penultimate ? 'Review' : lastPage ? 'Submit' : 'Next'\n  } else {\n    next = buttonLabels[currentStep]\n  }\n\n  return (\n    <Row align=\"center\" grow style={controlStyle}>\n      <Col center=\"xs\" xs={12}>\n        <Button onClick={onPrevious} size=\"small\" style={firstButtonStyle} type=\"button\">\n          {back}\n        </Button>\n        <Button\n          color=\"primary\"\n          disabled={disabled}\n          size=\"small\"\n          style={secondButtonStyle}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          {next}\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Controls\n","import FormStep from '@material-ui/core/Step'\nimport StepContent from '@material-ui/core/StepContent'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Stepper from '@material-ui/core/Stepper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormApi } from 'final-form'\n\nimport Controls from './Controls'\n\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Hairline from 'src/components/layout/Hairline'\nimport { history } from 'src/store'\nimport { LoadFormValues } from 'src/routes/load/container/Load'\n\nconst transitionProps = {\n  timeout: {\n    enter: 350,\n    exit: 0,\n  },\n}\n\nexport interface StepperPageFormProps {\n  values: LoadFormValues\n  errors: Record<string, string>\n  form: FormApi\n}\n\ninterface StepperPageProps {\n  validate?: (...args: unknown[]) => undefined | Record<string, string> | Promise<undefined | Record<string, string>>\n  component: (\n    ...args: unknown[]\n  ) => (controls: React.ReactElement, formProps: StepperPageFormProps) => React.ReactElement\n  [key: string]: unknown\n}\n\n// TODO: Remove this magic\n/* eslint-disable */\n// @ts-ignore\nexport const StepperPage = ({}: StepperPageProps): null => null\n/* eslint-enable */\n\ntype StepperFormValues = Record<string, string>\n\ninterface Mutators {\n  [key: string]: (...args: unknown[]) => void\n}\n\ninterface GnoStepperProps<V = StepperFormValues> {\n  initialValues?: Partial<V>\n  onSubmit: (formValues: V) => void\n  steps: string[]\n  buttonLabels?: string[]\n  children: React.ReactNode\n  disabledWhenValidating?: boolean\n  mutators?: Mutators\n  testId?: string\n}\n\nfunction GnoStepper<V>(props: GnoStepperProps<V>): React.ReactElement {\n  const [page, setPage] = useState(0)\n  const [values, setValues] = useState({})\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (props.initialValues) {\n      setValues((prevState) => {\n        return { ...prevState, ...props.initialValues }\n      })\n    }\n  }, [props.initialValues])\n\n  const getPageProps: any = (pages) => {\n    const aux: any = React.Children.toArray(pages)[page]\n    return aux.props\n  }\n\n  const updateInitialProps = useCallback((newInitialProps) => {\n    setValues(newInitialProps)\n  }, [])\n\n  const getActivePageFrom = (pages) => {\n    const activePageProps = getPageProps(pages)\n    const { component, ...restProps } = activePageProps\n\n    return component({ ...restProps, updateInitialProps })\n  }\n\n  const validate = (valuesToValidate) => {\n    const { children } = props\n\n    const activePage: any = React.Children.toArray(children)[page]\n    return activePage.props.validate ? activePage.props.validate(valuesToValidate) : {}\n  }\n\n  const next = async (formValues) => {\n    const { children } = props\n    const activePageProps = getPageProps(children)\n    const { prepareNextInitialProps } = activePageProps\n\n    let pageInitialProps\n    if (prepareNextInitialProps) {\n      pageInitialProps = await prepareNextInitialProps(formValues)\n    }\n\n    const finalValues = { ...formValues, ...pageInitialProps }\n\n    setValues(finalValues)\n    setPage(Math.min(page + 1, React.Children.count(children) - 1))\n  }\n\n  const previous = () => {\n    const firstPage = page === 0\n    if (firstPage) {\n      return history.goBack()\n    }\n\n    return setPage(Math.max(page - 1, 0))\n  }\n\n  const handleSubmit = async (formValues) => {\n    const { children, onSubmit } = props\n    const isLastPage = page === React.Children.count(children) - 1\n    if (isLastPage) {\n      return onSubmit(formValues)\n    }\n\n    return next(formValues)\n  }\n\n  const isLastPage = (pageNumber: number): boolean => {\n    const { steps } = props\n    return pageNumber === steps.length - 1\n  }\n\n  const { buttonLabels, children, disabledWhenValidating = false, mutators, steps, testId } = props\n  const activePage = getActivePageFrom(children)\n\n  const lastPage = isLastPage(page)\n  const penultimate = isLastPage(page + 1)\n\n  return (\n    <>\n      <GnoForm\n        formMutators={mutators}\n        initialValues={values}\n        onSubmit={handleSubmit}\n        testId={testId}\n        validation={validate}\n      >\n        {(submitting, validating, ...rest) => {\n          const disabled = disabledWhenValidating ? submitting || validating : submitting\n          const controls = (\n            <>\n              <Hairline />\n              <Controls\n                buttonLabels={buttonLabels}\n                currentStep={page}\n                disabled={disabled}\n                firstPage={page === 0}\n                lastPage={lastPage}\n                onPrevious={previous}\n                penultimate={penultimate}\n              />\n            </>\n          )\n\n          return (\n            <Stepper activeStep={page} classes={{ root: classes.root }} orientation=\"vertical\">\n              {steps.map((label, index) => {\n                const labelProps: any = {}\n                const isClickable = index < page\n\n                if (isClickable) {\n                  labelProps.onClick = () => {\n                    setPage(index)\n                  }\n                  labelProps.className = classes.pointerCursor\n                }\n\n                return (\n                  <FormStep key={label}>\n                    <StepLabel {...labelProps}>{label}</StepLabel>\n                    <StepContent TransitionProps={transitionProps}>{activePage(controls, ...rest)}</StepContent>\n                  </FormStep>\n                )\n              })}\n            </Stepper>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flex: '1 1 auto',\n    backgroundColor: 'transparent',\n  },\n  pointerCursor: {\n    '& > .MuiStepLabel-iconContainer': {\n      cursor: 'pointer',\n    },\n    '& > .MuiStepLabel-labelContainer': {\n      cursor: 'pointer',\n    },\n  },\n})\n\nexport default GnoStepper\n","import React, { ReactElement, SyntheticEvent } from 'react'\nimport styled from 'styled-components'\n\nimport { Icon, Link, Loader, Text } from '@gnosis.pm/safe-react-components'\n\nimport Button from 'src/components/layout/Button'\nimport { getExplorerInfo } from 'src/config'\nimport Hairline from 'src/components/layout/Hairline'\n\nconst StyledText = styled(Text)`\n  display: inline-flex;\n  a {\n    margin-left: 4px;\n  }\n  svg {\n    position: relative;\n    top: 4px;\n    left: 4px;\n  }\n`\nconst ButtonWithMargin = styled(Button)`\n  margin-right: 16px;\n`\nconst FooterContainer = styled.div`\n  width: 100%;\n  height: 76px;\n\n  button {\n    margin-top: 24px;\n  }\n`\n\nconst LoaderText = styled.span`\n  margin-left: 10px;\n`\n\nexport const GenericFooter = ({ safeCreationTxHash }: { safeCreationTxHash: string }): ReactElement => {\n  const explorerInfo = getExplorerInfo(safeCreationTxHash)\n  const { url, alt } = explorerInfo()\n  const match = /(http|https):\\/\\/(\\w+\\.\\w+)\\/.*/i.exec(url)\n  const explorerDomain = match !== null ? match[2] : 'Network Explorer'\n\n  return (\n    <span>\n      <Text size=\"xl\">This process should take a couple of minutes.</Text>\n      <StyledText size=\"xl\">\n        Follow the progress on{' '}\n        <Link\n          href={url}\n          aria-label={alt}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          data-testid=\"safe-create-explorer-link\"\n          title=\"More info about this in Etherscan\"\n        >\n          <Text size=\"xl\" as=\"span\" color=\"primary\">\n            {explorerDomain}\n          </Text>\n          <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\n        </Link>\n      </StyledText>\n    </span>\n  )\n}\n\nexport const ContinueFooter = ({\n  continueButtonDisabled,\n  onContinue,\n}: {\n  continueButtonDisabled: boolean\n  onContinue: (event: SyntheticEvent) => void\n}): ReactElement => (\n  <FooterContainer>\n    <Hairline />\n    <Button\n      color=\"primary\"\n      disabled={continueButtonDisabled}\n      onClick={onContinue}\n      variant=\"contained\"\n      data-testid=\"continue-btn\"\n    >\n      {continueButtonDisabled ? (\n        <>\n          <Loader size=\"xs\" color=\"secondaryLight\" /> <LoaderText>Loading your safe</LoaderText>\n        </>\n      ) : (\n        <>Get started</>\n      )}\n    </Button>\n  </FooterContainer>\n)\n\nexport const ErrorFooter = ({\n  onCancel,\n  onRetry,\n}: {\n  onCancel: (event: SyntheticEvent) => void\n  onRetry: (event: SyntheticEvent) => void\n}): ReactElement => (\n  <FooterContainer>\n    <Hairline />\n    <ButtonWithMargin onClick={onCancel} variant=\"contained\">\n      Cancel\n    </ButtonWithMargin>\n    <Button color=\"primary\" onClick={onRetry} variant=\"contained\">\n      Retry\n    </Button>\n  </FooterContainer>\n)\n","import { ContinueFooter, GenericFooter } from './components/Footer'\n\nexport const isConfirmationStep = (stepIndex?: number): boolean => stepIndex === 0\n\nexport const steps = [\n  {\n    id: '1',\n    label: 'Waiting for transaction confirmation',\n    description: undefined,\n    instruction: 'Please confirm the Safe creation in your wallet',\n    footerComponent: null,\n  },\n  {\n    id: '2',\n    label: 'Transaction submitted',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '3',\n    label: 'Validating transaction',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '4',\n    label: 'Deploying smart contract',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '5',\n    label: 'Generating your Safe',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '6',\n    label: 'Success',\n    description: 'Your Safe was created successfully',\n    instruction: undefined,\n    footerComponent: ContinueFooter,\n  },\n]\n","export default __webpack_public_path__ + \"static/media/safe-created.99c91369.svg\";","export default __webpack_public_path__ + \"static/media/vault-error.17985c86.svg\";","export default __webpack_public_path__ + \"static/media/creation-process.b0164935.gif\";","import abiDecoder from 'abi-decoder'\nimport { getProxyFactoryDeployment } from '@gnosis.pm/safe-deployments'\nimport { Log } from 'web3-core'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\nimport { LATEST_SAFE_VERSION } from 'src/utils/constants'\n\n// Init abiDecoder with ProxyCreation ABI\nabiDecoder.addABI(\n  getProxyFactoryDeployment({\n    version: LATEST_SAFE_VERSION,\n  })?.abi,\n)\n\nexport const getNewSafeAddressFromLogs = (logs: Log[]): string => {\n  // We find the ProxyCreation event in the logs\n  const proxyCreationEvent = abiDecoder.decodeLogs(logs).find(({ name }) => name === 'ProxyCreation')\n\n  // We extract the proxy creation information from the event parameters\n  const proxyInformation = proxyCreationEvent?.events?.find(({ name }) => name === 'proxy')\n\n  return checksumAddress(proxyInformation?.value || '')\n}\n","import { Loader, Stepper } from '@gnosis.pm/safe-react-components'\nimport React, { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { ErrorFooter } from 'src/routes/opening/components/Footer'\nimport { isConfirmationStep, steps } from './steps'\n\nimport Button from 'src/components/layout/Button'\nimport Heading from 'src/components/layout/Heading'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { instantiateSafeContracts } from 'src/logic/contracts/safeContracts'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport { getWeb3, isTxPendingError } from 'src/logic/wallets/getWeb3'\nimport { background, connected, fontColor } from 'src/theme/variables'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\n\nimport SuccessSvg from './assets/safe-created.svg'\nimport VaultErrorSvg from './assets/vault-error.svg'\nimport VaultLoading from './assets/creation-process.gif'\nimport { TransactionReceipt } from 'web3-core'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { getNewSafeAddressFromLogs } from 'src/routes/opening/utils/getSafeAddressFromLogs'\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 250px auto;\n  grid-template-rows: 43px auto;\n  margin-bottom: 30px;\n`\n\nconst Title = styled(Heading)`\n  grid-column: 1/3;\n  grid-row: 1;\n  margin: 7px 0 0 0 !important;\n`\n\nconst Nav = styled.div`\n  grid-column: 1;\n  grid-row: 2;\n`\n\nconst Body = styled.div`\n  grid-column: 2;\n  grid-row: 2;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 5px;\n  min-width: 700px;\n  padding-top: 70px;\n  box-shadow: 0 0 10px 0 rgba(33, 48, 77, 0.1);\n\n  display: grid;\n  grid-template-rows: 100px 50px 110px 1fr;\n`\n\nconst CardTitle = styled.div`\n  font-size: 20px;\n  padding-top: 10px;\n`\n\ninterface FullParagraphProps {\n  inversecolors: string\n  $stepIndex: number\n}\n\nconst FullParagraph = styled(Paragraph)<FullParagraphProps>`\n  background-color: ${({ $stepIndex }) => ($stepIndex === 0 ? connected : background)};\n  color: ${({ theme, $stepIndex }) => ($stepIndex === 0 ? theme.colors.white : fontColor)};\n  padding: 28px;\n  font-size: 20px;\n  margin-bottom: 16px;\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\n`\n\nconst BodyImage = styled.div`\n  grid-row: 1;\n`\nconst BodyDescription = styled.div`\n  grid-row: 2;\n`\nconst BodyInstruction = styled.div`\n  grid-row: 3;\n  margin: 27px 0;\n`\nconst BodyFooter = styled.div`\n  grid-row: 4;\n\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n`\n\nconst BackButton = styled(Button)`\n  grid-column: 2;\n  margin: 20px auto 0;\n`\n\ntype Props = {\n  creationTxHash?: string\n  submittedPromise?: Promise<TransactionReceipt>\n  onRetry: () => void\n  onSuccess: (createdSafeAddress: string) => void\n  onCancel: () => void\n}\n\nexport const SafeDeployment = ({\n  creationTxHash,\n  onCancel,\n  onRetry,\n  onSuccess,\n  submittedPromise,\n}: Props): React.ReactElement => {\n  const [loading, setLoading] = useState(true)\n  const [stepIndex, setStepIndex] = useState(0)\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState('')\n  const [createdSafeAddress, setCreatedSafeAddress] = useState('')\n\n  const [error, setError] = useState(false)\n  const [intervalStarted, setIntervalStarted] = useState(false)\n  const [waitingSafeDeployed, setWaitingSafeDeployed] = useState(false)\n  const [continueButtonDisabled, setContinueButtonDisabled] = useState(false)\n  const provider = useSelector(providerNameSelector)\n  const dispatch = useDispatch()\n\n  const confirmationStep = isConfirmationStep(stepIndex)\n\n  const navigateToSafe = () => {\n    setContinueButtonDisabled(true)\n    onSuccess(createdSafeAddress)\n  }\n\n  const showSnackbarError = useCallback(\n    (err: Error) => {\n      if (isTxPendingError(err)) {\n        dispatch(enqueueSnackbar({ ...NOTIFICATIONS.TX_PENDING_MSG }))\n      } else {\n        dispatch(enqueueSnackbar({ ...NOTIFICATIONS.CREATE_SAFE_FAILED_MSG }))\n      }\n    },\n    [dispatch],\n  )\n\n  const onError = useCallback(\n    (error: Error) => {\n      setIntervalStarted(false)\n      setWaitingSafeDeployed(false)\n      setContinueButtonDisabled(false)\n      setError(true)\n      logError(Errors._800, error.message)\n      showSnackbarError(error)\n    },\n    [setIntervalStarted, setWaitingSafeDeployed, setContinueButtonDisabled, setError, showSnackbarError],\n  )\n\n  // discard click event value\n  const onRetryTx = () => {\n    setStepIndex(0)\n    setError(false)\n    onRetry()\n  }\n\n  const getImage = () => {\n    if (error) {\n      return VaultErrorSvg\n    }\n\n    if (stepIndex <= 4) {\n      return VaultLoading\n    }\n\n    return SuccessSvg\n  }\n\n  useEffect(() => {\n    const loadContracts = async () => {\n      await instantiateSafeContracts()\n      setLoading(false)\n    }\n\n    if (provider) {\n      loadContracts()\n    }\n  }, [provider])\n\n  // creating safe from from submission\n  useEffect(() => {\n    if (submittedPromise === undefined) {\n      return\n    }\n\n    const handlePromise = async () => {\n      setStepIndex(0)\n      try {\n        const receipt = await submittedPromise\n        setSafeCreationTxHash(receipt.transactionHash)\n        setStepIndex(1)\n        setIntervalStarted(true)\n      } catch (err) {\n        onError(err)\n      }\n    }\n\n    handlePromise()\n  }, [submittedPromise, onError])\n\n  // recovering safe creation from txHash\n  useEffect(() => {\n    if (creationTxHash === undefined) {\n      return\n    }\n    setSafeCreationTxHash(creationTxHash)\n    setStepIndex(1)\n    setIntervalStarted(true)\n  }, [creationTxHash])\n\n  useEffect(() => {\n    if (!intervalStarted) {\n      return\n    }\n\n    const isTxMined = async (txHash) => {\n      const web3 = getWeb3()\n\n      const txResult = await web3.eth.getTransaction(txHash)\n      if (txResult.blockNumber === null) {\n        return false\n      }\n\n      const receipt = await web3.eth.getTransactionReceipt(txHash)\n      if (!receipt.status) {\n        throw Error('TX status reverted')\n      }\n\n      return true\n    }\n\n    const interval = setInterval(async () => {\n      if (stepIndex < 4) {\n        setStepIndex(stepIndex + 1)\n      }\n\n      // safe created using the form\n      if (submittedPromise !== undefined) {\n        submittedPromise.then(() => {\n          setStepIndex(4)\n          setWaitingSafeDeployed(true)\n          setIntervalStarted(false)\n        })\n      }\n\n      // safe pending creation recovered from storage\n      if (creationTxHash !== undefined) {\n        try {\n          const res = await isTxMined(creationTxHash)\n          if (res) {\n            setStepIndex(4)\n            setWaitingSafeDeployed(true)\n            setIntervalStarted(false)\n          }\n        } catch (error) {\n          onError(error)\n        }\n      }\n    }, 3000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [creationTxHash, submittedPromise, intervalStarted, stepIndex, error, onError])\n\n  useEffect(() => {\n    let interval\n\n    const awaitUntilSafeIsDeployed = async (safeCreationTxHash: string) => {\n      try {\n        const web3 = getWeb3()\n        const receipt = await web3.eth.getTransactionReceipt(safeCreationTxHash)\n\n        let safeAddress\n\n        if (receipt.events) {\n          safeAddress = receipt.events.ProxyCreation.returnValues.proxy\n        } else {\n          // If the node doesn't return the events we try to fetch it from logs\n          safeAddress = getNewSafeAddressFromLogs(receipt.logs)\n        }\n\n        setCreatedSafeAddress(safeAddress)\n\n        interval = setInterval(async () => {\n          const code = await web3.eth.getCode(safeAddress)\n          if (code !== EMPTY_DATA) {\n            setStepIndex(5)\n          }\n        }, 1000)\n      } catch (error) {\n        onError(error)\n      }\n    }\n\n    if (!waitingSafeDeployed) {\n      return\n    }\n\n    if (typeof safeCreationTxHash === 'string') {\n      awaitUntilSafeIsDeployed(safeCreationTxHash)\n    }\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [safeCreationTxHash, waitingSafeDeployed, onError])\n\n  if (loading || stepIndex === undefined) {\n    return <Loader size=\"sm\" />\n  }\n\n  let FooterComponent\n  if (error) {\n    FooterComponent = ErrorFooter\n  } else if (steps[stepIndex].footerComponent) {\n    FooterComponent = steps[stepIndex].footerComponent\n  }\n\n  return (\n    <Wrapper>\n      <Title tag=\"h2\" testId=\"safe-creation-process-title\">\n        Safe creation process\n      </Title>\n      <Nav>\n        <Stepper activeStepIndex={stepIndex} error={error} orientation=\"vertical\" steps={steps} />\n      </Nav>\n      <Body>\n        <BodyImage>\n          <Img alt=\"Vault\" height={92} src={getImage()} />\n        </BodyImage>\n\n        <BodyDescription>\n          <CardTitle>{steps[stepIndex].description || steps[stepIndex].label}</CardTitle>\n        </BodyDescription>\n\n        {steps[stepIndex].instruction && (\n          <BodyInstruction>\n            <FullParagraph\n              color=\"primary\"\n              inversecolors={confirmationStep.toString()}\n              noMargin\n              size=\"md\"\n              $stepIndex={stepIndex}\n            >\n              {error ? 'You can Cancel or Retry the Safe creation process.' : steps[stepIndex].instruction}\n            </FullParagraph>\n          </BodyInstruction>\n        )}\n\n        <BodyFooter>\n          {FooterComponent ? (\n            <FooterComponent\n              continueButtonDisabled={continueButtonDisabled}\n              onCancel={onCancel}\n              onClick={onRetryTx}\n              onContinue={navigateToSafe}\n              onRetry={onRetryTx}\n              safeCreationTxHash={safeCreationTxHash}\n            />\n          ) : null}\n        </BodyFooter>\n      </Body>\n\n      {stepIndex !== 0 && (\n        <BackButton color=\"primary\" minWidth={140} onClick={onCancel} data-testid=\"safe-creation-back-btn\">\n          Back\n        </BackButton>\n      )}\n    </Wrapper>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { background, border, lg, screenSm, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      minHeight: '300px',\n      [`@media (min-width: ${screenSm}px)`]: {\n        flexDirection: 'row',\n      },\n    },\n    detailsColumn: {\n      minWidth: '100%',\n      [`@media (min-width: ${screenSm}px)`]: {\n        minWidth: '0',\n      },\n    },\n    ownersColumn: {\n      minWidth: '100%',\n      [`@media (min-width: ${screenSm}px)`]: {\n        minWidth: '0',\n      },\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    info: {\n      backgroundColor: background,\n      flexDirection: 'column',\n      justifyContent: 'center',\n      padding: lg,\n      textAlign: 'center',\n    },\n    owners: {\n      padding: lg,\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    owner: {\n      alignItems: 'center',\n      minWidth: 'fit-content',\n      padding: sm,\n      paddingLeft: lg,\n    },\n    user: {\n      justifyContent: 'left',\n      '& > p': {\n        marginRight: sm,\n      },\n    },\n    open: {\n      paddingLeft: sm,\n      width: 'auto',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n  }),\n)\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { userAccountSelector } from '../wallets/store/selectors'\nimport { estimateGasForDeployingSafe } from 'src/logic/contracts/safeContracts'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { getNetworkInfo } from 'src/config'\nimport { calculateGasPrice } from 'src/logic/wallets/ethTransactions'\n\ntype EstimateSafeCreationGasProps = {\n  addresses: string[]\n  numOwners: number\n  safeCreationSalt: number\n}\n\ntype SafeCreationEstimationResult = {\n  gasEstimation: number // Amount of gas needed for execute or approve the transaction\n  gasCostFormatted: string // Cost of gas in format '< | > 100'\n  gasLimit: number // Minimum gas requited to execute the Tx\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nexport const useEstimateSafeCreationGas = ({\n  addresses,\n  numOwners,\n  safeCreationSalt,\n}: EstimateSafeCreationGasProps): SafeCreationEstimationResult => {\n  const [gasEstimation, setGasEstimation] = useState<SafeCreationEstimationResult>({\n    gasEstimation: 0,\n    gasCostFormatted: '< 0.001',\n    gasLimit: 0,\n  })\n  const userAccount = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    const estimateGas = async () => {\n      if (!addresses.length || !numOwners || !userAccount) {\n        return\n      }\n\n      const gasEstimation = await estimateGasForDeployingSafe(addresses, numOwners, userAccount, safeCreationSalt)\n      const gasPrice = await calculateGasPrice()\n      const estimatedGasCosts = gasEstimation * parseInt(gasPrice, 10)\n      const gasCost = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const gasCostFormatted = formatAmount(gasCost)\n\n      setGasEstimation({\n        gasEstimation,\n        gasCostFormatted,\n        gasLimit: gasEstimation,\n      })\n    }\n\n    estimateGas()\n  }, [numOwners, userAccount, safeCreationSalt, addresses])\n\n  return gasEstimation\n}\n","import TableContainer from '@material-ui/core/TableContainer'\nimport React, { ReactElement, useEffect, useMemo } from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\nimport {\n  CreateSafeValues,\n  getAccountsFrom,\n  getNamesFrom,\n  getSafeCreationSaltFrom,\n} from 'src/routes/open/utils/safeDataExtractor'\n\nimport { FIELD_CONFIRMATIONS, FIELD_NAME, getNumOwnersFrom } from '../fields'\nimport { useStyles } from './styles'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport { useEstimateSafeCreationGas } from 'src/logic/hooks/useEstimateSafeCreationGas'\nimport { FormApi } from 'final-form'\nimport { StepperPageFormProps } from 'src/components/Stepper'\nimport { LoadFormValues } from 'src/routes/load/container/Load'\n\ntype ReviewComponentProps = {\n  values: LoadFormValues\n  form: FormApi\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ReviewComponent = ({ values, form }: ReviewComponentProps): ReactElement => {\n  const classes = useStyles()\n\n  const names = getNamesFrom(values)\n  const addresses = useMemo(() => getAccountsFrom(values), [values])\n\n  const numOwners = getNumOwnersFrom(values)\n  const safeCreationSalt = getSafeCreationSaltFrom(values as CreateSafeValues)\n  const { gasCostFormatted, gasLimit } = useEstimateSafeCreationGas({ addresses, numOwners, safeCreationSalt })\n\n  useEffect(() => {\n    form.mutators.setValue('gasLimit', gasLimit)\n  }, [gasLimit, form.mutators])\n\n  return (\n    <>\n      <Row className={classes.root}>\n        <Col className={classes.detailsColumn} layout=\"column\" xs={4}>\n          <Block className={classes.details}>\n            <Block margin=\"lg\">\n              <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"create-safe-step-three\">\n                Details\n              </Paragraph>\n            </Block>\n            <Block margin=\"lg\">\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                Name of new Safe\n              </Paragraph>\n              <Paragraph\n                className={classes.name}\n                color=\"primary\"\n                noMargin\n                size=\"lg\"\n                weight=\"bolder\"\n                data-testid=\"create-safe-review-name\"\n              >\n                {values[FIELD_NAME]}\n              </Paragraph>\n            </Block>\n            <Block margin=\"lg\">\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                Any transaction requires the confirmation of:\n              </Paragraph>\n              <Paragraph\n                color=\"primary\"\n                noMargin\n                size=\"lg\"\n                weight=\"bolder\"\n                data-testid={`create-safe-review-req-owners-${values[FIELD_CONFIRMATIONS]}`}\n              >\n                {`${values[FIELD_CONFIRMATIONS]} out of ${numOwners} owners`}\n              </Paragraph>\n            </Block>\n          </Block>\n        </Col>\n        <Col className={classes.ownersColumn} layout=\"column\" xs={8}>\n          <TableContainer>\n            <Block className={classes.owners}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${numOwners} Safe owners`}\n              </Paragraph>\n            </Block>\n            <Hairline />\n            {names.map((name, index) => (\n              <React.Fragment key={`name${index}`}>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12} data-testid={`create-safe-owner-details-${index}`}>\n                    <EthHashInfo\n                      data-testid={`create-safe-owner-name-${index}`}\n                      hash={addresses[index]}\n                      name={name}\n                      showAvatar\n                      showCopyBtn\n                      explorerUrl={getExplorerInfo(addresses[index])}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </React.Fragment>\n            ))}\n          </TableContainer>\n        </Col>\n      </Row>\n      <Row align=\"center\" className={classes.info}>\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          You&apos;re about to create a new Safe and will have to confirm a transaction with your currently connected\n          wallet. The creation will cost approximately {gasCostFormatted} {nativeCoin.name}. The exact amount will be\n          determined by your wallet.\n        </Paragraph>\n      </Row>\n    </>\n  )\n}\n\nexport const Review = () =>\n  function ReviewPage(controls: React.ReactNode, props: StepperPageFormProps): React.ReactElement {\n    return (\n      <>\n        <OpenPaper controls={controls} padding={false}>\n          <ReviewComponent {...props} />\n        </OpenPaper>\n      </>\n    )\n  }\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\nimport styled from 'styled-components'\n\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { FIELD_NAME } from 'src/routes/open/components/fields'\nimport { secondary, sm } from 'src/theme/variables'\n\nconst styles = createStyles({\n  root: {\n    display: 'flex',\n    maxWidth: '440px',\n  },\n  text: {\n    flexWrap: 'nowrap',\n  },\n  dot: {\n    marginRight: sm,\n  },\n  links: {\n    '&>a': {\n      color: secondary,\n    },\n  },\n})\n\nconst StyledField = styled(Field)`\n  &.MuiTextField-root {\n    width: 460px;\n  }\n`\n\nconst useSafeNameStyles = makeStyles(styles)\n\nconst SafeNameForm = ({ safeName }: { safeName: string }): React.ReactElement => {\n  const classes = useSafeNameStyles()\n\n  return (\n    <>\n      <Block margin=\"lg\">\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          You are about to create a new Safe with one or more owners. First, let&apos;s give your new Safe a name. This\n          name is only stored locally and will never be shared with Gnosis or any third parties.\n        </Paragraph>\n      </Block>\n      <Block className={classes.root} margin=\"lg\">\n        <StyledField\n          component={TextField}\n          defaultValue={safeName}\n          name={FIELD_NAME}\n          placeholder=\"Name of the new Safe\"\n          text=\"Safe name\"\n          type=\"text\"\n          validate={composeValidators(required, validAddressBookName)}\n          testId=\"create-safe-name-field\"\n        />\n      </Block>\n      <Block margin=\"lg\">\n        <Paragraph className={classes.links} color=\"primary\" noMargin size=\"lg\">\n          By continuing you consent to the{' '}\n          <a href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            terms of use\n          </a>{' '}\n          and{' '}\n          <a href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\n            privacy policy\n          </a>\n          .\n        </Paragraph>\n      </Block>\n    </>\n  )\n}\n\nconst SafeNamePageComponent = () =>\n  function SafeNamePage(controls, { values }): React.ReactElement {\n    const { safeName } = values\n    return (\n      <OpenPaper controls={controls}>\n        <SafeNameForm safeName={safeName} />\n      </OpenPaper>\n    )\n  }\n\nexport default SafeNamePageComponent\n","import { disabled, extraSmallFontSize, lg, md, screenSm, sm, xs } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  root: {\n    display: 'flex',\n  },\n  title: {\n    padding: `${md} ${lg}`,\n  },\n  link: {\n    paddingLeft: `${xs}`,\n    '& svg': {\n      position: 'relative',\n      top: '1px',\n      left: `${xs}`,\n      height: '14px',\n      width: '14px',\n    },\n  },\n  owner: {\n    flexDirection: 'column',\n    marginTop: '12px',\n    padding: `0 ${lg}`,\n    '&:first-child': {\n      marginTop: 0,\n    },\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      flexDirection: 'row',\n    },\n  },\n  ownerName: {\n    marginBottom: '5px',\n    minWidth: '100%',\n    [`@media (min-width: ${screenSm}px)`]: {\n      marginBottom: '0',\n      minWidth: '0',\n    },\n  },\n  ownerAddress: {\n    marginBottom: '15px',\n    minWidth: '100%',\n    [`@media (min-width: ${screenSm}px)`]: {\n      marginBottom: '0',\n      minWidth: '0',\n    },\n  },\n  header: {\n    padding: `${sm} ${lg}`,\n    fontSize: extraSmallFontSize,\n    color: disabled,\n  },\n  name: {\n    marginRight: `${sm}`,\n  },\n  trash: {\n    top: '5px',\n  },\n  add: {\n    justifyContent: 'center',\n  },\n  check: {\n    color: '#03AE60',\n    height: '20px',\n  },\n  remove: {\n    height: '56px',\n    maxWidth: '32px',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  owners: {\n    paddingLeft: md,\n  },\n  ownersAmount: {\n    flexDirection: 'column',\n    [`@media (min-width: ${screenSm}px)`]: {\n      flexDirection: 'row',\n    },\n  },\n  ownersAmountItem: {\n    minWidth: '100%',\n    [`@media (min-width: ${screenSm}px)`]: {\n      minWidth: '0',\n    },\n  },\n})\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Icon, Link, Text } from '@gnosis.pm/safe-react-components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport * as React from 'react'\nimport styled from 'styled-components'\n\nimport { styles } from './style'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport { padOwnerIndex } from 'src/routes/open/utils/padOwnerIndex'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  composeValidators,\n  minValue,\n  mustBeInteger,\n  noErrorsOn,\n  required,\n  minMaxLength,\n  ADDRESS_REPEATED_ERROR,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport {\n  FIELD_CONFIRMATIONS,\n  getNumOwnersFrom,\n  getOwnerAddressBy,\n  getOwnerNameBy,\n} from 'src/routes/open/components/fields'\nimport { getAccountsFrom } from 'src/routes/open/utils/safeDataExtractor'\nimport { useSelector } from 'react-redux'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\nconst { useState } = React\n\nexport const ADD_OWNER_BUTTON = '+ Add another owner'\n\nconst StyledAddressInput = styled(AddressInput)`\n  width: 460px;\n`\n\n/**\n * Validates the whole OwnersForm, specially checks for non-repeated addresses\n *\n * If finds a repeated address, marks it as invalid\n * @param {Object<string, string>} values\n * @return Object<string, string>\n */\nexport const validateOwnersForm = (values: Record<string, string>): Record<string, string> => {\n  const { errors } = Object.keys(values).reduce(\n    (result, key) => {\n      if (/owner\\d+Address/.test(key)) {\n        const address = values[key].toLowerCase()\n\n        if (result.addresses.includes(address)) {\n          result.errors[key] = ADDRESS_REPEATED_ERROR\n        }\n\n        result.addresses.push(address)\n      }\n      return result\n    },\n    { addresses: [] as string[], errors: {} },\n  )\n  return errors\n}\n\nexport const calculateValuesAfterRemoving = (index: number, values: Record<string, string>): Record<string, string> =>\n  Object.keys(values)\n    .sort()\n    .reduce((newValues, key) => {\n      const ownerRelatedField = /owner(\\d+)(Name|Address)/\n\n      if (!ownerRelatedField.test(key)) {\n        // no owner-related field\n        newValues[key] = values[key]\n        return newValues\n      }\n\n      const ownerToRemove = new RegExp(`owner${padOwnerIndex(index)}(Name|Address)`)\n\n      if (ownerToRemove.test(key)) {\n        // skip, doing anything with the removed field\n        return newValues\n      }\n\n      // we only have the owner-related fields to work with\n      // we must reduce the index value for those owners that come after the deleted owner row\n      const [, ownerOrder, ownerField] = key.match(ownerRelatedField) as RegExpMatchArray\n\n      if (Number(ownerOrder) > index) {\n        // reduce by one the order of the owner\n        newValues[`owner${padOwnerIndex(Number(ownerOrder) - 1)}${ownerField}`] = values[key]\n      } else {\n        // previous owners to the deleted row\n        newValues[key] = values[key]\n      }\n\n      return newValues\n    }, {} as Record<string, string>)\n\nconst useStyles = makeStyles(styles)\n\nconst SafeOwnersForm = (props): React.ReactElement => {\n  const { errors, form, values } = props\n  const classes = useStyles()\n\n  const validOwners = getNumOwnersFrom(values)\n  const addressBook = useSelector(currentNetworkAddressBook)\n\n  const [numOwners, setNumOwners] = useState(validOwners)\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n  const [scanQrForOwnerName, setScanQrForOwnerName] = useState(null)\n\n  const openQrModal = (ownerName) => {\n    setScanQrForOwnerName(ownerName)\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onRemoveRow = (index) => () => {\n    const initialValues = calculateValuesAfterRemoving(index, values)\n    form.reset(initialValues)\n\n    setNumOwners(numOwners - 1)\n  }\n\n  const onAddOwner = () => {\n    setNumOwners(numOwners + 1)\n  }\n\n  const handleScan = (value: string | null) => {\n    let scannedAddress = value\n\n    if (scannedAddress?.startsWith('ethereum:')) {\n      scannedAddress = scannedAddress.replace('ethereum:', '')\n    }\n\n    form.mutators.setValue(scanQrForOwnerName, scannedAddress)\n    closeQrModal()\n  }\n\n  return (\n    <>\n      <Block className={classes.title}>\n        <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"create-safe-step-two\">\n          Your Safe will have one or more owners. We have prefilled the first owner with your connected wallet details,\n          but you are free to change this to a different owner.\n          <br />\n          <br />\n          Add additional owners (e.g. wallets of your teammates) and specify how many of them have to confirm a\n          transaction before it gets executed. You can also add/remove owners and change the signature threshold after\n          your Safe is created.\n          <Link\n            href=\"https://help.gnosis-safe.io/en/articles/4772567-what-gnosis-safe-setup-should-i-use\"\n            target=\"_blank\"\n            className={classes.link}\n            rel=\"noreferrer\"\n            title=\"Learn about which Safe setup to use\"\n          >\n            <Text size=\"xl\" as=\"span\" color=\"primary\">\n              Learn about which Safe setup to use\n            </Text>\n            <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\n          </Link>\n        </Paragraph>\n      </Block>\n      <Hairline />\n      <Row className={classes.header}>\n        <Col xs={3}>NAME</Col>\n        <Col xs={7}>ADDRESS</Col>\n      </Row>\n      <Hairline />\n      <Block margin=\"md\" padding=\"md\">\n        {[...Array(Number(numOwners))].map((x, index) => {\n          const addressName = getOwnerAddressBy(index)\n          const ownerName = getOwnerNameBy(index)\n\n          return (\n            <Row className={classes.owner} key={`owner${index}`} data-testid={`create-safe-owner-row`}>\n              <Col className={classes.ownerName} xs={3}>\n                <Field\n                  className={classes.name}\n                  component={TextField}\n                  name={ownerName}\n                  placeholder=\"Owner Name*\"\n                  text=\"Owner Name\"\n                  type=\"text\"\n                  validate={composeValidators(required, minMaxLength(1, 50))}\n                  testId={`create-safe-owner-name-field-${index}`}\n                />\n              </Col>\n              <Col className={classes.ownerAddress} xs={7}>\n                <StyledAddressInput\n                  fieldMutator={(newOwnerAddress) => {\n                    const newOwnerName = addressBook.find((entry) => sameAddress(entry.address, newOwnerAddress))?.name\n                    form.mutators.setValue(addressName, newOwnerAddress)\n                    if (newOwnerName) {\n                      form.mutators.setValue(ownerName, newOwnerName)\n                    }\n                  }}\n                  // eslint-disable-next-line\n                  // @ts-ignore\n                  inputAdornment={\n                    noErrorsOn(addressName, errors) && {\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <CheckCircle className={classes.check} data-testid={`valid-address-${index}`} />\n                        </InputAdornment>\n                      ),\n                    }\n                  }\n                  name={addressName}\n                  placeholder=\"Owner Address*\"\n                  text=\"Owner Address\"\n                  testId={`create-safe-address-field-${index}`}\n                />\n              </Col>\n              <Col center=\"xs\" className={classes.remove} middle=\"xs\" xs={1}>\n                <ButtonHelper onClick={() => openQrModal(addressName)}>\n                  <Icon size=\"sm\" type=\"qrCode\" color=\"icon\" tooltip=\"Scan QR\" />\n                </ButtonHelper>\n              </Col>\n              {index > 0 && (\n                <Col center=\"xs\" className={classes.remove} middle=\"xs\" xs={1}>\n                  <ButtonHelper onClick={onRemoveRow(index)}>\n                    <Icon size=\"sm\" type=\"delete\" color=\"icon\" tooltip=\"Delete\" />\n                  </ButtonHelper>\n                </Col>\n              )}\n            </Row>\n          )\n        })}\n      </Block>\n      <Row align=\"center\" className={classes.add} grow margin=\"xl\">\n        <Button color=\"secondary\" data-testid=\"add-owner-btn\" onClick={onAddOwner}>\n          <Paragraph noMargin size=\"lg\">\n            {ADD_OWNER_BUTTON}\n          </Paragraph>\n        </Button>\n      </Row>\n      <Block className={classes.owner} margin=\"md\" padding=\"md\">\n        <Paragraph color=\"primary\" size=\"md\">\n          Any transaction requires the confirmation of:\n        </Paragraph>\n        <Row align=\"center\" className={classes.ownersAmount} margin=\"xl\">\n          <Col className={classes.ownersAmountItem} xs={1}>\n            <Field\n              component={SelectField}\n              data-testid=\"threshold-select-input\"\n              name={FIELD_CONFIRMATIONS}\n              validate={composeValidators(required, mustBeInteger, minValue(1))}\n            >\n              {[...Array(Number(validOwners))].map((x, index) => (\n                <MenuItem key={`selectOwner${index}`} value={`${index + 1}`} data-testid={`input-${index + 1}`}>\n                  {index + 1}\n                </MenuItem>\n              ))}\n            </Field>\n          </Col>\n          <Col className={classes.ownersAmountItem} xs={10}>\n            <Paragraph\n              className={classes.owners}\n              color=\"primary\"\n              noMargin\n              size=\"lg\"\n              data-testid={`create-safe-req-conf-${validOwners}`}\n            >\n              out of {validOwners} owner(s)\n            </Paragraph>\n          </Col>\n        </Row>\n      </Block>\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={handleScan} />}\n    </>\n  )\n}\n\nexport const SafeOwnersPage = () =>\n  function OpenSafeOwnersPage(controls, { errors, form, values }) {\n    return (\n      <>\n        <OpenPaper controls={controls} padding={false}>\n          <SafeOwnersForm errors={errors} form={form} otherAccounts={getAccountsFrom(values)} values={values} />\n        </OpenPaper>\n      </>\n    )\n  }\n","import IconButton from '@material-ui/core/IconButton'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport * as React from 'react'\n\nimport Stepper, { StepperPage } from 'src/components/Stepper'\nimport Block from 'src/components/layout/Block'\nimport Heading from 'src/components/layout/Heading'\nimport Row from 'src/components/layout/Row'\nimport { instantiateSafeContracts } from 'src/logic/contracts/safeContracts'\nimport { Review } from 'src/routes/open/components/ReviewInformation'\nimport SafeNameField from 'src/routes/open/components/SafeNameForm'\nimport { SafeOwnersPage, validateOwnersForm } from 'src/routes/open/components/SafeOwnersConfirmationsForm'\nimport {\n  FIELD_CONFIRMATIONS,\n  FIELD_CREATION_PROXY_SALT,\n  FIELD_SAFE_NAME,\n  getOwnerAddressBy,\n  getOwnerNameBy,\n} from 'src/routes/open/components/fields'\nimport { WelcomeLayout } from 'src/routes/welcome/components'\nimport { history } from 'src/store'\nimport { secondary, sm } from 'src/theme/variables'\nimport { providerNameSelector, userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { useSelector } from 'react-redux'\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\nimport { SafeProps } from 'src/routes/open/container/Open'\nimport { ADDRESS_BOOK_DEFAULT_NAME } from 'src/logic/addressBook/model/addressBook'\nimport { sameString } from 'src/utils/strings'\n\nconst { useEffect } = React\n\nconst getSteps = () => ['Name', 'Owners and confirmations', 'Review']\n\nexport type InitialValuesForm = {\n  owner0Address?: string\n  owner0Name?: string\n  confirmations: string\n  safeName?: string\n  safeCreationSalt: number\n}\n\nconst useInitialValuesFrom = (userAccount: string, safeProps?: SafeProps): InitialValuesForm => {\n  const ownerName = useSelector((state) => addressBookEntryName(state, { address: userAccount }))\n\n  if (!safeProps) {\n    return {\n      [getOwnerNameBy(0)]: sameString(ownerName, ADDRESS_BOOK_DEFAULT_NAME) ? 'My Wallet' : ownerName,\n      [getOwnerAddressBy(0)]: userAccount,\n      [FIELD_CONFIRMATIONS]: '1',\n      [FIELD_CREATION_PROXY_SALT]: Date.now(),\n    }\n  }\n  let obj = {}\n  const { name, ownerAddresses, ownerNames, threshold } = safeProps\n\n  for (const [index, value] of ownerAddresses.entries()) {\n    const safeName = ownerNames[index] ? ownerNames[index] : 'My Wallet'\n    obj = {\n      ...obj,\n      [getOwnerAddressBy(index)]: value,\n      [getOwnerNameBy(index)]: safeName,\n    }\n  }\n  return {\n    ...obj,\n    [FIELD_CONFIRMATIONS]: threshold || '1',\n    [FIELD_SAFE_NAME]: name,\n    [FIELD_CREATION_PROXY_SALT]: Date.now(),\n  }\n}\n\nconst iconStyle = {\n  color: secondary,\n  padding: sm,\n  marginRight: '5px',\n}\n\nconst back = () => {\n  history.goBack()\n}\n\nconst formMutators = {\n  setValue: ([field, value], state, { changeValue }) => {\n    changeValue(state, field, () => value)\n  },\n}\n\ntype LayoutProps = {\n  onCallSafeContractSubmit: (formValues: unknown) => void\n  safeProps?: SafeProps\n}\n\nexport const Layout = (props: LayoutProps): React.ReactElement => {\n  const { onCallSafeContractSubmit, safeProps } = props\n\n  const provider = useSelector(providerNameSelector)\n  const userAccount = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    if (provider) {\n      instantiateSafeContracts()\n    }\n  }, [provider])\n\n  const steps = getSteps()\n\n  const initialValues = useInitialValuesFrom(userAccount, safeProps)\n\n  if (!provider) {\n    return <WelcomeLayout isOldMultisigMigration />\n  }\n\n  return (\n    <Block>\n      <Row align=\"center\">\n        <IconButton disableRipple onClick={back} style={iconStyle}>\n          <ChevronLeft />\n        </IconButton>\n        <Heading tag=\"h2\" testId=\"create-safe-form-title\">\n          Create new Safe\n        </Heading>\n      </Row>\n      <Stepper\n        initialValues={initialValues}\n        mutators={formMutators}\n        onSubmit={onCallSafeContractSubmit}\n        steps={steps}\n        testId=\"create-safe-form\"\n      >\n        <StepperPage component={SafeNameField} />\n        <StepperPage component={SafeOwnersPage} validate={validateOwnersForm} />\n        <StepperPage component={Review} />\n      </Stepper>\n    </Block>\n  )\n}\n","export const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n","import { Transaction, TransactionReceipt } from 'web3-core'\n\nimport { web3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { sameString } from 'src/utils/strings'\nimport { CodedException, Errors } from 'src/logic/exceptions/CodedException'\n\ntype TxMonitorProps = {\n  sender: string\n  hash: string\n  data: string\n  nonce?: number\n  gasPrice?: string\n}\n\ntype TxMonitorOptions = {\n  delay?: number\n  maxRetries?: number\n}\n\nconst MAX_RETRIES = 720\nconst DEFAULT_DELAY = 5000\n\nasync function findSpeedupTx({ sender, hash, nonce, data }: TxMonitorProps): Promise<Transaction | undefined> {\n  const latestBlock = await web3ReadOnly.eth.getBlock('latest', true)\n\n  const replacementTransaction = latestBlock.transactions.find((transaction) => {\n    // TODO: use gasPrice, timestamp or another better way to differentiate\n    return (\n      sameAddress(transaction.from, sender) &&\n      transaction.nonce === nonce &&\n      !sameString(transaction.hash, hash) &&\n      // if `data` differs, then it's a replacement tx, not a speedup\n      sameString(transaction.input, data)\n    )\n  })\n\n  return replacementTransaction\n}\n\n/**\n * Recursively inspects a pending tx. Until it's found, and returns the mined tx receipt\n *\n * @param {object} txParams\n * @param {string} txParams.sender\n * @param {string} txParams.hash\n * @param {string} txParams.data\n * @param {number | undefined} txParams.nonce\n * @param {string | undefined} txParams.gasPrice\n * @param {object} options\n * @param {number} options.delay\n * @returns {Promise<TransactionReceipt>}\n */\nexport const txMonitor = (\n  { sender, hash, data, nonce, gasPrice }: TxMonitorProps,\n  options?: TxMonitorOptions,\n  tries = 0,\n): Promise<TransactionReceipt> => {\n  return new Promise<TransactionReceipt>((resolve, reject) => {\n    const { maxRetries = MAX_RETRIES } = options || {}\n    if (tries > maxRetries) {\n      reject(new CodedException(Errors._805, 'max retries reached'))\n      return\n    }\n\n    const monitorFn = async (): Promise<unknown> => {\n      // Case 1: this block is accessed for the first time, no nonce\n      if (nonce == null || gasPrice == null) {\n        let params: TxMonitorProps = { sender, hash, data }\n        try {\n          // Find the nonce for the current tx\n          const transaction = await web3ReadOnly.eth.getTransaction(hash)\n          if (transaction) {\n            params = { ...params, nonce: transaction.nonce, gasPrice: transaction.gasPrice }\n          }\n        } catch (e) {\n          // ignore error\n        }\n\n        return txMonitor(params, options, tries + 1)\n          .then(resolve)\n          .catch(reject)\n      }\n\n      // Case 2: the nonce exists, try to get the receipt for the original tx\n      try {\n        const firstTxReceipt = await web3ReadOnly.eth.getTransactionReceipt(hash)\n        if (firstTxReceipt) {\n          return resolve(firstTxReceipt)\n        }\n      } catch (e) {\n        // proceed to case 3\n      }\n\n      // Case 3: original tx not found, try to find a sped-up tx\n      try {\n        const replacementTx = await findSpeedupTx({ sender, hash, nonce, data })\n\n        if (replacementTx) {\n          const replacementReceipt = await web3ReadOnly.eth.getTransactionReceipt(replacementTx.hash)\n\n          // goal achieved\n          if (replacementReceipt) {\n            return resolve(replacementReceipt)\n          }\n\n          // tx exists but no receipt yet, it's pending\n          return txMonitor(\n            {\n              sender,\n              nonce,\n              hash: replacementTx.hash,\n              data: replacementTx.input,\n              gasPrice: replacementTx.gasPrice,\n            },\n            options,\n            tries + 1,\n          )\n            .then(resolve)\n            .catch(reject)\n        }\n      } catch (e) {\n        // ignore error\n      }\n\n      // Neither the original nor a replacement transactions were found, try again\n      txMonitor({ sender, hash, data, nonce, gasPrice }, options, tries + 1)\n        .then(resolve)\n        .catch(reject)\n    }\n\n    setTimeout(monitorFn, options?.delay ?? DEFAULT_DELAY)\n  })\n}\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport { backOff } from 'exponential-backoff'\nimport queryString from 'query-string'\nimport React, { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { generatePath, useLocation } from 'react-router-dom'\nimport { TransactionReceipt } from 'web3-core'\n\nimport { SafeDeployment } from 'src/routes/opening'\nimport { Layout } from 'src/routes/open/components/Layout'\nimport Page from 'src/components/layout/Page'\nimport { getSafeDeploymentTransaction } from 'src/logic/contracts/safeContracts'\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\nimport {\n  CreateSafeValues,\n  getAccountsFrom,\n  getNamesFrom,\n  getSafeCreationSaltFrom,\n  getSafeNameFrom,\n  getThresholdFrom,\n} from 'src/routes/open/utils/safeDataExtractor'\nimport { SAFE_ROUTES, WELCOME_ADDRESS } from 'src/routes/routes'\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\nimport { history } from 'src/store'\nimport { loadFromStorage, removeFromStorage, saveToStorage } from 'src/utils/storage'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookSafeLoad } from 'src/logic/addressBook/store/actions'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\nimport { useAnalytics } from 'src/utils/googleAnalytics'\nimport { sleep } from 'src/utils/timer'\nimport { txMonitor } from 'src/logic/safe/transactions/txMonitor'\n\nconst SAFE_PENDING_CREATION_STORAGE_KEY = 'SAFE_PENDING_CREATION_STORAGE_KEY'\n\ntype LoadedSafeType = CreateSafeValues & { txHash: string }\n\ninterface SafeCreationQueryParams {\n  ownerAddresses: string | string[] | null\n  ownerNames: string | string[] | null\n  threshold: number | null\n  safeName: string | null\n}\n\nexport interface SafeProps {\n  name: string\n  ownerAddresses: string[]\n  ownerNames: string[]\n  threshold: string\n}\n\nconst validateQueryParams = (queryParams: SafeCreationQueryParams): boolean => {\n  const { ownerAddresses, ownerNames, threshold, safeName } = queryParams\n\n  if (!ownerAddresses || !ownerNames || !threshold || !safeName) {\n    return false\n  }\n\n  if (Number.isNaN(threshold)) {\n    return false\n  }\n\n  return threshold > 0 && threshold <= ownerAddresses.length\n}\n\nconst getSafePropsValuesFromQueryParams = (queryParams: SafeCreationQueryParams): SafeProps | undefined => {\n  if (!validateQueryParams(queryParams)) {\n    return\n  }\n\n  const { threshold, safeName, ownerAddresses, ownerNames } = queryParams\n\n  return {\n    name: safeName as string,\n    threshold: (threshold as number).toString(),\n    ownerAddresses: Array.isArray(ownerAddresses) ? ownerAddresses : [ownerAddresses as string],\n    ownerNames: Array.isArray(ownerNames) ? ownerNames : [ownerNames as string],\n  }\n}\n\nexport const createSafe = async (values: CreateSafeValues, userAccount: string): Promise<TransactionReceipt> => {\n  return new Promise((resolve, reject) => {\n    const confirmations = getThresholdFrom(values)\n    const ownerAddresses = getAccountsFrom(values)\n    const safeCreationSalt = getSafeCreationSaltFrom(values)\n    const deploymentTx = getSafeDeploymentTransaction(ownerAddresses, confirmations, safeCreationSalt)\n\n    deploymentTx\n      .send({\n        from: userAccount,\n        gas: values?.gasLimit,\n      })\n      .once('transactionHash', (txHash) => {\n        saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, { txHash, ...values })\n\n        // Monitor the latest block to find a potential speed-up tx\n        txMonitor({ sender: userAccount, hash: txHash, data: deploymentTx.encodeABI() })\n          .then((txReceipt) => {\n            console.log('Speed up tx mined:', txReceipt)\n            resolve(txReceipt)\n          })\n          .catch((error) => {\n            reject(error)\n          })\n      })\n      .then((txReceipt) => {\n        console.log('First tx mined:', txReceipt)\n        resolve(txReceipt)\n      })\n      .catch((error) => {\n        reject(error)\n      })\n  })\n}\n\nconst Open = (): ReactElement => {\n  const [loading, setLoading] = useState(false)\n  const [showProgress, setShowProgress] = useState(false)\n  const [creationTxPromise, setCreationTxPromise] = useState<Promise<TransactionReceipt>>()\n  const [safeCreationPendingInfo, setSafeCreationPendingInfo] = useState<{ txHash?: string } | undefined>()\n  const [safePropsFromUrl, setSafePropsFromUrl] = useState<SafeProps | undefined>()\n  const userAccount = useSelector(userAccountSelector)\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    // #122: Allow to migrate an old Multisig by passing the parameters to the URL.\n    const query = queryString.parse(location.search, { arrayFormat: 'comma' })\n    const { name, owneraddresses, ownernames, threshold } = query\n\n    const safeProps = getSafePropsValuesFromQueryParams({\n      ownerAddresses: owneraddresses,\n      ownerNames: ownernames,\n      threshold: Number(threshold),\n      safeName: name as string | null,\n    })\n\n    setSafePropsFromUrl(safeProps)\n  }, [location])\n\n  // check if there is a safe being created\n  useEffect(() => {\n    const load = async () => {\n      const pendingCreation = await loadFromStorage<{ txHash: string }>(SAFE_PENDING_CREATION_STORAGE_KEY)\n      if (pendingCreation && pendingCreation.txHash) {\n        setSafeCreationPendingInfo(pendingCreation)\n        setShowProgress(true)\n      } else {\n        setShowProgress(false)\n      }\n      setLoading(false)\n    }\n\n    load()\n  }, [])\n\n  const createSafeProxy = async (formValues?: CreateSafeValues) => {\n    let values = formValues\n\n    // save form values, used when the user rejects the TX and wants to retry\n    if (values) {\n      const copy = { ...values }\n      saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, copy)\n    } else {\n      values = (await loadFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)) as CreateSafeValues\n    }\n\n    const receiptPromise = createSafe(values, userAccount)\n    setCreationTxPromise(receiptPromise)\n    setShowProgress(true)\n  }\n\n  const onSafeCreated = async (safeAddress: string): Promise<void> => {\n    const pendingCreation = await loadFromStorage<LoadedSafeType>(SAFE_PENDING_CREATION_STORAGE_KEY)\n\n    let name = ''\n    let ownersNames: string[] = []\n    let ownersAddresses: string[] = []\n\n    if (pendingCreation) {\n      name = getSafeNameFrom(pendingCreation)\n      ownersNames = getNamesFrom(pendingCreation as CreateSafeValues)\n      ownersAddresses = getAccountsFrom(pendingCreation)\n    }\n\n    const owners = ownersAddresses.map((address, index) => makeAddressBookEntry({ address, name: ownersNames[index] }))\n    const safe = makeAddressBookEntry({ address: safeAddress, name })\n    await dispatch(addressBookSafeLoad([...owners, safe]))\n\n    trackEvent({\n      category: 'User',\n      action: 'Created a safe',\n    })\n\n    // a default 5s wait before starting to request safe information\n    await sleep(5000)\n\n    await backOff(() => getSafeInfo(safeAddress), {\n      startingDelay: 750,\n      retry: (e) => {\n        console.info('waiting for client-gateway to provide safe information', e)\n        return true\n      },\n    })\n\n    const safeProps = await buildSafe(safeAddress)\n    await dispatch(addOrUpdateSafe(safeProps))\n\n    await removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\n    const url = {\n      pathname: generatePath(SAFE_ROUTES.ASSETS_BALANCES, {\n        safeAddress: safeProps.address,\n      }),\n      state: {\n        name,\n        tx: pendingCreation?.txHash,\n      },\n    }\n\n    history.push(url)\n  }\n\n  const onCancel = () => {\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\n    history.push({\n      pathname: `${WELCOME_ADDRESS}`,\n    })\n  }\n\n  const onRetry = async () => {\n    const values = await loadFromStorage<{ txHash?: string }>(SAFE_PENDING_CREATION_STORAGE_KEY)\n    delete values?.txHash\n    await saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, values)\n    setSafeCreationPendingInfo(values)\n    createSafeProxy()\n  }\n\n  if (loading || showProgress === undefined) {\n    return <Loader size=\"md\" />\n  }\n\n  return (\n    <Page>\n      {showProgress ? (\n        <SafeDeployment\n          creationTxHash={safeCreationPendingInfo?.txHash}\n          onCancel={onCancel}\n          onRetry={onRetry}\n          onSuccess={onSafeCreated}\n          submittedPromise={creationTxPromise}\n        />\n      ) : (\n        <Layout onCallSafeContractSubmit={createSafeProxy} safeProps={safePropsFromUrl} />\n      )}\n    </Page>\n  )\n}\n\nexport default Open\n"],"sourceRoot":""}