{"version":3,"sources":["../node_modules/@ledgerhq/errors/dist/index.js","../../src/index.js","../../src/Transport.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/ranges/outside.js","../../src/TransportWebUSB.js","../../src/hid-framing.js","../node_modules/semver/index.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/valid.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../../src/webusb.js"],"names":["errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","C","message","fields","Object","assign","this","stack","Error","prototype","deserializeError","object","msg","JSON","parse","e","error","name_1","des","constructor","console","warn","create","prop","hasOwnProperty","captureStackTrace","String","serializeError","value","destroyCircular","from","seen","to","push","_i","_a","keys","length","key","indexOf","slice","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","DisconnectedDevice","DisconnectedDeviceDuringOperation","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportRaceCondition","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","id","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","code","TransportStatusError","statusCode","statusText","find","k","smsg","statusCodeStr","toString","subscribers","log","obj","type","date","i","dispatch","window","cb","a","data","Buffer","statusList","cla","ins","p1","response","sw","s","busyPromise","Promise","r","resolveBusy","unresponsiveReached","timeout","setTimeout","f","res","clearTimeout","exchange","setScrambleKey","close","on","off","emit","setDebugMode","setExchangeTimeout","setExchangeUnresponsiveTimeout","decorateAppAPIMethods","self","decorateAppAPIMethod","_appAPIlock","openTimeout","found","sub","next","reject","complete","listenTimeoutId","listenTimeout","Transport","isSupported","list","listen","open","ErrorMessage_ListenTimeout","ErrorMessage_NoDeviceFound","SemVer","require","module","exports","b","loose","versionA","versionB","compare","compareBuild","Comparator","ANY","Range","satisfies","gt","lt","lte","gte","version","range","hilo","options","gtfn","ltefn","ltfn","comp","ecomp","TypeError","comparators","set","high","low","forEach","comparator","semver","operator","devices","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","blockSize","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","devicesList","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","device","channel","Math","packetSize","interfaceNumber","apdu","framing","hidFraming","blocks","result","buffer","acc","releaseInterface","gracefullyResetDevice","requestLedgerDevice","TransportWebUSB","getLedgerDevices","iface","alternates","transport","onDisconnect","navigator","observer","unsubscribed","getFirstLedgerDevice","descriptor","unsubscribe","asUInt16BE","initialAcc","dataLength","sequence","makeBlocks","nbBlocks","head","chunk","reduceResponse","chunkData","getReducedResult","internalRe","re","src","tokens","t","SEMVER_SPEC_VERSION","compareIdentifiers","rcompareIdentifiers","valid","clean","inc","diff","major","minor","patch","prerelease","rcompare","compareLoose","sort","rsort","eq","neq","cmp","coerce","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","intersects","simplifyRange","subset","trim","replace","release","identifier","undefined","er","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","match","rtl","COERCERTL","exec","index","lastIndex","COERCE","map","c","join","split","versions","max","maxSV","rangeObj","v","test","min","minSV","minver","setMin","compver","raw","format","r1","r2","prev","ranges","simplified","original","simpleSubset","dom","includePrerelease","gtltComp","eqSet","Set","higherGT","lowerLT","add","size","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","ledgerDevices","vendorId","filters","existingDevices"],"mappings":"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","file":"static/js/34.dd06902d.chunk.js","sourcesContent":["/* eslint-disable no-continue */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n","// @flow\n\nimport semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\n\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nconst devices = {\n  blue: {\n    id: \"blue\",\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  nanoS: {\n    id: \"nanoS\",\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion), \"2.0.0\") ? 4 * 1024 : 2 * 1024,\n  },\n  nanoX: {\n    id: \"nanoX\",\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        // this is the legacy one (prototype version). we will eventually drop it.\n        serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n        notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n        writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n      },\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: \"blue\",\n  \"Nano S\": \"nanoS\",\n  \"Nano X\": \"nanoX\",\n};\n\n// $FlowFixMe\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (usbProductId: number): ?DeviceModel => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (productName: string): ?DeviceModel => {\n  const productId = productMap[productName];\n  const deviceModel = devicesList.find((d) => d.id === productId);\n\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: {\n  [_: string]: BluetoothInfos,\n} = {};\n\nfor (let id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = { deviceModel, ...spec };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = () => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (uuid: string): ?BluetoothInfos =>\n  serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport type DeviceModelId = $Keys<typeof devices>;\n\n/**\n *\n */\nexport type DeviceModel = {\n  id: DeviceModelId,\n  productName: string,\n  productIdMM: number,\n  legacyUsbProductId: number,\n  usbOnly: boolean,\n  memorySize: number,\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number,\n  bluetoothSpec?: Array<{\n    serviceUuid: string,\n    writeUuid: string,\n    notifyUuid: string,\n  }>,\n};\n\n/**\n *\n */\nexport type BluetoothInfos = {\n  deviceModel: DeviceModel,\n  serviceUuid: string,\n  writeUuid: string,\n  notifyUuid: string,\n};\n","//@flow\n\nimport EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\n\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = { unsubscribe: () => void };\n\n/**\n */\nexport type Device = Object;\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport type DescriptorEvent<Descriptor> = {\n  type: \"add\" | \"remove\",\n  descriptor: Descriptor,\n  deviceModel?: ?DeviceModel,\n  device?: Device,\n};\n/**\n */\nexport type Observer<Ev> = $ReadOnly<{\n  next: (event: Ev) => mixed,\n  error: (e: any) => mixed,\n  complete: () => mixed,\n}>;\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport<Descriptor> {\n  exchangeTimeout: number = 30000;\n  unresponsiveTimeout: number = 15000;\n  deviceModel: ?DeviceModel = null;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static +isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static +list: () => Promise<Array<Descriptor>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\nconst sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n})\n   */\n  static +listen: (\n    observer: Observer<DescriptorEvent<Descriptor>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\nTransportFoo.open(descriptor).then(transport => ...)\n   */\n  static +open: (\n    descriptor: Descriptor,\n    timeout?: number\n  ) => Promise<Transport<Descriptor>>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: Function) {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: Function) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: *) {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\nTransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout?: number = 3000,\n    listenTimeout?: number\n  ): Promise<Transport<Descriptor>> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: ?Promise<void>;\n\n  // $FlowFixMe\n  exchangeAtomicImpl = async (f) => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n    let resolveBusy;\n    const busyPromise = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n    try {\n      const res = await f();\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Object,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock = null;\n  decorateAppAPIMethod<R, A: any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: *,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","//@flow\nimport Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  TransportInterfaceNotAvailable,\n  TransportWebUSBGestureRequired,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n} from \"@ledgerhq/errors\";\nimport {\n  getLedgerDevices,\n  getFirstLedgerDevice,\n  requestLedgerDevice,\n  isSupported,\n} from \"./webusb\";\n\nconst configurationValue = 1;\nconst endpointNumber = 3;\n\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nexport default class TransportWebUSB extends Transport<USBDevice> {\n  device: USBDevice;\n  deviceModel: ?DeviceModel;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n  interfaceNumber: number;\n\n  constructor(device: USBDevice, interfaceNumber: number) {\n    super();\n    this.device = device;\n    this.interfaceNumber = interfaceNumber;\n    this.deviceModel = identifyUSBProductId(device.productId);\n  }\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<USBDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!unsubscribed) {\n          const deviceModel = identifyUSBProductId(device.productId);\n          observer.next({ type: \"add\", descriptor: device, deviceModel });\n          observer.complete();\n        }\n      },\n      (error) => {\n        if (\n          window.DOMException &&\n          error instanceof window.DOMException &&\n          error.code === 18\n        ) {\n          observer.error(new TransportWebUSBGestureRequired(error.message));\n        } else {\n          observer.error(new TransportOpenUserCancelled(error.message));\n        }\n      }\n    );\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return { unsubscribe };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const device = await requestLedgerDevice();\n    return TransportWebUSB.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebUSB.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a USBDevice\n   */\n  static async open(device: USBDevice) {\n    await device.open();\n    if (device.configuration === null) {\n      await device.selectConfiguration(configurationValue);\n    }\n    const iface = device.configurations[0].interfaces.find(({ alternates }) =>\n      alternates.some((a) => a.interfaceClass === 255)\n    );\n    if (!iface) {\n      throw new TransportInterfaceNotAvailable(\n        \"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\"\n      );\n    }\n    const interfaceNumber = iface.interfaceNumber;\n    try {\n      await device.claimInterface(interfaceNumber);\n    } catch (e) {\n      await device.close();\n      throw new TransportInterfaceNotAvailable(e.message);\n    }\n    const transport = new TransportWebUSB(device, interfaceNumber);\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        // $FlowFixMe\n        navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n    // $FlowFixMe\n    navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    await this.device.releaseInterface(this.interfaceNumber);\n    await gracefullyResetDevice(this.device);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = (apdu: Buffer): Promise<Buffer> =>\n    this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n\n      const framing = hidFraming(channel, packetSize);\n\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.transferOut(endpointNumber, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n      while (!(result = framing.getReducedResult(acc))) {\n        const r = await this.device.transferIn(endpointNumber, packetSize);\n        const buffer = Buffer.from(r.data.buffer);\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"disconnected\")) {\n        this._emitDisconnect(e);\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n      throw e;\n    });\n\n  setScrambleKey() {}\n}\n\nasync function gracefullyResetDevice(device: USBDevice) {\n  try {\n    await device.reset();\n  } catch (err) {\n    console.warn(err);\n  }\n}\n","// @flow\n\nimport { TransportError } from \"@ledgerhq/errors\";\n\nexport type ResponseAcc = ?{\n  data: Buffer,\n  dataLength: number,\n  sequence: number,\n};\n\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n\n      const blocks = [];\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): ?Buffer {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// @flow\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport async function requestLedgerDevice(): Promise<USBDevice> {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({ filters: ledgerDevices });\n  return device;\n}\n\nexport async function getLedgerDevices(): Promise<USBDevice[]> {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nexport async function getFirstLedgerDevice(): Promise<USBDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    !!navigator &&\n      // $FlowFixMe\n      !!navigator.usb &&\n      typeof navigator.usb.getDevices === \"function\"\n  );\n"],"sourceRoot":""}